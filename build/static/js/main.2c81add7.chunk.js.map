{"version":3,"sources":["contexts/StoreProvider.js","services/matchService.js","reducers/store-reducer.js","services/settingsService.js","services/tourneyService.js","components/TabPanel/TabPanel.jsx","components/CenteredSpinner/CenteredSpinner.jsx","components/TourneyCard/TourneyCard.jsx","screens/CurTourneyScreen/CurTourneyScreen.jsx","screens/PrevTourneyScreen/PrevTourneyScreen.jsx","screens/MatchesScreen/MatchesScreen.jsx","components/RoundPicker/RoundPicker.jsx","components/SelectPlayers/SelectPlayers.jsx","screens/NewMatchScreen/NewMatchScreen.jsx","services/socketMessages.js","services/realtimeService.js","components/MatchCard/MatchCard.jsx","screens/ViewMatchScreen/ViewMatchScreen.jsx","screens/SettingsScreen/SettingsScreen.jsx","components/ButtonSave/ButtonSave.jsx","components/ButtonCancel/ButtonCancel.jsx","components/TopBarControls/TopBarControls.jsx","components/TopBar/TopBar.jsx","components/BottomNav/BottomNav.jsx","screens/GridWithBottomMenu/GridWithBottomMenu.jsx","screens/WelcomeScreen/WelcomeScreen.jsx","screens/GridNoMenu/GridNoMenu.jsx","App.js","serviceWorker.js","index.js"],"names":["createContext","state","dispatch","getSavedMatches","getMatchesByTourneyId","tourneyId","filter","m","getCurAndPrevSavedMatches","curTourneyId","allSavedMatches","curSavedMatches","prevSavedMatches","updateSavedMatch","matchDoc","savedMatches","matchIdx","findIndex","_id","push","window","localStorage","setItem","JSON","stringify","parse","getItem","Array","isArray","initialState","settings","deviceId","username","moneyPerSkin","carrySkins","curTourney","newMatchData","viewingMatch","ui","matchesTab","saveBtnDisabled","actions","storeReducer","action","type","payload","matchService","curSavedMatches2","prevSavedMatches2","updatedState","path","location","pathname","substring","lastIndexOf","console","log","init","Date","now","Math","floor","random","updateUsername","setCurTourney","freqMS","a","async","fetch","then","res","json","tourney","setTimeout","TabPanel","props","value","index","children","Typography","component","role","hidden","CenteredSpinner","className","CircularProgress","TourneyCard","isStarted","isCurTourney","isFinished","startDate","curRound","roundState","Card","variant","CardHeader","title","subheader","CurTourneyScreen","useContext","StoreProvider","matches","length","List","ListItem","style","marginTop","PrevTourneyScreen","MatchesScreen","Tabs","onChange","e","newValue","Tab","label","HorizontalRadioGroup","styled","RadioGroup","flexDirection","RoundPicker","round","FormControl","FormLabel","FormControlLabel","control","Radio","color","SelectPlayers","leaderboard","options","useRef","map","p","name","playerId","sort","p1","p2","Autocomplete","multiple","autoComplete","autoHighlight","filterSelectedOptions","width","marginBottom","current","getOptionLabel","player","renderInput","params","TextField","margin","NewMatchScreen","matchData","matchDataInvalid","selectedPlayerIds","parseInt","isNaN","getMatchDataInvalid","useEffect","tourneyTitle","roundNum","toString","undefined","CardContent","min","step","target","Switch","checked","selectedPlayers","savedDispatch","socket","io","createMatch","cb","emit","messages","viewMatch","matchId","stopViewingMatch","MatchCard","match","ViewMatchScreen","id","useParams","realtimeService","SettingsScreen","on","ButtonSave","handleClick","disabled","Button","startIcon","SaveOutlined","size","onClick","ButtonCancel","handleCancel","CancelOutlined","TopBarControls","useLocation","history","useHistory","Add","goBack","err","TopBar","AppBar","position","Toolbar","BottomNav","BottomNavigation","newRoute","showLabels","BottomNavigationAction","icon","GolfCourse","Settings","GridWithBottomMenu","Box","render","WelcomeScreen","useState","setUsername","placeholder","fullWidth","settingsService","GridNoMenu","Container","exact","App","useReducer","tourneyService","Provider","Boolean","hostname","vh","innerHeight","document","documentElement","setProperty","addEventListener","theme","createMuiTheme","palette","primary","main","contrastText","secondary","overrides","MuiBottomNavigationAction","MuiBottomNavigation","backgroundColor","ReactDOM","ThemeProvider","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2c81add7.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport default createContext({state: null, dispatch: null});","export default {\n  getSavedMatches,\n  getMatchesByTourneyId,\n  getCurAndPrevSavedMatches,\n  updateSavedMatch\n};\n\nconst MATCHES_KEY = 'matches';\n\nfunction updateSavedMatch(matchDoc) {\n  const savedMatches = getSavedMatches();\n  const matchIdx = savedMatches.findIndex(m => m._id === matchDoc._id);\n  if (matchIdx === -1) {\n    savedMatches.push(matchDoc);\n  } else {\n    savedMatches[matchIdx] = matchDoc;\n  }\n  window.localStorage.setItem(MATCHES_KEY, JSON.stringify(savedMatches));\n}\n\nfunction getCurAndPrevSavedMatches(curTourneyId) {\n  const allSavedMatches = getSavedMatches();\n  const curSavedMatches = allSavedMatches.filter(m => m.tourneyId === curTourneyId);\n  const prevSavedMatches = allSavedMatches.filter(m => m.tourneyId !== curTourneyId);\n  return [curSavedMatches, prevSavedMatches, allSavedMatches];\n}\n\nfunction getMatchesByTourneyId(tourneyId) {\n  const matches = getSavedMatches();\n  return matches.filter(m => m.tourneyId === tourneyId);\n}\n\nfunction getSavedMatches() {\n  let savedMatches = JSON.parse(window.localStorage.getItem(MATCHES_KEY));\n  if (!Array.isArray(savedMatches)) {\n    // Initialize curMatches to empty array\n    window.localStorage.setItem(MATCHES_KEY, '[]');\n    savedMatches = [];\n  }\n  return savedMatches;\n}","import matchService from '../services/matchService';\n\nexport const initialState = {\n  settings: {\n    deviceId: '',\n    username: '',\n    moneyPerSkin: 0,\n    carrySkins: true\n  },\n  curTourney: null,\n  curSavedMatches: null,\n  prevSavedMatches: null,\n  newMatchData: {},\n  viewingMatch: null,\n  ui: {\n    matchesTab: 'current',\n    saveBtnDisabled: false\n  }\n};\n\nexport const actions = {\n  UPDATE_SETTINGS: 'UPDATE_SETTINGS',\n  UPDATE_USERNAME: 'UPDATE_USERNAME',\n  UPDATE_CUR_TOURNEY: 'UPDATE_CUR_TOURNEY',\n  UPDATE_NEW_MATCH_DATA: 'UPDATE_NEW_MATCH_DATA',\n  UPDATE_VIEWING_MATCH: 'UPDATE_VIEWING_MATCH',\n  STOP_VIEWING_MATCH: 'STOP_VIEWING_MATCH',\n  UPDATE_UI_MATCHES_TAB: 'UPDATE_UI_MATCHES_TAB',\n  UPDATE_UI_SAVE_BTN: 'UPDATE_UI_SAVE_BTN'\n};\n\nfunction storeReducer(state, action) {\n  switch(action.type) {\n    case actions.UPDATE_SETTINGS:\n      return {...state, settings: {...state.settings, ...action.payload}};\n    case actions.UPDATE_USERNAME:\n      return {...state, settings: {...state.settings, username: action.payload}};\n    case actions.UPDATE_CUR_TOURNEY:\n      const [curSavedMatches, prevSavedMatches] = matchService.getCurAndPrevSavedMatches(action.payload._id);\n      return {...state, curTourney: action.payload, curSavedMatches, prevSavedMatches};\n    case actions.UPDATE_NEW_MATCH_DATA:\n      return {...state, newMatchData: {...state.newMatchData, ...action.payload}};\n    case actions.UPDATE_VIEWING_MATCH:\n      matchService.updateSavedMatch(action.payload);\n      const [curSavedMatches2, prevSavedMatches2] = matchService.getCurAndPrevSavedMatches(state.curTourney._id);\n      const updatedState = {...state, curSavedMatches: curSavedMatches2, prevSavedMatches: prevSavedMatches2}\n      // Ensure that match is being viewed before updating\n      const path = window.location.pathname;\n      const matchId = path.substring(path.lastIndexOf('/') + 1);\n      return matchId === action.payload._id ?\n        {...updatedState, viewingMatch: action.payload}\n        :\n        updatedState;\n    case actions.STOP_VIEWING_MATCH:\n      return {...state, viewingMatch: {}};\n    case actions.UPDATE_UI_MATCHES_TAB:\n      return {...state, ui: {...state.ui, matchesTab: action.payload}};\n    case actions.UPDATE_UI_SAVE_BTN:\n      return {...state, ui: {...state.ui, saveBtnDisabled: action.payload}};\n    default:\n      console.log('Received unknow action.type', action.type);\n      return state;\n  }\n}\n\nexport default storeReducer;\n","import { actions } from '../reducers/store-reducer';\n\nexport default {\n  init,\n  updateUsername\n};\n\nconst SETTINGS_KEY = 'settings';\nconst USERNAME_SUBKEY = 'username';\nconst DEVICE_SUBKEY = 'deviceId';\nconst MONEY_PER_SKIN_SUBKEY = 'moneyPerSkin';\nconst CARRY_SKINS_SUBKEY = 'carrySkins';\n\nfunction updateUsername(username, dispatch) {\n  dispatch({type: actions.UPDATE_USERNAME, payload: username});\n  let settings = JSON.parse(window.localStorage.getItem(SETTINGS_KEY));\n  settings[USERNAME_SUBKEY] = username;\n  window.localStorage.setItem(SETTINGS_KEY, JSON.stringify(settings));\n}\n\n// return true if had to initialize (first visit for this user on the device)\nfunction init(dispatch) {\n  let settings = JSON.parse(window.localStorage.getItem(SETTINGS_KEY));\n  if (settings) {\n    const deviceId = settings[DEVICE_SUBKEY];\n    const username = settings[USERNAME_SUBKEY];\n    const moneyPerSkin = settings[MONEY_PER_SKIN_SUBKEY];\n    const carrySkins = settings[CARRY_SKINS_SUBKEY];\n    dispatch({type: actions.UPDATE_SETTINGS, payload: {deviceId, username, moneyPerSkin, carrySkins}});\n    return false;\n  } else {\n    // First visit on this device!\n    settings = {};\n    const deviceId = Date.now() + Math.floor(Math.random() * 1000);\n    settings[DEVICE_SUBKEY] = deviceId;\n    const username = '';\n    settings[USERNAME_SUBKEY] = username;\n    const moneyPerSkin = 5;\n    settings[MONEY_PER_SKIN_SUBKEY] = moneyPerSkin;\n    const carrySkins = true;\n    settings[CARRY_SKINS_SUBKEY] = carrySkins;\n    window.localStorage.setItem(SETTINGS_KEY, JSON.stringify(settings));\n    dispatch({type: actions.UPDATE_SETTINGS, payload: {deviceId, username, moneyPerSkin, carrySkins}});\n    // return true so that app will go to welcome screen & get username\n    return true;\n  }\n}","import { actions } from '../reducers/store-reducer';\n\nconst CUR_TOURNEY_ENDPOINT = '/api/tourneys/current';\n\nexport default {\n  setCurTourney\n};\n\nasync function setCurTourney(dispatch, freqMS) {\n  const tourney = await getCurTourney();\n  dispatch({type: actions.UPDATE_CUR_TOURNEY, payload: tourney});\n  setTimeout(() => setCurTourney(dispatch, freqMS), freqMS);\n}\n\nfunction getCurTourney() {\n  return fetch(CUR_TOURNEY_ENDPOINT).then(res => res.json());\n}\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\nexport default function TabPanel(props) {\n  const {value, index, children} = props;\n  return (\n    <Typography component='div' role='tabpanel'\n      hidden={value !== index}\n    >\n      {value === index && children}\n    </Typography>\n  );\n}","import React from 'react';\nimport { CircularProgress } from '@material-ui/core';\n\nexport default function CenteredSpinner() {\n  return (\n    <section className='flex-col-ctr height-width-100'>\n      <CircularProgress />\n    </section>\n  );\n}\n","import React from 'react';\nimport { Card, CardHeader } from '@material-ui/core';\n\nexport default function TourneyCard({tourney, isCurTourney}) {\n  const { isStarted, isFinished, startDate, curRound, roundState } = tourney;\n\n  function getStatus() {\n    if (isFinished) {\n      return 'Tourney Completed';\n    } else if (isStarted) {\n      return `Round ${curRound} ${roundState}`;\n    } else {\n      return `Starts on ${startDate}`;\n    }\n  }\n\n  return (\n    <Card variant='outlined' className='margin-bottom-1rem'>\n      <CardHeader title={tourney.title} subheader={getStatus()} />\n    </Card>\n  );\n}","import React, { useContext } from 'react';\nimport StoreProvider from '../../contexts/StoreProvider';\nimport { List, ListItem, Typography } from '@material-ui/core';\nimport CenteredSpinner from '../../components/CenteredSpinner/CenteredSpinner';\nimport TourneyCard from '../../components/TourneyCard/TourneyCard';\n\nexport default function CurTourneyScreen() {\n  const {state} = useContext(StoreProvider);\n  const {curTourney, curSavedMatches: matches} = state;\n\n  return (\n    curTourney ?\n      <>\n        <TourneyCard tourney={curTourney} isCurTourney={true} />\n        { \n          matches.length ?\n            <List>\n              <ListItem>\n\n              </ListItem>\n            </List>\n          :\n            <Typography variant='body1' style={{marginTop: '2rem'}}>You Have No Matches</Typography>\n        }\n      </>\n      :\n      <CenteredSpinner />\n  );\n}","import React from 'react';\nimport CenteredSpinner from '../../components/CenteredSpinner/CenteredSpinner';\nimport TourneyCard from '../../components/TourneyCard/TourneyCard';\n\nexport default function PrevTourneyScreen({ state, dispatch }) {\n  return (\n    <h1>TODO: This is the PrevTourneyScreen</h1>\n  );\n}","import React, { useContext } from 'react';\nimport StoreProvider from '../../contexts/StoreProvider';\nimport { actions } from '../../reducers/store-reducer';\nimport { Tabs, Tab } from '@material-ui/core';\nimport TabPanel from '../../components/TabPanel/TabPanel';\nimport CurTourneyScreen from '../CurTourneyScreen/CurTourneyScreen';\nimport PrevTourneyScreen from '../PrevTourneyScreen/PrevTourneyScreen';\n\nexport default function MatchesScreen() {\n  const {state, dispatch} = useContext(StoreProvider);\n  return (\n    <>\n      <Tabs variant='fullWidth' value={state.ui.matchesTab} className='margin-bottom-1rem'\n        onChange={(e, newValue) => dispatch({type: actions.UPDATE_UI_MATCHES_TAB, payload: newValue})}\n      >\n        <Tab value='current' label='Current Tourney' />\n        <Tab value='previous' label='Previous Tourneys' />\n      </Tabs>\n      <TabPanel value={state.ui.matchesTab} index='current'>\n        <CurTourneyScreen />\n      </TabPanel>\n      <TabPanel value={state.ui.matchesTab} index='previous'>\n        <PrevTourneyScreen />\n      </TabPanel>\n    </>\n  );\n}","import React from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport { FormControl, FormControlLabel, FormLabel, RadioGroup, Radio } from '@material-ui/core';\n\nconst HorizontalRadioGroup = styled(RadioGroup)({\n  flexDirection: 'row'\n});\n\nexport default function RoundPicker({round, onChange}) {\n  if (!round || !onChange) return null;\n  return (\n    round ?\n      <FormControl component='fieldset'>\n        <FormLabel component='legend'>Round</FormLabel>\n        <HorizontalRadioGroup value={'' + round} onChange={onChange}>\n          <FormControlLabel value='1' control={<Radio color='primary'/>} label='1' />\n          <FormControlLabel value='2' control={<Radio color='primary'/>} label='2' />\n          <FormControlLabel value='3' control={<Radio color='primary'/>} label='3' />\n          <FormControlLabel value='4' control={<Radio color='primary'/>} label='4' />\n        </HorizontalRadioGroup>\n      </FormControl>\n    :\n      null\n  );\n}","import React, { useRef } from 'react';\nimport { TextField } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\n\nexport default function SelectPlayers({ leaderboard, onChange }) {\n\n  const options = useRef(leaderboard\n    .map(p => ({name: p.name, playerId: p.playerId}))\n    .sort((p1, p2) => p1.name < p2.name ? -1 : 1));\n\n  return (\n    <Autocomplete multiple autoComplete autoHighlight filterSelectedOptions\n      style={{width: '100%', marginBottom: '8rem'}}\n      options={options.current}\n      getOptionLabel={player => player.name}\n      onChange={onChange}\n      renderInput={params => (\n        <TextField\n          {...params}\n          variant='outlined'\n          label='Select Players'\n          margin='normal'\n        />\n      )}\n    />\n  );\n\n}","import React, { useState, useEffect, useContext } from 'react';\nimport StoreProvider from '../../contexts/StoreProvider';\nimport { actions } from '../../reducers/store-reducer';\nimport { CardHeader, CardContent, TextField, FormControlLabel, Switch } from '@material-ui/core';\nimport CenteredSpinner from '../../components/CenteredSpinner/CenteredSpinner';\nimport RoundPicker from '../../components/RoundPicker/RoundPicker';\nimport SelectPlayers from '../../components/SelectPlayers/SelectPlayers';\n\nfunction getDefaultRound(tourney) {\n  if (!tourney.isStarted) return '1';\n  if (tourney.isFinished) return '4';\n  return tourney.curRound.toString();\n}\n\nexport default function NewMatchScreen() {\n  const { state, dispatch } = useContext(StoreProvider);\n  const { curTourney, settings, newMatchData: matchData } = state;\n\n  const matchDataInvalid = getMatchDataInvalid();\n  \n  // Initialize newMatchData in store\n  useEffect(function() {\n    if (!curTourney) return;\n    const {deviceId, username, carrySkins, moneyPerSkin} = settings;\n    const {_id: tourneyId, title: tourneyTitle} = curTourney;\n    dispatch({\n      type: actions.UPDATE_NEW_MATCH_DATA,\n      payload: {\n        deviceId, username, carrySkins, moneyPerSkin,\n        tourneyId, tourneyTitle,\n        roundNum: getDefaultRound(curTourney)\n      }\n    });\n  }, [curTourney]);\n\n  useEffect(function() {\n    dispatch({type: actions.UPDATE_UI_SAVE_BTN, payload: matchDataInvalid});\n  }, [matchDataInvalid]);\n\n  function getMatchDataInvalid() {\n    let {moneyPerSkin, selectedPlayerIds} = matchData;\n    if (!selectedPlayerIds) return true;\n    moneyPerSkin = parseInt(moneyPerSkin);\n    return (selectedPlayerIds.length < 2) || isNaN(moneyPerSkin) || (moneyPerSkin < 0);\n  }\n\n  function handleChangeRound(e, roundNum) {\n    dispatch({type: actions.UPDATE_NEW_MATCH_DATA, payload: {roundNum}});\n  }\n  \n  function handleChangeMoney(e) {\n    dispatch({type: actions.UPDATE_NEW_MATCH_DATA, payload: {moneyPerSkin: e.target.value ? parseInt(e.target.value) : ''}});\n  }\n  \n  function handleChangeCarry(e) {\n    if (e.target) dispatch({type: actions.UPDATE_NEW_MATCH_DATA, payload: {carrySkins: e.target.checked}});\n  }\n  \n  function handleChangePlayers(e, selectedPlayers) {\n    dispatch({type: actions.UPDATE_NEW_MATCH_DATA, payload: {selectedPlayerIds: selectedPlayers.map(p => p.playerId)}});\n  }\n\n  return (\n    curTourney && matchData.carrySkins !== undefined ?\n      <>\n        <CardHeader title='New Match' subheader={curTourney.title} />\n        <CardContent className='flex-col-ctr'>\n          <RoundPicker round={matchData.roundNum} onChange={handleChangeRound} color='primary' />\n          <TextField label='Money Per Skin' type='number' variant='outlined' min='1' step='1' margin='normal'\n            value={matchData.moneyPerSkin} onChange={handleChangeMoney} color='primary'\n          />\n          <FormControlLabel margin='normal' label='Carry Over Skins?' className='MuiFormLabel-root'\n            control={<Switch value='carrySkins' checked={matchData.carrySkins} onChange={handleChangeCarry} color='primary' />}\n          />\n          <SelectPlayers leaderboard={curTourney.leaderboard} onChange={handleChangePlayers} />\n        </CardContent>\n      </>\n      :\n      <CenteredSpinner />\n  );\n}","export default {\n  CREATE_MATCH: 'CREATE_MATCH',\n  START_VIEWING_MATCH: 'START_VIEWING_MATCH',\n  UPDATE_VIEWING_MATCH: 'UPDATE_VIEWING_MATCH',\n  STOP_VIEWING_MATCH: 'STOP_VIEWING_MATCH'\n};","import messages from './socketMessages';\nimport { actions } from '../reducers/store-reducer';\n\nconst socket = window.io();\n\n// Need access to reducer's dispatch\nlet savedDispatch;\n\nexport default {\n  createMatch,\n  viewMatch,\n  stopViewingMatch\n};\n\n/*--- Emitters ---*/\nfunction viewMatch(matchId, dispatch) {\n  savedDispatch = dispatch;\n  socket.emit(messages.START_VIEWING_MATCH, matchId);\n}\n\nfunction stopViewingMatch(matchId) {\n  socket.emit(messages.STOP_VIEWING_MATCH, matchId);\n  savedDispatch({type: actions.STOP_VIEWING_MATCH});\n}\n\nfunction createMatch(matchData, cb) {\n  socket.emit(messages.CREATE_MATCH, matchData, cb);\n}\n\n/*--- Listeners ---*/\nsocket.on(messages.UPDATE_VIEWING_MATCH, function(match) {\n  savedDispatch({type: actions.UPDATE_VIEWING_MATCH, payload: match});\n});\n","import React from 'react';\nimport { Card, CardHeader } from '@material-ui/core';\n\nexport default function MatchCard({match}) {\n\n\n  return (\n    <Card variant='outlined' className='margin-bottom-1rem'>\n      <CardHeader title={match.tourneyTitle} subheader={match.roundNum} />\n    </Card>\n  );\n\n}","import React, { useContext, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport StoreProvider from '../../contexts/StoreProvider';\nimport realtimeService from '../../services/realtimeService';\nimport { List, ListItem, Typography } from '@material-ui/core';\nimport CenteredSpinner from '../../components/CenteredSpinner/CenteredSpinner';\nimport MatchCard from '../../components/MatchCard/MatchCard';\n\nexport default function ViewMatchScreen() {\n  const { id } = useParams();\n  const { state, dispatch } = useContext(StoreProvider);\n  const { viewingMatch } = state;\n\n  useEffect(function() {\n    // Sends a 'VIEW_MATCH' message to server.\n    // viewingMatch state will be updated each time server sends UPDATE_VIEWING_MATCH message\n    realtimeService.viewMatch(id, dispatch);\n    // Return a cleanup function to let the server know we're no longer viewing the match\n    return function() {\n      realtimeService.stopViewingMatch(id);\n    }\n  }, []);\n\n  return (\n    viewingMatch ?\n      <>\n        <MatchCard match={viewingMatch} />\n        \n      </>\n      :\n      <CenteredSpinner />\n  );\n}","import React, { useContext } from 'react';\nimport StoreProvider from '../../contexts/StoreProvider';\nimport { List, ListItem, Typography } from '@material-ui/core';\n\nexport default function SettingsScreen() {\n  const {state} = useContext(StoreProvider);\n  const {settings: {deviceId, username, moneyPerSkin, carrySkins}} = state;\n\n  return (\n    <Typography variant='h2'>Settings Screen</Typography>\n  );\n}","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { SaveOutlined } from '@material-ui/icons';\n\nexport default function ButtonSave({handleClick, disabled}) {\n  return (\n    <Button startIcon={<SaveOutlined />} variant='outlined' size='small' \n      onClick={handleClick} disabled={disabled}\n    >\n      SAVE\n    </Button>\n  );\n}","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { CancelOutlined } from '@material-ui/icons';\n\nexport default function ButtonCancel({handleCancel}) {\n  return (\n    <Button onClick={handleCancel} startIcon={<CancelOutlined />} variant='outlined' size='small'>CANCEL</Button>\n  );\n}","import React, { useContext } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport ButtonSave from '../ButtonSave/ButtonSave';\nimport ButtonCancel from '../ButtonCancel/ButtonCancel';\nimport StoreProvider from '../../contexts/StoreProvider';\nimport realtimeService from '../../services/realtimeService';\n\nexport default function TopBarControls() {\n  const {state} = useContext(StoreProvider);\n  const {ui} = state;\n  const {pathname} = useLocation();\n  const history = useHistory();\n\n  function handleCreateMatch() {\n    realtimeService.createMatch(state.newMatchData, function(err, matchId) {\n      history.push(`/matches/${matchId}`);\n    });\n  }\n\n  function handleCancelNewMatch() {\n    history.goBack();\n  } \n\n  switch (pathname) {\n    case '/':\n      return ui.matchesTab === 'current' ?\n        <Button onClick={() => history.push('/matches/new')} startIcon={<Add />} variant='outlined' size='small'>MATCH</Button>\n        :\n        null;\n    case '/matches/new':\n      return <span>\n        <ButtonCancel handleCancel={handleCancelNewMatch} />&nbsp;\n        <ButtonSave handleClick={handleCreateMatch} disabled={ui.saveBtnDisabled} />\n      </span>;\n    case '/settings':\n    default:\n      return null;\n  }\n\n}","import React from 'react';\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\nimport TopBarControls from '../TopBarControls/TopBarControls';\n\nexport default function TopBar() {\n  return (\n    <AppBar position='sticky'>\n      <Toolbar className='justify-content-between'>\n        <Typography variant=\"h6\">\n          PGA SKINS\n        </Typography>\n        <TopBarControls />\n      </Toolbar>\n    </AppBar>\n  );\n}","import React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { BottomNavigation, BottomNavigationAction } from '@material-ui/core';\nimport { Settings, GolfCourse } from '@material-ui/icons';\n\nexport default function BottomNav() {\n  const history = useHistory();\n  const {pathname} = useLocation();\n  return (\n    <BottomNavigation value={pathname} onChange={(e, newRoute) => history.push(newRoute)} showLabels>\n      <BottomNavigationAction value='/' label='Matches' icon={<GolfCourse />} />\n      <BottomNavigationAction value='/settings' label='Settings' icon={<Settings />} />\n    </BottomNavigation>\n  );\n} \n","import React from 'react';\nimport './GridWithBottomMenu.css';\nimport {Route, Switch} from 'react-router-dom';\nimport {Box} from '@material-ui/core';\nimport MatchesScreen from '../MatchesScreen/MatchesScreen';\nimport NewMatchScreen from '../NewMatchScreen/NewMatchScreen';\nimport ViewMatchScreen from '../ViewMatchScreen/ViewMatchScreen';\nimport SettingsScreen from '../SettingsScreen/SettingsScreen';\nimport TopBar from '../../components/TopBar/TopBar';\nimport BottomNav from '../../components/BottomNav/BottomNav';\n\nfunction GridWithBottomMenu() {\n  return (\n    <Box className='GWBM_grid'>\n      <TopBar />\n      <Box className='GWBM_content'>\n        <Switch>\n          <Route path='/matches/new' render={() =>\n            <NewMatchScreen />\n          } />\n          <Route path='/matches/:id' render={() =>\n            <ViewMatchScreen />\n          } />\n          <Route path='/settings' render={() =>\n            <SettingsScreen />\n          } />\n          <Route path='/' render={() =>\n            <MatchesScreen />\n          } />\n        </Switch>\n      </Box>\n      <BottomNav />\n    </Box>\n  );\n}\n\nexport default GridWithBottomMenu;","import React, {useState, useContext} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport StoreProvider from '../../contexts/StoreProvider';\nimport {Button, TextField, Typography} from '@material-ui/core';\nimport settingsService from '../../services/settingsService';\n\nfunction WelcomeScreen(props) {\n  const history = useHistory();\n  const {dispatch} = useContext(StoreProvider);\n  const [username, setUsername] = useState('');\n\n  function updateUsername() {\n    settingsService.updateUsername(username, dispatch);\n    history.push('/');\n  }\n\n  return (\n    <>\n      <Typography variant='h4' className='text-center' style={{marginBottom: '2rem'}}>Welcome to<br/>PGA SKINS!</Typography>\n      <Typography variant='body2' className='text-center'>Please enter the user name you want others to see when viewing a skins match created by you:<br/><br/></Typography>\n      <TextField autoComplete='off' variant='outlined' placeholder='User Name' fullWidth\n        value={username} onChange={(e) => setUsername(e.target.value)}\n      />\n      <Button onClick={updateUsername} disabled={username.length < 3 || username.length > 20} style={{marginTop: '1rem'}} variant='contained'>SUBMIT</Button>\n    </>\n  );\n}\n\nexport default WelcomeScreen;","import React from 'react';\nimport './GridNoMenu.css';\nimport { Route, Switch } from 'react-router-dom';\nimport { Container, Box } from '@material-ui/core';\nimport TopBar from '../../components/TopBar/TopBar';\nimport WelcomeScreen from '../WelcomeScreen/WelcomeScreen';\n\nfunction GridNoMenu() {\n  return (\n    <Box className='GNM_grid'>\n      <TopBar />\n      <Container className='flex-col-ctr'>\n        <Switch>\n          <Route exact path='/welcome' render={() =>\n            <WelcomeScreen />\n          } />\n        </Switch>\n      </Container>\n    </Box>\n  );\n}\n\nexport default GridNoMenu;","import React, { useEffect, useReducer } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport StoreProvider from './contexts/StoreProvider';\nimport storeReducer, { initialState } from './reducers/store-reducer';\nimport settingsService from './services/settingsService';\nimport tourneyService from './services/tourneyService';\nimport GridWithBottomMenu from './screens/GridWithBottomMenu/GridWithBottomMenu';\nimport GridNoMenu from './screens/GridNoMenu/GridNoMenu';\n\nexport default function App() {\n  const history = useHistory();\n  const [state, dispatch] = useReducer(storeReducer, initialState);\n  \n  useEffect(function () {\n    // Fetch the cur tourney every hour\n    tourneyService.setCurTourney(dispatch, 1000 * 60 * 60);\n    // init will return true if this is the first visit for the device\n    if (settingsService.init(dispatch)) history.push('/welcome');\n  }, []);\n\n  console.log('TODO: remove window.dispatch')\n  window.dispatch = dispatch;\n\n  return (\n    <StoreProvider.Provider value={{state, dispatch}}>\n      <Switch>\n        <Route path='/welcome' render={() =>\n          <GridNoMenu />\n        } />\n        {/* Routes without bottom menu go above */}\n        <Route path='/' render={() =>\n          <GridWithBottomMenu />\n        } />\n      </Switch>\n    </StoreProvider.Provider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport {createMuiTheme, ThemeProvider} from '@material-ui/core/styles';\n\n/*--- hack to fix 100vh on mobile issue ---*/\n// First we get the viewport height and we multiple it by 1% to get a value for a vh unit\nlet vh = window.innerHeight * 0.01;\n// Then we set the value in the --vh custom property to the root of the document\ndocument.documentElement.style.setProperty('--vh', `${vh}px`);\n\n// We listen to the resize event\nwindow.addEventListener('resize', () => {\n  // We execute the same script as before\n  let vh = window.innerHeight * 0.01;\n  document.documentElement.style.setProperty('--vh', `${vh}px`);\n});\n\nconst themeMint = {\n  palette: {\n    primary: { main: '#d5dcd6', contrastText: '#051907' },\n    secondary: { main: '#d8dae8', contrastText: '#051907' }\n  },\n  overrides: {\n    MuiBottomNavigationAction: {\n      \"root\": {\n        \"color\": 'white',\n        \"&$selected\": {\n          \"color\": \"#051907\"\n        }\n      }\n    },\n    MuiBottomNavigation: {\n      \"root\": {\n        backgroundColor: '#d5dcd6'\n      }\n    }\n  }\n};\n\nconst theme = createMuiTheme(themeMint, 'Minty Green');\n\nReactDOM.render(\n  <Router>\n    <Route path='/' render={() =>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    } />\n  </Router>\n  , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}