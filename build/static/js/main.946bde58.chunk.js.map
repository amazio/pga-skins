{"version":3,"sources":["contexts/StoreProvider.js","services/matchService.js","reducers/store-reducer.js","services/settingsService.js","services/tourneyService.js","components/TabPanel/TabPanel.jsx","components/CenteredSpinner/CenteredSpinner.jsx","components/TourneyCard/TourneyCard.jsx","screens/CurTourneyScreen/CurTourneyScreen.jsx","screens/PrevTourneyScreen/PrevTourneyScreen.jsx","screens/MatchesScreen/MatchesScreen.jsx","components/RoundPicker/RoundPicker.jsx","components/SelectPlayers/SelectPlayers.jsx","screens/NewMatchScreen/NewMatchScreen.jsx","screens/SettingsScreen/SettingsScreen.jsx","components/ButtonSave/ButtonSave.jsx","components/ButtonCancel/ButtonCancel.jsx","components/TopBarControls/TopBarControls.jsx","components/TopBar/TopBar.jsx","components/BottomNav/BottomNav.jsx","screens/GridWithBottomMenu/GridWithBottomMenu.jsx","screens/WelcomeScreen/WelcomeScreen.jsx","screens/GridNoMenu/GridNoMenu.jsx","App.js","serviceWorker.js","index.js"],"names":["createContext","state","dispatch","getSavedMatches","getMatchesByTourneyId","tourneyId","filter","m","getCurAndPrevSavedMatches","curTourneyId","allSavedMatches","curSavedMatches","prevSavedMatches","savedMatches","JSON","parse","window","localStorage","getItem","Array","isArray","setItem","initialState","settings","deviceId","username","moneyPerSkin","carrySkins","curTourney","ui","matchesTab","actions","storeReducer","action","type","console","log","payload","matchService","_id","init","Date","now","Math","floor","random","stringify","updateUsername","setCurTourney","freqMS","a","async","fetch","then","res","json","tourney","setTimeout","TabPanel","props","value","index","children","Typography","component","role","hidden","CenteredSpinner","className","CircularProgress","TourneyCard","isStarted","isCurTourney","isFinished","startDate","curRound","roundState","Card","variant","CardHeader","title","subheader","CurTourneyScreen","useContext","StoreProvider","matches","length","List","ListItem","style","marginTop","PrevTourneyScreen","MatchesScreen","Tabs","onChange","e","newValue","Tab","label","HorizontalRadioGroup","styled","RadioGroup","flexDirection","RoundPicker","round","FormControl","FormLabel","FormControlLabel","control","Radio","SelectPlayers","leaderboard","options","map","p","name","playerId","Autocomplete","multiple","autoComplete","autoHighlight","filterSelectedOptions","getOptionLabel","player","renderInput","params","TextField","margin","NewMatchScreen","useState","selectedPlayerIds","matchData","setMatchData","useEffect","toString","Divider","CardContent","color","min","step","parseInt","target","Switch","checked","selectedPlayers","SettingsScreen","ButtonSave","handleClick","Button","onClick","startIcon","SaveOutlined","size","ButtonCancel","handleCancel","CancelOutlined","TopBarControls","pathname","useLocation","history","useHistory","push","Add","goBack","TopBar","AppBar","position","Toolbar","BottomNav","BottomNavigation","newRoute","showLabels","BottomNavigationAction","icon","GolfCourse","Settings","GridWithBottomMenu","Box","path","render","WelcomeScreen","setUsername","marginBottom","placeholder","fullWidth","settingsService","disabled","GridNoMenu","Container","exact","App","useReducer","tourneyService","Provider","Boolean","location","hostname","match","vh","innerHeight","document","documentElement","setProperty","addEventListener","theme","createMuiTheme","palette","primary","main","contrastText","secondary","overrides","MuiBottomNavigationAction","MuiBottomNavigation","backgroundColor","ReactDOM","ThemeProvider","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.946bde58.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport default createContext({state: null, dispatch: null});","export default {\n  getSavedMatches,\n  getMatchesByTourneyId,\n  getCurAndPrevSavedMatches\n  // updateCurMatches\n};\n\nconst MATCHES_KEY = 'matches';\n\nfunction getCurAndPrevSavedMatches(curTourneyId) {\n  const allSavedMatches = getSavedMatches();\n  const curSavedMatches = allSavedMatches.filter(m => m.tourneyId === curTourneyId);\n  const prevSavedMatches = allSavedMatches.filter(m => m.tourneyId !== curTourneyId);\n  return [curSavedMatches, prevSavedMatches, allSavedMatches];\n}\n\n\n\n// function updateCurMatches(tourney) {\n//   let matches = getMatchesByTourneyId(tourney._id);\n//   const lb = tourney.leaderboard;\n//   // Filter matches to those with updated players\n//   matches = matches.filter(m => m.players.some(p => {\n//     // Match has completed\n//     if (m.completed) return false;\n//     const lbPlayer = lb.find(lbP => lbP.playerId === p.playerId);\n//     return p.thru !== lbPlayer.thru;\n//   }));\n//   matches.forEach(match => {\n//     match.players = match.players.map(p => {\n//       const lbPlayer = lb.find(lbP => lbP.playerId === p.playerId);\n//       const lbRound = lbPlayer.rounds.find(r => r.num === match.roundNum);\n//       if (lbRound) p.round = lbRound;\n//       return p;\n//     });\n//     // TODO: computeSkins()\n//     // TODO: persist on server\n//   });\n//   replaceSavedMatches(matches);\n// }\n\n// function replaceSavedMatches(updated) {\n//   let matches = getSavedMatches();\n//   matches = matches.map(m => {\n//     let match = updated.find(u => u._id === m._id);\n//     return match ? match : m;\n//   });\n//   window.localStorage.setItem(MATCHES_KEY, JSON.stringify(matches));\n// }\n\nfunction getMatchesByTourneyId(tourneyId) {\n  const matches = getSavedMatches();\n  return matches.filter(m => m.tourneyId === tourneyId);\n}\n\nfunction getSavedMatches() {\n  let savedMatches = JSON.parse(window.localStorage.getItem(MATCHES_KEY));\n  if (!Array.isArray(savedMatches)) {\n    // Initialize curMatches to empty array\n    window.localStorage.setItem(MATCHES_KEY, '[]');\n    savedMatches = [];\n  }\n  return savedMatches;\n}","import matchService from '../services/matchService';\n\nexport const initialState = {\n  settings: {\n    deviceId: '',\n    username: '',\n    moneyPerSkin: 0,\n    carrySkins: true\n  },\n  curTourney: null,\n  curSavedMatches: null,\n  prevSavedMatches: null,\n  ui: {matchesTab: 'current'}\n};\n\nexport const actions = {\n  UPDATE_SETTINGS: 'UPDATE_SETTINGS',\n  UPDATE_USERNAME: 'UPDATE_USERNAME',\n  UPDATE_CUR_TOURNEY: 'UPDATE_CUR_TOURNEY',\n  UPDATE_UI_MATCHES_TAB: 'UPDATE_UI_MATCHES_TAB',\n  // CREATE_MATCH_PENDING: 'CREATE_MATCH_PENDING'\n};\n\nfunction storeReducer(state, action) {\n  switch(action.type) {\n    case actions.UPDATE_SETTINGS:\n      console.log(action.payload)\n      const {deviceId, username, moneyPerSkin, carrySkins} = action.payload;\n      return {...state, settings: {deviceId, username, moneyPerSkin, carrySkins}};\n    case actions.UPDATE_USERNAME:\n      return {...state, settings: {...state.settings, username: action.payload}};\n    case actions.UPDATE_CUR_TOURNEY:\n      const [curSavedMatches, prevSavedMatches] = matchService.getCurAndPrevSavedMatches(action.payload._id);\n      return {...state, curTourney: action.payload, curSavedMatches, prevSavedMatches};\n    case actions.UPDATE_UI_MATCHES_TAB:\n      return {...state, ui: {...state.ui, matchesTab: action.payload}};\n    // case actions.CREATE_MATCH_PENDING:\n      // create match\n\n    default:\n      console.log('Received unknow action.type');\n      return state;\n  }\n}\n\nexport default storeReducer;\n","import { actions } from '../reducers/store-reducer';\n\nexport default {\n  init,\n  updateUsername\n};\n\nconst SETTINGS_KEY = 'settings';\nconst USERNAME_SUBKEY = 'username';\nconst DEVICE_SUBKEY = 'deviceId';\nconst MONEY_PER_SKIN_SUBKEY = 'moneyPerSkin';\nconst CARRY_SKINS_SUBKEY = 'carrySkins';\n\nfunction updateUsername(username, dispatch) {\n  dispatch({type: actions.UPDATE_USERNAME, payload: username});\n  let settings = JSON.parse(window.localStorage.getItem(SETTINGS_KEY));\n  settings[USERNAME_SUBKEY] = username;\n  window.localStorage.setItem(SETTINGS_KEY, JSON.stringify(settings));\n}\n\n// return true if had to initialize (first visit for this user on the device)\nfunction init(dispatch) {\n  let settings = JSON.parse(window.localStorage.getItem(SETTINGS_KEY));\n  if (settings) {\n    const deviceId = settings[DEVICE_SUBKEY];\n    const username = settings[USERNAME_SUBKEY];\n    const moneyPerSkin = settings[MONEY_PER_SKIN_SUBKEY];\n    const carrySkins = settings[CARRY_SKINS_SUBKEY];\n    dispatch({type: actions.UPDATE_SETTINGS, payload: {deviceId, username, moneyPerSkin, carrySkins}});\n    return false;\n  } else {\n    // First visit on this device!\n    settings = {};\n    const deviceId = Date.now() + Math.floor(Math.random() * 1000);\n    settings[DEVICE_SUBKEY] = deviceId;\n    const username = '';\n    settings[USERNAME_SUBKEY] = username;\n    const moneyPerSkin = 5;\n    settings[MONEY_PER_SKIN_SUBKEY] = moneyPerSkin;\n    const carrySkins = true;\n    settings[CARRY_SKINS_SUBKEY] = carrySkins;\n    window.localStorage.setItem(SETTINGS_KEY, JSON.stringify(settings));\n    dispatch({type: actions.UPDATE_SETTINGS, payload: {deviceId, username, moneyPerSkin, carrySkins}});\n    // return true so that app will go to welcome screen & get username\n    return true;\n  }\n}","import { actions } from '../reducers/store-reducer';\n\nconst CUR_TOURNEY_ENDPOINT = '/api/tourneys/current';\n\nexport default {\n  setCurTourney\n};\n\nasync function setCurTourney(dispatch, freqMS) {\n  const tourney = await getCurTourney();\n  dispatch({type: actions.UPDATE_CUR_TOURNEY, payload: tourney});\n  setTimeout(() => setCurTourney(dispatch, freqMS), freqMS);\n}\n\nfunction getCurTourney() {\n  return fetch(CUR_TOURNEY_ENDPOINT).then(res => res.json());\n}\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\nexport default function TabPanel(props) {\n  const {value, index, children} = props;\n  return (\n    <Typography component='div' role='tabpanel'\n      hidden={value !== index}\n    >\n      {value === index && children}\n    </Typography>\n  );\n}","import React from 'react';\nimport { CircularProgress } from '@material-ui/core';\n\nexport default function CenteredSpinner() {\n  return (\n    <section className='flex-col-ctr height-width-100'>\n      <CircularProgress />\n    </section>\n  );\n}\n","import React from 'react';\nimport { Card, CardHeader } from '@material-ui/core';\n\nexport default function TourneyCard({tourney, isCurTourney}) {\n  const { isStarted, isFinished, startDate, curRound, roundState } = tourney;\n\n  function getStatus() {\n    if (isFinished) {\n      return 'Tourney Completed';\n    } else if (isStarted) {\n      return `Round ${curRound} ${roundState}`;\n    } else {\n      return `Starts on ${startDate}`;\n    }\n  }\n\n  return (\n    <Card variant='outlined' className='margin-bottom-1rem'>\n      <CardHeader title={tourney.title} subheader={getStatus()} />\n    </Card>\n  );\n}","import React, { useContext } from 'react';\nimport StoreProvider from '../../contexts/StoreProvider';\nimport { List, ListItem, Typography } from '@material-ui/core';\nimport CenteredSpinner from '../../components/CenteredSpinner/CenteredSpinner';\nimport TourneyCard from '../../components/TourneyCard/TourneyCard';\n\nexport default function CurTourneyScreen() {\n  const {state} = useContext(StoreProvider);\n  const {curTourney, curSavedMatches: matches} = state;\n\n  return (\n    curTourney ?\n      <>\n        <TourneyCard tourney={curTourney} isCurTourney={true} />\n        { \n          matches.length ?\n            <List>\n              <ListItem>\n\n              </ListItem>\n            </List>\n          :\n            <Typography variant='body1' style={{marginTop: '2rem'}}>You Have No Matches</Typography>\n        }\n      </>\n      :\n      <CenteredSpinner />\n  );\n}","import React from 'react';\nimport CenteredSpinner from '../../components/CenteredSpinner/CenteredSpinner';\nimport TourneyCard from '../../components/TourneyCard/TourneyCard';\n\nexport default function PrevTourneyScreen({ state, dispatch }) {\n  return (\n    <h1>TODO: This is the PrevTourneyScreen</h1>\n  );\n}","import React, { useContext } from 'react';\nimport StoreProvider from '../../contexts/StoreProvider';\nimport { actions } from '../../reducers/store-reducer';\nimport { Tabs, Tab } from '@material-ui/core';\nimport TabPanel from '../../components/TabPanel/TabPanel';\nimport CurTourneyScreen from '../CurTourneyScreen/CurTourneyScreen';\nimport PrevTourneyScreen from '../PrevTourneyScreen/PrevTourneyScreen';\n\nexport default function MatchesScreen() {\n  const {state, dispatch} = useContext(StoreProvider);\n  return (\n    <>\n      <Tabs variant='fullWidth' value={state.ui.matchesTab} className='margin-bottom-1rem'\n        onChange={(e, newValue) => dispatch({type: actions.UPDATE_UI_MATCHES_TAB, payload: newValue})}\n      >\n        <Tab value='current' label='Current Tourney' />\n        <Tab value='previous' label='Previous Tourneys' />\n      </Tabs>\n      <TabPanel value={state.ui.matchesTab} index='current'>\n        <CurTourneyScreen />\n      </TabPanel>\n      <TabPanel value={state.ui.matchesTab} index='previous'>\n        <PrevTourneyScreen />\n      </TabPanel>\n    </>\n  );\n}","import React, { useState } from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport { FormControl, FormControlLabel, FormLabel, RadioGroup, Radio } from '@material-ui/core';\n\nconst HorizontalRadioGroup = styled(RadioGroup)({\n  flexDirection: 'row'\n});\n\nexport default function RoundPicker({round, onChange}) {\n  return (\n    <FormControl component='fieldset'>\n      <FormLabel component='legend'>Round</FormLabel>\n      <HorizontalRadioGroup value={round} onChange={onChange}>\n        <FormControlLabel value='1' control={<Radio />} label='1' />\n        <FormControlLabel value='2' control={<Radio />} label='2' />\n        <FormControlLabel value='3' control={<Radio />} label='3' />\n        <FormControlLabel value='4' control={<Radio />} label='4' />\n      </HorizontalRadioGroup>\n    </FormControl>\n  );\n}","import React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\n\nexport default function SelectPlayers({ leaderboard, onChange }) {\n  const options = leaderboard.map(p => ({name: p.name, playerId: p.playerId}));\n\n  return (\n    <Autocomplete multiple autoComplete autoHighlight filterSelectedOptions\n      options={options}\n      getOptionLabel={player => player.name}\n      onChange={onChange}\n      renderInput={params => (\n        <TextField\n          {...params}\n          variant='outlined'\n          label='Select Players'\n          margin='normal'\n        />\n      )}\n    />\n  );\n}","import React, { useState, useEffect, useContext } from 'react';\nimport StoreProvider from '../../contexts/StoreProvider';\nimport { Card, CardHeader, CardContent, Divider, TextField, FormControlLabel, Switch } from '@material-ui/core';\nimport CenteredSpinner from '../../components/CenteredSpinner/CenteredSpinner';\nimport RoundPicker from '../../components/RoundPicker/RoundPicker';\nimport SelectPlayers from '../../components/SelectPlayers/SelectPlayers';\n\nfunction getDefaultRound(tourney) {\n  console.log(tourney)\n  if (!tourney.isStarted) return '1';\n  if (tourney.isFinished) return '4';\n  console.log(tourney.curRound, tourney.curRound.toString())\n  return tourney.curRound.toString();\n}\n\nexport default function NewMatchScreen() {\n  const { state } = useContext(StoreProvider);\n  const { curTourney, settings } = state;\n  const [matchData, setMatchData] = useState({selectedPlayerIds: []});\n\n  useEffect(function () {\n    setMatchData({\n      ...matchData,\n      deviceId: settings.deviceId,\n      username: settings.username,\n      round: curTourney && getDefaultRound(curTourney),\n      moneyPerSkin: settings.moneyPerSkin,\n      carrySkins: settings.carrySkins\n    });\n  }, [curTourney, settings]);\n\n  function handleChangeRound(e, round) {\n    setMatchData({ ...matchData, round });\n  }\n\n  function handleChangeMoney(e) {\n    setMatchData({ ...matchData, moneyPerSkin: parseInt(e.target.value) });\n  }\n\n  function handleChangeCarry(e) {\n    setMatchData({ ...matchData, carrySkins: e.target.checked });\n  }\n\n  function handleChangePlayers(e, selectedPlayers) {\n    setMatchData({...matchData, selectedPlayerIds: selectedPlayers.map(p => p.playerId)});\n  }\n\n  return (\n    curTourney ?\n      <>\n        <Card variant='outlined' className='margin-bottom-1rem'>\n          <CardHeader title='New Match' subheader={curTourney.title} />\n          <Divider />\n          <CardContent>\n            <RoundPicker round={matchData.round} onChange={handleChangeRound} color='primary' />\n            <TextField label='Money Per Skin' type='number' variant='outlined' min='1' step='1' margin='normal'\n              value={matchData.moneyPerSkin} onChange={handleChangeMoney} color='primary'\n            />\n            <FormControlLabel margin='normal' label='Carry Over Skins?'\n              control={<Switch checked={matchData.carrySkins} onChange={handleChangeCarry} value='' color='primary' />}\n            />\n            <SelectPlayers leaderboard={curTourney.leaderboard} onChange={handleChangePlayers} />\n          </CardContent>\n        </Card>\n      </>\n      :\n      <CenteredSpinner />\n  );\n}","import React, { useContext } from 'react';\nimport StoreProvider from '../../contexts/StoreProvider';\nimport { List, ListItem, Typography } from '@material-ui/core';\n\nexport default function SettingsScreen() {\n  const {state} = useContext(StoreProvider);\n  const {settings: {deviceId, username, moneyPerSkin, carrySkins}} = state;\n\n  return (\n    <Typography variant='h2'>Settings Screen</Typography>\n  );\n}","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { SaveOutlined } from '@material-ui/icons';\n\nexport default function ButtonSave({handleClick}) {\n  return (\n    <Button onClick={handleClick} startIcon={<SaveOutlined />} size='small' style={{color: 'white'}}>SAVE</Button>\n  );\n}","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { CancelOutlined } from '@material-ui/icons';\n\nexport default function ButtonCancel({handleCancel}) {\n  return (\n    <Button onClick={handleCancel} startIcon={<CancelOutlined />} size='small' style={{color: 'white'}}>CANCEL</Button>\n  );\n}","import React, { useContext } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport ButtonSave from '../ButtonSave/ButtonSave';\nimport ButtonCancel from '../ButtonCancel/ButtonCancel';\nimport StoreProvider from '../../contexts/StoreProvider';\n\nexport default function TopBarControls() {\n  const {state, dispatch} = useContext(StoreProvider);\n  const {ui} = state;\n  const {pathname} = useLocation();\n  const history = useHistory();\n\n  function handleSaveMatch() {\n    history.push('/');\n  }\n\n  function handleCancelNewMatch() {\n    history.goBack();\n  } \n\n  switch (pathname) {\n    case '/':\n      return ui.matchesTab === 'current' ?\n        <Button onClick={() => history.push('/matches/new')} startIcon={<Add />} size='small' style={{color: 'white'}}>MATCH</Button>\n        :\n        null;\n    case '/matches/new':\n      return <span>\n        <ButtonCancel handleCancel={handleCancelNewMatch} />&nbsp;\n        <ButtonSave handleClick={handleSaveMatch} />\n      </span>;\n    case '/settings':\n    default:\n      return null;\n  }\n\n}","import React from 'react';\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\nimport TopBarControls from '../TopBarControls/TopBarControls';\n\nexport default function TopBar() {\n  return (\n    <AppBar position='sticky'>\n      <Toolbar className='justify-content-between'>\n        <Typography variant=\"h6\">\n          PGA SKINS\n        </Typography>\n        <TopBarControls />\n      </Toolbar>\n    </AppBar>\n  );\n}","import React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { BottomNavigation, BottomNavigationAction } from '@material-ui/core';\nimport { Settings, GolfCourse } from '@material-ui/icons';\n\nexport default function BottomNav() {\n  const history = useHistory();\n  const {pathname} = useLocation();\n  return (\n    <BottomNavigation value={pathname} onChange={(e, newRoute) => history.push(newRoute)} showLabels>\n      <BottomNavigationAction value='/' label='Matches' icon={<GolfCourse />} />\n      <BottomNavigationAction value='/settings' label='Settings' icon={<Settings />} />\n    </BottomNavigation>\n  );\n} \n","import React from 'react';\nimport './GridWithBottomMenu.css';\nimport {Route, Switch} from 'react-router-dom';\nimport {Box} from '@material-ui/core';\nimport MatchesScreen from '../MatchesScreen/MatchesScreen';\nimport NewMatchScreen from '../NewMatchScreen/NewMatchScreen';\nimport SettingsScreen from '../SettingsScreen/SettingsScreen';\nimport TopBar from '../../components/TopBar/TopBar';\nimport BottomNav from '../../components/BottomNav/BottomNav';\n\nfunction GridWithBottomMenu() {\n  return (\n    <Box className='GWBM_grid'>\n      <TopBar />\n      <Box className='GWBM_content'>\n        <Switch>\n          <Route path='/matches/new' render={() =>\n            <NewMatchScreen />\n          } />\n          <Route path='/settings' render={() =>\n            <SettingsScreen />\n          } />\n          <Route path='/' render={() =>\n            <MatchesScreen />\n          } />\n        </Switch>\n      </Box>\n      <BottomNav />\n    </Box>\n  );\n}\n\nexport default GridWithBottomMenu;","import React, {useState, useContext} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport StoreProvider from '../../contexts/StoreProvider';\nimport {Button, TextField, Typography} from '@material-ui/core';\nimport settingsService from '../../services/settingsService';\n\nfunction WelcomeScreen(props) {\n  const history = useHistory();\n  const {dispatch} = useContext(StoreProvider);\n  const [username, setUsername] = useState('');\n\n  function updateUsername() {\n    settingsService.updateUsername(username, dispatch);\n    history.push('/');\n  }\n\n  return (\n    <>\n      <Typography variant='h4' className='text-center' style={{marginBottom: '2rem'}}>Welcome to<br/>PGA SKINS!</Typography>\n      <Typography variant='body2' className='text-center'>Please enter the user name you want others to see when viewing a skins match created by you:<br/><br/></Typography>\n      <TextField autoComplete='off' variant='outlined' placeholder='User Name' fullWidth\n        value={username} onChange={(e) => setUsername(e.target.value)}\n      />\n      <Button onClick={updateUsername} disabled={username.length < 3 || username.length > 20} style={{marginTop: '1rem'}} variant='contained'>SUBMIT</Button>\n    </>\n  );\n}\n\nexport default WelcomeScreen;","import React from 'react';\nimport './GridNoMenu.css';\nimport { Route, Switch } from 'react-router-dom';\nimport { Container, Box } from '@material-ui/core';\nimport TopBar from '../../components/TopBar/TopBar';\nimport WelcomeScreen from '../WelcomeScreen/WelcomeScreen';\n\nfunction GridNoMenu() {\n  return (\n    <Box className='GNM_grid'>\n      <TopBar />\n      <Container className='flex-col-ctr'>\n        <Switch>\n          <Route exact path='/welcome' render={() =>\n            <WelcomeScreen />\n          } />\n        </Switch>\n      </Container>\n    </Box>\n  );\n}\n\nexport default GridNoMenu;","import React, { useEffect, useReducer } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport StoreProvider from './contexts/StoreProvider';\nimport storeReducer, { initialState } from './reducers/store-reducer';\nimport settingsService from './services/settingsService';\nimport tourneyService from './services/tourneyService';\nimport GridWithBottomMenu from './screens/GridWithBottomMenu/GridWithBottomMenu';\nimport GridNoMenu from './screens/GridNoMenu/GridNoMenu';\n\nexport default function App() {\n  const history = useHistory();\n  const [state, dispatch] = useReducer(storeReducer, initialState);\n  \n  useEffect(function () {\n    // Fetch the cur tourney every hour\n    tourneyService.setCurTourney(dispatch, 1000 * 60 * 60);\n    // init will return true if this is the first visit for the device\n    if (settingsService.init(dispatch)) history.push('/welcome');\n  }, []);\n\n  return (\n    <StoreProvider.Provider value={{state, dispatch}}>\n      <Switch>\n        <Route path='/welcome' render={() =>\n          <GridNoMenu />\n        } />\n        {/* Routes without bottom menu go above */}\n        <Route path='/' render={() =>\n          <GridWithBottomMenu />\n        } />\n      </Switch>\n    </StoreProvider.Provider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport {createMuiTheme, ThemeProvider} from '@material-ui/core/styles';\n\n/*--- hack to fix 100vh on mobile issue ---*/\n// First we get the viewport height and we multiple it by 1% to get a value for a vh unit\nlet vh = window.innerHeight * 0.01;\n// Then we set the value in the --vh custom property to the root of the document\ndocument.documentElement.style.setProperty('--vh', `${vh}px`);\n\n// We listen to the resize event\nwindow.addEventListener('resize', () => {\n  // We execute the same script as before\n  let vh = window.innerHeight * 0.01;\n  document.documentElement.style.setProperty('--vh', `${vh}px`);\n});\n\nconst themeMint = {\n  palette: {\n    primary: { main: '#d5dcd6', contrastText: '#051907' },\n    secondary: { main: '#d8dae8', contrastText: '#051907' }\n  },\n  overrides: {\n    MuiBottomNavigationAction: {\n      \"root\": {\n        \"color\": 'white',\n        \"&$selected\": {\n          \"color\": \"#051907\"\n        }\n      }\n    },\n    MuiBottomNavigation: {\n      \"root\": {\n        backgroundColor: '#d5dcd6'\n      }\n    }\n  }\n};\n\nconst theme = createMuiTheme(themeMint, 'Minty Green');\n\nReactDOM.render(\n  <Router>\n    <Route path='/' render={() =>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    } />\n  </Router>\n  , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}