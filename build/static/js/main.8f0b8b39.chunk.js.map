{"version":3,"sources":["contexts/StoreProvider.js","services/settingsService.js","services/matchService.js","reducers/store-reducer.js","services/realtimeService.js","services/socketMessages.js","services/tourneyService.js","components/TabPanel/TabPanel.jsx","components/CenteredSpinner/CenteredSpinner.jsx","components/TourneyCard/TourneyCard.jsx","components/PlayerChip/PlayerChip.jsx","components/MatchItem/MatchItem.jsx","components/MatchList/MatchList.jsx","screens/CurTourneyScreen/CurTourneyScreen.jsx","screens/PrevTourneyScreen/PrevTourneyScreen.jsx","screens/MatchesScreen/MatchesScreen.jsx","components/RoundPicker/RoundPicker.jsx","components/SelectPlayers/SelectPlayers.jsx","screens/NewMatchScreen/NewMatchScreen.jsx","components/MatchGrid/MatchGrid.jsx","components/MatchSummary/MatchSummary.jsx","components/MatchCard/MatchCard.jsx","screens/ViewMatchScreen/ViewMatchScreen.jsx","screens/SettingsScreen/SettingsScreen.jsx","components/ConfirmDialog/ConfirmDialog.jsx","components/ButtonSave/ButtonSave.jsx","components/ButtonCancel/ButtonCancel.jsx","components/ButtonShare/ButtonShare.jsx","components/ButtonDelete/ButtonDelete.jsx","components/TopBarControls/TopBarControls.jsx","components/TopBar/TopBar.jsx","components/BottomNav/BottomNav.jsx","screens/GridWithBottomMenu/GridWithBottomMenu.jsx","screens/WelcomeScreen/WelcomeScreen.jsx","screens/GridNoMenu/GridNoMenu.jsx","App.js","serviceWorker.js","index.js"],"names":["createContext","state","dispatch","initialize","settings","JSON","parse","window","localStorage","getItem","deviceId","Date","now","Math","floor","random","setItem","stringify","type","actions","UPDATE_SETTINGS","payload","username","moneyPerSkin","carrySkins","getSettings","updateSettings","newSettings","updateUsername","UPDATE_USERNAME","getSavedMatches","setSavedMatches","matches","sort","matchSort","updateSavedMatch","matchDoc","savedMatches","matchIdx","findIndex","m","_id","unshift","saveNewMatch","deleteMatch","matchId","filter","a","b","createdAt","Array","isArray","initialState","settingsService","curTourney","matchService","formData","viewingMatch","ui","matchesTab","saveBtnDisabled","UPDATE_CUR_TOURNEY","UPDATE_FORM_DATA","UPDATE_VIEWING_MATCH","CREATE_MATCH","DELETE_MATCH","SET_ALL_MATCHES","STOP_VIEWING_MATCH","UPDATE_UI_MATCHES_TAB","UPDATE_UI_SAVE_BTN","storeReducer","savedDispatch","action","updatedSavedMatches","console","log","socket","io","setDispatch","syncMatchesWithServer","async","localMatchIds","map","emit","messages","matchesOnServer","createMatch","matchData","cb","viewMatch","matchExists","stopViewingMatch","isMatchOwner","on","match","setCurTourney","fetch","then","res","json","tourney","TabPanel","props","value","index","children","Typography","component","role","hidden","CenteredSpinner","className","CircularProgress","TourneyCard","isCurTourney","isStarted","isFinished","startDate","curRound","roundState","CardHeader","title","subheader","formatMoney","money","absMoney","abs","PlayerChip","player","Chip","label","name","icon","Person","variant","MatchItem","statusMsg","tourneyRound","completed","roundNum","undefined","createdMsg","toLocaleString","split","splice","length","join","Card","style","fontSize","players","p","key","playerId","MatchList","to","CurTourneyScreen","useContext","StoreProvider","tourneyId","marginTop","PrevTourneyScreen","tourneys","reduce","acc","some","t","tourneyTitle","Fragment","MatchesScreen","Tabs","onChange","e","newValue","Tab","HorizontalRadioGroup","styled","RadioGroup","flexDirection","RoundPicker","round","FormControl","FormLabel","FormControlLabel","control","Radio","color","SelectPlayers","leaderboard","options","useRef","p1","p2","Autocomplete","multiple","autoComplete","autoHighlight","filterSelectedOptions","width","marginBottom","current","getOptionLabel","renderInput","params","TextField","margin","NewMatchScreen","matchDataInvalid","selectedPlayerIds","parseInt","isNaN","getMatchDataInvalid","useEffect","toString","CardContent","min","step","target","id","Switch","checked","selectedPlayers","empty18Holes","fill","_","gridSpacer","idx","MatchGrid","pars","frontPars","backPars","playerWithHoles","find","holes","h","holeNum","par","skins","initials","nm","toUpperCase","borderColor","skin","carry","backgroundColor","strokes","gridColumn","getInitials","lastInitial","lastIndexOf","MatchSummary","numSkins","hole","TableContainer","Table","size","TableHead","TableRow","TableCell","colSpan","align","TableBody","MatchCard","subHeader","ViewMatchScreen","useParams","realtimeService","SettingsScreen","useState","setFormData","disableSaveBtn","ConfirmDialog","isConfirmOpen","handleClose","dialogContent","confirmBtnText","Dialog","open","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","onClick","ButtonSave","handleClick","disabled","startIcon","SaveOutlined","ButtonCancel","handleCancel","CancelOutlined","ButtonShare","handleShare","ShareOutlined","ButtonDelete","handleDelete","DeleteOutlined","TopBarControls","showCopyMsg","setShowCopyMsg","isConfirmDeleteOpen","setIsConfirmDeleteOpen","pathname","useLocation","history","useHistory","inputEl","goBack","push","Add","clear","err","startsWith","select","document","execCommand","ref","onFocus","blur","defaultValue","location","href","position","Snackbar","anchorOrigin","vertical","horizontal","onClose","autoHideDuration","message","confirmed","replace","TopBar","AppBar","Toolbar","BottomNav","BottomNavigation","newRoute","showLabels","BottomNavigationAction","GolfCourse","Settings","GridWithBottomMenu","Box","path","render","WelcomeScreen","setUsername","placeholder","fullWidth","GridNoMenu","Container","exact","App","useReducer","timerId","tourneyService","clearInterval","Provider","Boolean","hostname","vh","innerHeight","documentElement","setProperty","addEventListener","theme","createMuiTheme","palette","primary","main","contrastText","secondary","overrides","MuiBottomNavigationAction","MuiBottomNavigation","ReactDOM","ThemeProvider","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8f0b8b39.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport default createContext({state: null, dispatch: null});","import { actions } from '../reducers/store-reducer';\n\nexport default {\n  initialize,\n  getSettings,\n  updateSettings,\n  updateUsername\n};\n\nconst SETTINGS_KEY = 'settings';\nconst USERNAME_SUBKEY = 'username';\nconst DEVICE_SUBKEY = 'deviceId';\nconst MONEY_PER_SKIN_SUBKEY = 'moneyPerSkin';\nconst CARRY_SKINS_SUBKEY = 'carrySkins';\n\nfunction getSettings() {\n  return JSON.parse(window.localStorage.getItem(SETTINGS_KEY));\n}\n\nfunction updateSettings(newSettings) {\n  let settings = JSON.parse(window.localStorage.getItem(SETTINGS_KEY));\n  window.localStorage.setItem(SETTINGS_KEY, JSON.stringify({...settings, ...newSettings}));\n}\n\nfunction updateUsername(username, dispatch) {\n  let settings = JSON.parse(window.localStorage.getItem(SETTINGS_KEY));\n  settings[USERNAME_SUBKEY] = username;\n  window.localStorage.setItem(SETTINGS_KEY, JSON.stringify(settings));\n  dispatch({type: actions.UPDATE_USERNAME, payload: username});\n}\n\n// return true if had to initialize (first visit for this user on the device)\nfunction initialize(dispatch) {\n  let settings = JSON.parse(window.localStorage.getItem(SETTINGS_KEY));\n  // FYI, store-reducer would have already set the initialState from the current settings\n  if (settings) {\n    return false;\n  } else { \n    // First visit on this device!\n    settings = {};\n    const deviceId = Date.now() + Math.floor(Math.random() * 1000);\n    settings[DEVICE_SUBKEY] = deviceId;\n    const username = '';\n    settings[USERNAME_SUBKEY] = username;\n    const moneyPerSkin = 5;\n    settings[MONEY_PER_SKIN_SUBKEY] = moneyPerSkin;\n    const carrySkins = true;\n    settings[CARRY_SKINS_SUBKEY] = carrySkins;\n    window.localStorage.setItem(SETTINGS_KEY, JSON.stringify(settings));\n    dispatch({type: actions.UPDATE_SETTINGS, payload: {deviceId, username, moneyPerSkin, carrySkins}});\n    // return true so that app will go to welcome screen & get username\n    return true;\n  }\n}","export default {\n  getSavedMatches,\n  setSavedMatches,\n  // getMatchesByTourneyId,\n  // getCurAndPrevSavedMatches,\n  updateSavedMatch,\n  saveNewMatch,\n  deleteMatch\n};\n\nconst MATCHES_KEY = 'matches';\n\n// Callback used to sort matches\nfunction matchSort(a, b) {\n  return (a.createdAt > b.createdAt) ? -1 : 1;\n}\n\n// Used to sync with matches that exist on server (may have been deleted)\nfunction setSavedMatches(matches) {\n  matches.sort(matchSort);\n  window.localStorage.setItem(MATCHES_KEY, JSON.stringify(matches));\n}\n\nfunction deleteMatch(matchId) {\n  let savedMatches = getSavedMatches();\n  savedMatches = savedMatches.filter(m => m._id !== matchId);\n  window.localStorage.setItem(MATCHES_KEY, JSON.stringify(savedMatches));\n  return savedMatches;\n}\n\nfunction saveNewMatch(matchDoc) {\n  const savedMatches = getSavedMatches();\n  savedMatches.unshift(matchDoc);\n  savedMatches.sort(matchSort);\n  window.localStorage.setItem(MATCHES_KEY, JSON.stringify(savedMatches));\n}\n\nfunction updateSavedMatch(matchDoc) {\n  if (!matchDoc) return;\n  const savedMatches = getSavedMatches();\n  const matchIdx = savedMatches.findIndex(m => m._id === matchDoc._id);\n  if (matchIdx === -1) {\n    savedMatches.unshift(matchDoc);\n    savedMatches.sort(matchSort);\n  } else {\n    savedMatches[matchIdx] = matchDoc;\n  }\n  window.localStorage.setItem(MATCHES_KEY, JSON.stringify(savedMatches));\n}\n\n// function getMatchesByTourneyId(tourneyId) {\n//   const matches = getSavedMatches();\n//   return matches.filter(m => m.tourneyId === tourneyId);\n// }\n\nfunction getSavedMatches() {\n  let savedMatches = JSON.parse(window.localStorage.getItem(MATCHES_KEY));\n  if (!Array.isArray(savedMatches)) {\n    // Initialize curMatches to empty array\n    window.localStorage.setItem(MATCHES_KEY, '[]');\n    savedMatches = [];\n  }\n  return savedMatches;\n}","import settingsService from '../services/settingsService';\nimport matchService from '../services/matchService';\n\nconst settings = settingsService.getSettings();\nconst savedMatches = matchService.getSavedMatches();\n\nexport const initialState = {\n  settings: settings || {\n    deviceId: '',\n    username: '',\n    moneyPerSkin: 0,\n    carrySkins: true\n  },\n  curTourney: null,\n  savedMatches,\n  formData: {},\n  viewingMatch: null,\n  ui: {\n    matchesTab: 'current',\n    saveBtnDisabled: false\n  }\n};\n\nexport const actions = {\n  UPDATE_SETTINGS: 'UPDATE_SETTINGS',\n  UPDATE_USERNAME: 'UPDATE_USERNAME',\n  UPDATE_CUR_TOURNEY: 'UPDATE_CUR_TOURNEY',\n  UPDATE_FORM_DATA: 'UPDATE_FORM_DATA',\n  UPDATE_VIEWING_MATCH: 'UPDATE_VIEWING_MATCH',\n  CREATE_MATCH: 'CREATE_MATCH',\n  DELETE_MATCH: 'DELETE_MATCH',\n  SET_ALL_MATCHES: 'SET_ALL_MATCHES',\n  STOP_VIEWING_MATCH: 'STOP_VIEWING_MATCH',\n  UPDATE_UI_MATCHES_TAB: 'UPDATE_UI_MATCHES_TAB',\n  UPDATE_UI_SAVE_BTN: 'UPDATE_UI_SAVE_BTN'\n};\n\nfunction storeReducer(state, action) {\n  switch(action.type) {\n    case actions.UPDATE_SETTINGS:\n      settingsService.updateSettings(action.payload);\n      return {...state, settings: {...state.settings, ...action.payload}};\n    case actions.UPDATE_USERNAME:\n      return {...state, settings: {...state.settings, username: action.payload}};\n    case actions.UPDATE_CUR_TOURNEY:\n      return {...state, curTourney: action.payload};\n    case actions.UPDATE_FORM_DATA:\n      return {...state, formData: {...state.formData, ...action.payload}};\n    case actions.UPDATE_VIEWING_MATCH:\n      matchService.updateSavedMatch(action.payload);\n      return {...state, viewingMatch: action.payload};\n    case actions.SET_ALL_MATCHES:\n      matchService.setSavedMatches(action.payload);\n      return {...state, savedMatches: action.payload};\n    case actions.STOP_VIEWING_MATCH:\n      return {...state, viewingMatch: null};\n    case actions.CREATE_MATCH:\n      matchService.saveNewMatch(action.payload);\n      const savedMatches = matchService.getSavedMatches();\n      return {...state, viewingMatch: action.payload, savedMatches, formData: {}};\n    case actions.DELETE_MATCH:\n      const updatedSavedMatches = matchService.deleteMatch(action.payload);\n      return {...state, savedMatches: updatedSavedMatches, viewingMatch: null};\n    case actions.UPDATE_UI_MATCHES_TAB:\n      return {...state, ui: {...state.ui, matchesTab: action.payload}};\n    case actions.UPDATE_UI_SAVE_BTN:\n      return {...state, ui: {...state.ui, saveBtnDisabled: action.payload}};\n    default:\n      console.log('Received unknow action.type', action.type);\n      return state;\n  }\n}\n\nexport default storeReducer;\n","import messages from './socketMessages';\nimport { actions } from '../reducers/store-reducer';\nimport matchService from './matchService';\n\nconst socket = window.io();\n\n// Need access to reducer's dispatch\nlet savedDispatch;\n\nexport default {\n  setDispatch,\n  syncMatchesWithServer,\n  createMatch,\n  viewMatch,\n  stopViewingMatch,\n  deleteMatch\n};\n\n/*--- Emitters ---*/\nfunction deleteMatch(matchId, isMatchOwner) {\n  savedDispatch({type: actions.DELETE_MATCH, payload: matchId});\n  if (isMatchOwner) socket.emit(messages.DELETE_MATCH, matchId);\n}\n\nfunction setDispatch(dispatch) {\n  // cache the store's dispatch function\n  savedDispatch = dispatch;\n}\n\nasync function syncMatchesWithServer() {\n    const localMatchIds = matchService.getSavedMatches().map(m => m._id);\n    // Server will return the matches still existing in the db\n    // Client will then cleanup/sync its matches locally in the callback\n    socket.emit(messages.SYNC_MATCHES, localMatchIds, function(matchesOnServer) {\n      savedDispatch({type: actions.SET_ALL_MATCHES, payload: matchesOnServer});\n    });\n}\n\nfunction viewMatch(matchId, dispatch) {\n  savedDispatch = dispatch;\n  socket.emit(messages.START_VIEWING_MATCH, matchId, function(matchExists) {\n    if (!matchExists) savedDispatch({type: actions.STOP_VIEWING_MATCH});\n  });\n}\n\nfunction stopViewingMatch(matchId) {\n  socket.emit(messages.STOP_VIEWING_MATCH, matchId);\n  savedDispatch({type: actions.STOP_VIEWING_MATCH});\n}\n\nfunction createMatch(matchData, cb) {\n  socket.emit(messages.CREATE_MATCH, matchData, cb);\n}\n\n/*--- Listeners ---*/\nsocket.on(messages.UPDATE_VIEWING_MATCH, function(match) {\n  if (match) savedDispatch({type: actions.UPDATE_VIEWING_MATCH, payload: match});\n});\n","export default {\n  CREATE_MATCH: 'CREATE_MATCH',\n  START_VIEWING_MATCH: 'START_VIEWING_MATCH',\n  UPDATE_VIEWING_MATCH: 'UPDATE_VIEWING_MATCH',\n  STOP_VIEWING_MATCH: 'STOP_VIEWING_MATCH',\n  DELETE_MATCH: 'DELETE_MATCH',\n  SYNC_MATCHES: 'SYNC_MATCHES',\n};","import { actions } from '../reducers/store-reducer';\n\nconst CUR_TOURNEY_ENDPOINT = '/api/tourneys/current';\n\nexport default {\n  setCurTourney\n};\n\nasync function setCurTourney(dispatch) {\n  const tourney = await getCurTourney();\n  dispatch({type: actions.UPDATE_CUR_TOURNEY, payload: tourney});\n}\n\nfunction getCurTourney() {\n  return fetch(CUR_TOURNEY_ENDPOINT).then(res => res.json());\n}\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\nexport default function TabPanel(props) {\n  const {value, index, children} = props;\n  return (\n    <Typography component='div' role='tabpanel'\n      hidden={value !== index}\n    >\n      {value === index && children}\n    </Typography>\n  );\n}","import React from 'react';\nimport { CircularProgress } from '@material-ui/core';\n\nexport default function CenteredSpinner() {\n  return (\n    <section className='flex-col-ctr height-width-100'>\n      <CircularProgress />\n    </section>\n  );\n}\n","import React from 'react';\nimport { CardHeader } from '@material-ui/core';\n\nexport default function TourneyCard({tourney, isCurTourney}) {\n  const { isStarted, isFinished, startDate, curRound, roundState } = tourney;\n\n  function getStatus() {\n    if (isFinished || !isCurTourney) {\n      return 'Tourney Completed';\n    } else if (isStarted) {\n      return `Round ${curRound} ${roundState}`;\n    } else {\n      return `Starts on ${startDate}`;\n    }\n  }\n\n  return (\n    <CardHeader title={tourney.title} subheader={getStatus()} className='margin-bottom-1rem'/>\n  );\n}","import React from 'react';\nimport { Chip } from '@material-ui/core';\nimport { Person } from '@material-ui/icons';\nimport './PlayerChip.css';\n\nconst up = '▲';\nconst down = '▼';\n\nfunction formatMoney(money) {\n  const absMoney = Math.abs(money);\n  if (money < 0) {\n    return ` ${down}$${absMoney}`;\n  } else if (money > 0) {\n    return ` ${up}$${absMoney}`;\n  } else {\n    return ` $${absMoney}`;\n  }\n}\n\nexport default function PlayerChip({ player }) {\n\n  return (\n    <Chip\n      className='PlayerChip'\n      label={`${player.name}\\n${formatMoney(player.money)}`}\n      icon={<Person />}\n      variant='outlined'\n    />\n  );\n\n}","import React from 'react';\nimport { Typography, Card } from '@material-ui/core';\nimport './MatchItem.css';\nimport PlayerChip from '../PlayerChip/PlayerChip';\n\nexport default function MatchItem({match, tourneyRound}) {\n  let statusMsg;\n  if (match.completed) {\n    statusMsg = 'completed'\n  } else if (match.roundNum === tourneyRound) {\n    statusMsg = 'in progress'\n  } else {\n    statusMsg = tourneyRound === undefined ? 'click to update' : 'pending';\n  }\n  let createdMsg = new Date(match.createdAt).toLocaleString().split('');\n  createdMsg.splice(createdMsg.length - 6, 3).join('');\n  \n  return (\n    <Card variant='outlined' className='MatchItem-card'>\n      <section>\n        <Typography variant='h5' style={{fontSize: '1.25rem'}}>Round {match.roundNum}</Typography>\n        <article>\n          <Typography variant='overline'>\n            ${match.moneyPerSkin}/skin ({statusMsg})\n          </Typography>\n        </article>\n      </section>\n      <section>\n        {match.players.map(p => <PlayerChip player={p} key={p.playerId} />)}\n      </section>\n      <section>\n        <Typography variant='caption'>Created by {match.username} on {createdMsg}</Typography>\n      </section>\n    </Card>\n  );\n\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MatchItem from '../MatchItem/MatchItem';\n\nexport default function MatchList({matches, tourneyRound}) {\n  \n  return (\n    <>\n      {matches.map(m => <Link to={`/matches/${m._id}`} key={m._id}><MatchItem match={m} tourneyRound={tourneyRound} /></Link>)}\n    </>\n  );\n\n}","import React, { useContext } from 'react';\nimport StoreProvider from '../../contexts/StoreProvider';\nimport { Typography } from '@material-ui/core';\nimport CenteredSpinner from '../../components/CenteredSpinner/CenteredSpinner';\nimport TourneyCard from '../../components/TourneyCard/TourneyCard';\nimport MatchList from '../../components/MatchList/MatchList';\n\nexport default function CurTourneyScreen() {\n  const { state } = useContext(StoreProvider);\n  let { curTourney, savedMatches: matches } = state;\n  if (curTourney) matches = matches.filter(m => m.tourneyId === curTourney._id);\n\n  return (\n    curTourney ?\n      <>\n        <TourneyCard tourney={curTourney} isCurTourney={true}/>\n        {\n          matches.length ?\n            <MatchList matches={matches} tourneyRound={curTourney.roundNum}/>\n            :\n            <Typography variant='body1' style={{ marginTop: '2rem' }}>You Have No Matches</Typography>\n        }\n      </>\n      :\n      <CenteredSpinner />\n  );\n}","import React, { useContext } from 'react';\nimport { Typography } from '@material-ui/core';\nimport StoreProvider from '../../contexts/StoreProvider';\nimport CenteredSpinner from '../../components/CenteredSpinner/CenteredSpinner';\nimport TourneyCard from '../../components/TourneyCard/TourneyCard';\nimport MatchList from '../../components/MatchList/MatchList';\n\nexport default function PrevTourneyScreen() {\n  const { state } = useContext(StoreProvider);\n  let { curTourney, savedMatches: matches } = state;\n  let tourneys = [];\n  if (curTourney) {\n    matches = matches.filter(m => m.tourneyId !== curTourney._id);\n    // Extract an array of tourneys from the matches to map over\n    tourneys = matches.reduce((acc, m) => acc.some(t => t.tourneyId === m.tourneyId) ?\n      acc : [...acc, {_id: m.tourneyId, title: m.tourneyTitle}],\n      []\n    );\n  }\n\n  return (\n    curTourney ?\n      tourneys.length ?\n        tourneys.map(tourney => \n          <React.Fragment key={tourney._id}>\n            <TourneyCard tourney={tourney} isCurTourney={false} />\n            <MatchList matches={matches} />\n          </React.Fragment>\n        )\n        :\n        <Typography variant='body2' style={{ marginTop: '2rem' }}>You Have No Previous Matches</Typography>\n    :\n    <CenteredSpinner />\n  );\n}","import React, { useContext } from 'react';\nimport StoreProvider from '../../contexts/StoreProvider';\nimport { actions } from '../../reducers/store-reducer';\nimport { Tabs, Tab } from '@material-ui/core';\nimport TabPanel from '../../components/TabPanel/TabPanel';\nimport CurTourneyScreen from '../CurTourneyScreen/CurTourneyScreen';\nimport PrevTourneyScreen from '../PrevTourneyScreen/PrevTourneyScreen';\n\nexport default function MatchesScreen() {\n  const {state, dispatch} = useContext(StoreProvider);\n  return (\n    <>\n      <Tabs variant='fullWidth' value={state.ui.matchesTab} className='margin-bottom-1rem'\n        onChange={(e, newValue) => dispatch({type: actions.UPDATE_UI_MATCHES_TAB, payload: newValue})}\n      >\n        <Tab value='current' label='Current Tourney' />\n        <Tab value='previous' label='Previous Tourneys' />\n      </Tabs>\n      <TabPanel value={state.ui.matchesTab} index='current'>\n        <CurTourneyScreen />\n      </TabPanel>\n      <TabPanel value={state.ui.matchesTab} index='previous'>\n        <PrevTourneyScreen />\n      </TabPanel>\n    </>\n  );\n}","import React from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport { FormControl, FormControlLabel, FormLabel, RadioGroup, Radio } from '@material-ui/core';\n\nconst HorizontalRadioGroup = styled(RadioGroup)({\n  flexDirection: 'row'\n});\n\nexport default function RoundPicker({round, onChange}) {\n  if (!round || !onChange) return null;\n  return (\n    round ?\n      <FormControl component='fieldset'>\n        <FormLabel component='legend'>Round</FormLabel>\n        <HorizontalRadioGroup value={'' + round} onChange={onChange}>\n          <FormControlLabel value='1' control={<Radio color='primary'/>} label='1' />\n          <FormControlLabel value='2' control={<Radio color='primary'/>} label='2' />\n          <FormControlLabel value='3' control={<Radio color='primary'/>} label='3' />\n          <FormControlLabel value='4' control={<Radio color='primary'/>} label='4' />\n        </HorizontalRadioGroup>\n      </FormControl>\n    :\n      null\n  );\n}","import React, { useRef } from 'react';\nimport { TextField } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\n\nexport default function SelectPlayers({ leaderboard, onChange }) {\n\n  const options = useRef(leaderboard\n    .map(p => ({name: p.name, playerId: p.playerId}))\n    .sort((p1, p2) => p1.name < p2.name ? -1 : 1));\n\n  return (\n    <Autocomplete multiple autoComplete autoHighlight filterSelectedOptions\n      style={{width: '100%', marginBottom: '8rem'}}\n      options={options.current}\n      getOptionLabel={player => player.name}\n      onChange={onChange}\n      renderInput={params => (\n        <TextField\n          {...params}\n          variant='outlined'\n          label='Select Players'\n          margin='normal'\n        />\n      )}\n    />\n  );\n\n}","import React, { useEffect, useContext } from 'react';\nimport StoreProvider from '../../contexts/StoreProvider';\nimport { actions } from '../../reducers/store-reducer';\nimport { CardHeader, CardContent, TextField, FormControlLabel, Switch } from '@material-ui/core';\nimport CenteredSpinner from '../../components/CenteredSpinner/CenteredSpinner';\nimport RoundPicker from '../../components/RoundPicker/RoundPicker';\nimport SelectPlayers from '../../components/SelectPlayers/SelectPlayers';\n\nfunction getDefaultRound(tourney) {\n  if (!tourney.isStarted) return '1';\n  if (tourney.isFinished) return '4';\n  return tourney.curRound.toString();\n}\n\nexport default function NewMatchScreen() {\n  const { state, dispatch } = useContext(StoreProvider);\n  const { curTourney, settings, formData: matchData } = state;\n\n  const matchDataInvalid = getMatchDataInvalid();\n  \n  // Initialize formData in store\n  useEffect(function() {\n    if (!curTourney) return;\n    const {deviceId, username, carrySkins, moneyPerSkin} = settings;\n    const {_id: tourneyId, title: tourneyTitle} = curTourney;\n    dispatch({\n      type: actions.UPDATE_FORM_DATA,\n      payload: {\n        deviceId, username, carrySkins, moneyPerSkin,\n        tourneyId, tourneyTitle,\n        roundNum: getDefaultRound(curTourney)\n      }\n    });\n  }, [curTourney, dispatch, settings]);\n\n  useEffect(function() {\n    dispatch({type: actions.UPDATE_UI_SAVE_BTN, payload: matchDataInvalid});\n  }, [matchDataInvalid, dispatch]);\n\n  function getMatchDataInvalid() {\n    let {moneyPerSkin, selectedPlayerIds} = matchData;\n    if (!selectedPlayerIds) return true;\n    moneyPerSkin = parseInt(moneyPerSkin);\n    return (selectedPlayerIds.length < 2) || isNaN(moneyPerSkin) || (moneyPerSkin < 0);\n  }\n\n  function handleChangeRound(e, roundNum) {\n    dispatch({type: actions.UPDATE_FORM_DATA, payload: {roundNum}});\n  }\n  \n  function handleChangeMoney(e) {\n    dispatch({type: actions.UPDATE_FORM_DATA, payload: {moneyPerSkin: e.target.value ? parseInt(e.target.value) : ''}});\n  }\n  \n  function handleChangeCarry(e) {\n    if (e.target) dispatch({type: actions.UPDATE_FORM_DATA, payload: {carrySkins: e.target.checked}});\n  }\n  \n  function handleChangePlayers(e, selectedPlayers) {\n    dispatch({type: actions.UPDATE_FORM_DATA, payload: {selectedPlayerIds: selectedPlayers.map(p => p.playerId)}});\n  }\n\n  return (\n    curTourney && matchData.carrySkins !== undefined ?\n      <>\n        <CardHeader title='New Match' subheader={curTourney.title} />\n        <CardContent className='flex-col-ctr'>\n          <RoundPicker round={matchData.roundNum} onChange={handleChangeRound} color='primary' />\n          <TextField label='Money Per Skin' type='number' variant='outlined' min='1' step='1' margin='normal'\n            value={matchData.moneyPerSkin} onChange={handleChangeMoney} color='primary'\n            id='money-per-skin-input'\n          />\n          <FormControlLabel margin='normal' label='Carry Over Skins?' className='MuiFormLabel-root'\n            control={<Switch value='carrySkins' checked={matchData.carrySkins} onChange={handleChangeCarry} color='primary' />}\n          />\n          <SelectPlayers leaderboard={curTourney.leaderboard} onChange={handleChangePlayers} />\n        </CardContent>\n      </>\n      :\n      <CenteredSpinner />\n  );\n}","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport './MatchGrid.css';\n\nconst empty18Holes = new Array(18).fill(null).map(_ => <div></div>);\nconst gridSpacer = new Array(10).fill(null).map((_, idx) => <div className='MatchGrid-spacer' key={idx}></div>);\n\nfunction getInitials(name) {\n  return name.split(' ').map(nm => nm[0].toUpperCase()).join('');\n}\n\nexport default function MatchGrid({match}) {\n  const playerWithHoles = match.players.find(p => p.round && p.round.holes && p.round.holes.length);\n  let pars, frontPars, backPars;\n  if (playerWithHoles) {\n    pars = playerWithHoles.round.holes.map((h, idx) => ({holeNum: idx + 1, par: h.par}));\n    frontPars = pars.filter(p => p.holeNum < 10);\n    backPars = pars.filter(p => p.holeNum > 9);\n  }\n  const skins = match.players.map(p => ({\n    name: p.name,\n    initials: getInitials(p.name),\n    holes: (p.round.holes && p.round.holes.length) ? p.round.holes.map((h, idx) =>\n      <div className='player-hole-container flex-col-ctr' key={idx}>\n        <span className='player-hole flex-col-ctr' style={{\n          color: 'var(--dark-green-text)',\n          borderColor: (h.skin || h.carry) &&  'var(--light-green)',\n          backgroundColor: h.skin && 'var(--pale-green-bg)'\n        }}>\n          {h.strokes}\n        </span>\n      </div>\n      )\n      :\n      empty18Holes\n    })\n  );\n  return (\n    <main id='match-grid'>\n      {pars ?\n        <>\n          <span></span>\n          {frontPars.map(par => <Typography variant='caption' key={par.holeNum} className='hole'>{par.holeNum}<br/><span className='par'>{par.par}</span></Typography>)}\n          {skins.map((p) => (\n            <React.Fragment key={p.name}>\n              <div className='MatchGrid-initials flex-col-ctr' key={p.name}>{p.initials}</div>\n              {p.holes.filter((_, idx) => idx < 9)}\n            </React.Fragment>\n          ))}\n          {gridSpacer}\n          <span></span>\n          {backPars.map(par => <Typography variant='caption' key={par.holeNum} className='hole'>{par.holeNum}<br/><span className='par'>{par.par}</span></Typography>)}\n          {skins.map((p) => (\n            <React.Fragment key={p.name}>\n              <div className='MatchGrid-initials flex-col-ctr' key={p.name}>{p.initials}</div>\n              {p.holes.filter((_, idx) => idx > 8)}\n            </React.Fragment>\n          ))}\n        </>\n      :\n        <Typography variant='body1' style={{ margin: '2rem auto',  gridColumn: 'span 10'}}>No Player Has Started Their Round Yet</Typography>\n      }\n    </main>\n  );\n}","import React from 'react';\nimport { TableContainer, Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core';\nimport './MatchSummary.css';\n\nfunction getInitials(name) {\n  const lastInitial = name[name.lastIndexOf(' ') + 1];\n  return `${name[0]}${lastInitial}`.toUpperCase();\n}\n\nconst up = '▲';\nconst down = '▼';\n\nfunction formatMoney(money) {\n  const absMoney = Math.abs(money);\n  if (money < 0) {\n    return ` ${down}$${absMoney}`;\n  } else if (money > 0) {\n    return ` ${up}$${absMoney}`;\n  } else {\n    return ` $${absMoney}`;\n  }\n}\n\nfunction getColor(money) {\n  if (money < 0) {\n    return {color: 'var(--dark-red)'};\n  } else if (money > 0) {\n    return {color: 'var(--green)'};\n  } else {\n    return {color: 'var(--dark-green-text)'};\n  }\n}\n\nexport default function MatchSummary({ match }) {\n  const players = match.players.map(p => ({\n    name: p.name,\n    initials: getInitials(p.name),\n    money: p.money,\n    numSkins: p.round.holes.reduce((skins, hole) => hole.skin || hole.carry ? skins + 1 : skins, 0)\n  }));\n\n  return (\n    <TableContainer className='MatchSummary'>\n      <Table id='match-summary-table' size='small'>\n        <TableHead>\n          <TableRow>\n            <TableCell colSpan={2}>Player</TableCell>\n            <TableCell align='center'>Skins</TableCell>\n            <TableCell align='center'>Money</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {players.map(p =>\n            <TableRow key={p.name}>\n              <TableCell align='center'>{p.initials}</TableCell>\n              <TableCell>{p.name}</TableCell>\n              <TableCell align='center'>{p.numSkins}</TableCell>\n              <TableCell align='center' style={getColor(p.money)}>{formatMoney(p.money)}</TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n\n}","import React from 'react';\nimport { CardHeader, Typography } from '@material-ui/core';\nimport MatchGrid from '../../components/MatchGrid/MatchGrid';\nimport MatchSummary from '../../components/MatchSummary/MatchSummary';\nimport './MatchCard.css';\n\nexport default function MatchCard({match, tourneyRound}) {\n\n  let statusMsg;\n  if (match.completed) {\n    statusMsg = 'completed'\n  } else if (match.roundNum === tourneyRound) {\n    statusMsg = 'in progress'\n  } else {\n    statusMsg = 'pending'\n  }\n  let createdMsg = new Date(match.createdAt).toLocaleString().split('');\n  createdMsg.splice(createdMsg.length - 6, 3).join('');\n  let subHeader = <>\n    <span>{`Round ${match.roundNum}`}</span><br/>\n    <span>${`${match.moneyPerSkin}/skin (${statusMsg})`}</span>\n  </>;\n\n  return (\n    <main id='match-card'>\n      <CardHeader title={match.tourneyTitle} subheader={subHeader} />\n      <MatchGrid match={match} />\n      <MatchSummary match={match} />\n      <Typography variant='caption' id='MatchCard-created-by'>Created by {match.username} on {createdMsg}</Typography>\n    </main>\n  );\n\n}","import React, { useContext, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport StoreProvider from '../../contexts/StoreProvider';\nimport realtimeService from '../../services/realtimeService';\nimport MatchCard from '../../components/MatchCard/MatchCard';\nimport { Typography } from '@material-ui/core';\n\nexport default function ViewMatchScreen() {\n  const { id } = useParams();\n  const { state, dispatch } = useContext(StoreProvider);\n  const { viewingMatch, curTourney } = state;\n\n  useEffect(function () {\n    // Sends a 'VIEW_MATCH' message to server.\n    // viewingMatch state will be updated each time server sends UPDATE_VIEWING_MATCH message\n    realtimeService.viewMatch(id, dispatch);\n    // Return a cleanup function to let the server know we're no longer viewing the match\n    return function () {\n      realtimeService.stopViewingMatch(id);\n    }\n  }, [id, dispatch]);\n\n  return (\n    viewingMatch && curTourney ?\n      <MatchCard match={viewingMatch} tourneyRound={curTourney.curRound} />\n      :\n      <Typography variant='body1' style={{ marginTop: '2rem' }}>Sorry<br/>Match No Longer Exists</Typography>\n  );\n}","import React, { useState, useEffect, useContext } from 'react';\nimport StoreProvider from '../../contexts/StoreProvider';\nimport { actions } from '../../reducers/store-reducer';\nimport { Typography, CardHeader, CardContent, TextField, FormControlLabel, Switch } from '@material-ui/core';\n\nexport default function SettingsScreen() {\n  const {state, dispatch} = useContext(StoreProvider);\n  const {settings: {username, moneyPerSkin, carrySkins}} = state;\n  const [formData, setFormData] = useState({username, moneyPerSkin, carrySkins});\n  \n  function formInvalid() {\n    if (JSON.stringify({username, moneyPerSkin, carrySkins}) === JSON.stringify(formData)) return true;\n    return formData.moneyPerSkin === '' || formData.moneyPerSkin <= 0 || formData.username.length < 3;\n  }\n\n  useEffect(function() {\n    dispatch({type: actions.UPDATE_FORM_DATA, payload: formData});\n  }, [formData, dispatch]);\n\n  const disableSaveBtn = formInvalid();\n\n  useEffect(function() {\n    dispatch({type: actions.UPDATE_UI_SAVE_BTN, payload: disableSaveBtn});\n  }, [disableSaveBtn, dispatch]);\n\n\n  function handleChangeMoney(e) {\n    setFormData({...formData, moneyPerSkin: parseInt(e.target.value) || ''});\n  }\n  \n  function handleChangeCarry(e) {\n    setFormData({...formData, carrySkins: e.target.checked});\n  }\n  \n  function handleChangeUsername(e) {\n    setFormData({...formData, username: e.target.value});\n  }\n\n  return (\n    <main className='max-screen-width margin-left-right-auto'>\n      <CardHeader title='Settings' />\n      <CardContent className='flex-col-ctr'>\n        <Typography variant='caption' className='flex-item-left'>New Match Defaults:</Typography>\n        <TextField label='Money Per Skin' type='number' variant='outlined' min='1' step='1' margin='normal'\n          value={formData.moneyPerSkin} onChange={handleChangeMoney} color='primary'\n          id='money-per-skin-input'\n        />\n        <FormControlLabel margin='normal' label='Carry Over Skins?' className='MuiFormLabel-root'\n          control={<Switch value='formData.carrySkins' checked={formData.carrySkins} onChange={handleChangeCarry} color='primary' />}\n        />\n        <Typography variant='caption' className='flex-item-left margin-top-2rem'>Other Settings:</Typography>\n        <TextField label='Username' variant='outlined' margin='normal'\n          value={formData.username} onChange={handleChangeUsername} color='primary'\n        />\n      </CardContent>\n    </main>\n  );\n}","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button } from '@material-ui/core';\n\nexport default function ConfirmDialog({isConfirmOpen, handleClose, title, dialogContent, confirmBtnText}) {\n  return (\n    <Dialog open={isConfirmOpen} title={title}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>{dialogContent}</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => handleClose(false)}>Cancel</Button>\n        <Button onClick={() => handleClose(true)}>{confirmBtnText || 'Yes'}</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { SaveOutlined } from '@material-ui/icons';\n\nexport default function ButtonSave({handleClick, disabled}) {\n  return (\n    <Button startIcon={<SaveOutlined />} variant='outlined' size='small' \n      onClick={handleClick} disabled={disabled}\n    >\n      SAVE\n    </Button>\n  );\n}","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { CancelOutlined } from '@material-ui/icons';\n\nexport default function ButtonCancel({handleCancel}) {\n  return (\n    <Button onClick={handleCancel} startIcon={<CancelOutlined />} variant='outlined' size='small'>CANCEL</Button>\n  );\n}","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { ShareOutlined } from '@material-ui/icons';\n\nexport default function ButtonShare({handleShare}) {\n  return (\n    <Button onClick={handleShare} startIcon={<ShareOutlined />} variant='outlined' size='small'>SHARE</Button>\n  );\n}","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { DeleteOutlined } from '@material-ui/icons';\n\nexport default function ButtonDelete({handleDelete}) {\n  return (\n    <Button onClick={handleDelete} startIcon={<DeleteOutlined />} variant='outlined' size='small'>DELETE</Button>\n  );\n}","import React, { useState, useContext, useRef } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Button, Snackbar } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport { actions } from '../../reducers/store-reducer';\nimport ConfirmDialog from '../ConfirmDialog/ConfirmDialog';\nimport ButtonSave from '../ButtonSave/ButtonSave';\nimport ButtonCancel from '../ButtonCancel/ButtonCancel';\nimport ButtonShare from '../ButtonShare/ButtonShare';\nimport ButtonDelete from '../ButtonDelete/ButtonDelete';\nimport StoreProvider from '../../contexts/StoreProvider';\nimport realtimeService from '../../services/realtimeService';\nimport settingsService from '../../services/settingsService';\n\nexport default function TopBarControls() {\n  const [showCopyMsg, setShowCopyMsg] = useState(false);\n  const [isConfirmDeleteOpen, setIsConfirmDeleteOpen] = useState(false);\n  const { state, dispatch } = useContext(StoreProvider);\n  const { ui } = state;\n  const { pathname } = useLocation();\n  const history = useHistory();\n  const inputEl = useRef(null);\n\n  function handleCreateMatch() {\n    realtimeService.createMatch(state.formData, function (err, match) {\n      dispatch({ type: actions.CREATE_MATCH, payload: match });\n      history.push(`/matches/${match._id}`);\n    });\n  }\n\n  function handleCancel() {\n    dispatch({type: actions.UPDATE_FORM_DATA, payload: {}});\n    history.goBack();\n  }\n  \n  function handleShare(e) {\n    inputEl.current.select();\n    document.execCommand('copy');\n    setShowCopyMsg(true);\n  }\n  \n  function handleDelete(confirmed, matchId, isMatchOwner) {\n    setIsConfirmDeleteOpen(false);\n    if (confirmed) {\n      realtimeService.deleteMatch(matchId, isMatchOwner);\n      history.replace('/');\n    }\n  }\n  \n  function handleUpdateSettings() {\n    dispatch({type: actions.UPDATE_SETTINGS, payload: state.formData});\n    // Decided not to route anywhere after clicking Save btn\n  }\n\n  if (pathname === '/') {\n    return ui.matchesTab === 'current' ?\n      <Button onClick={() => history.push('/matches/new')} startIcon={<Add />} variant='outlined' size='small'>MATCH</Button>\n      :\n      <Button onClick={() => window.localStorage.clear()} variant='outlined' size='small'>TEMP CLEAR LOCALSTORAGE</Button>\n      ;\n  } else if (pathname === '/matches/new') {\n    return <span>\n      <ButtonCancel handleCancel={handleCancel} />&nbsp;\n      <ButtonSave handleClick={handleCreateMatch} disabled={ui.saveBtnDisabled} />\n    </span>;\n  } else if (pathname.startsWith('/matches/')) {\n    if (!state.viewingMatch) return null;\n    const deviceId = settingsService.getSettings().deviceId;\n    const isMatchOwner = deviceId === state.viewingMatch.deviceId;\n    return <span>\n      <ButtonDelete handleDelete={() => setIsConfirmDeleteOpen(true)} />\n      &nbsp;<ButtonShare handleShare={handleShare} />\n      <input ref={inputEl} onFocus={(e) => e.target.blur()} defaultValue={window.location.href} style={{ position: 'absolute', marginTop: -999 }} />\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={showCopyMsg}\n        onClose={() => setShowCopyMsg(false)}\n        autoHideDuration={3000}\n        message='Copied Match Link to the Clipboard'\n      />\n      <ConfirmDialog\n        isConfirmOpen={isConfirmDeleteOpen}\n        handleClose={(confirmed) => handleDelete(confirmed, state.viewingMatch._id, isMatchOwner)}\n        title='Confirm Delete'\n        dialogContent={isMatchOwner ?\n          'Permanently delete this match that you created?'\n          :\n          'Remove the match from your list?'\n        }\n        confirmBtnText='Delete Match'\n      />\n    </span>;\n  } else if (pathname === '/settings') {\n    return <span>\n      <ButtonCancel handleCancel={handleCancel} />&nbsp;\n      <ButtonSave handleClick={handleUpdateSettings} disabled={ui.saveBtnDisabled} />\n    </span>;\n  } else {\n    return null;\n  }\n\n}","import React from 'react';\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\nimport TopBarControls from '../TopBarControls/TopBarControls';\n\nexport default function TopBar() {\n  return (\n    <AppBar position='sticky'>\n      <Toolbar className='justify-content-between'>\n        <Typography variant=\"h6\">\n          PGA SKINS\n        </Typography>\n        <TopBarControls />\n      </Toolbar>\n    </AppBar>\n  );\n}","import React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { BottomNavigation, BottomNavigationAction } from '@material-ui/core';\nimport { Settings, GolfCourse } from '@material-ui/icons';\n\nexport default function BottomNav() {\n  const history = useHistory();\n  const {pathname} = useLocation();\n  return (\n    <BottomNavigation value={pathname} onChange={(e, newRoute) => history.push(newRoute)} showLabels>\n      <BottomNavigationAction value='/' label='Matches' icon={<GolfCourse />} />\n      <BottomNavigationAction value='/settings' label='Settings' icon={<Settings />} />\n    </BottomNavigation>\n  );\n} \n","import React from 'react';\nimport './GridWithBottomMenu.css';\nimport {Route, Switch} from 'react-router-dom';\nimport {Box} from '@material-ui/core';\nimport MatchesScreen from '../MatchesScreen/MatchesScreen';\nimport NewMatchScreen from '../NewMatchScreen/NewMatchScreen';\nimport ViewMatchScreen from '../ViewMatchScreen/ViewMatchScreen';\nimport SettingsScreen from '../SettingsScreen/SettingsScreen';\nimport TopBar from '../../components/TopBar/TopBar';\nimport BottomNav from '../../components/BottomNav/BottomNav';\n\nfunction GridWithBottomMenu() {\n  return (\n    <Box className='GWBM_grid'>\n      <TopBar />\n      <Box className='GWBM_content'>\n        <Switch>\n          <Route path='/matches/new' render={() =>\n            <NewMatchScreen />\n          } />\n          <Route path='/matches/:id' render={() =>\n            <ViewMatchScreen />\n          } />\n          <Route path='/settings' render={() =>\n            <SettingsScreen />\n          } />\n          <Route path='/' render={() =>\n            <MatchesScreen />\n          } />\n        </Switch>\n      </Box>\n      <BottomNav />\n    </Box>\n  );\n}\n\nexport default GridWithBottomMenu;","import React, {useState, useContext} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport StoreProvider from '../../contexts/StoreProvider';\nimport {Button, TextField, Typography} from '@material-ui/core';\nimport settingsService from '../../services/settingsService';\n\nfunction WelcomeScreen(props) {\n  const history = useHistory();\n  const {dispatch} = useContext(StoreProvider);\n  const [username, setUsername] = useState('');\n\n  function updateUsername() {\n    settingsService.updateUsername(username, dispatch);\n    history.push('/');\n  }\n\n  return (\n    <>\n      <Typography variant='h4' className='text-center' style={{marginBottom: '2rem'}}>Welcome to<br/>PGA SKINS!</Typography>\n      <Typography variant='body2' className='text-center'>Please enter the user name you want others to see when viewing a skins match created by you:<br/><br/></Typography>\n      <TextField autoComplete='off' variant='outlined' placeholder='User Name' fullWidth\n        value={username} onChange={(e) => setUsername(e.target.value)}\n      />\n      <Button onClick={updateUsername} disabled={username.length < 3 || username.length > 20} style={{marginTop: '1rem'}} variant='contained'>SUBMIT</Button>\n    </>\n  );\n}\n\nexport default WelcomeScreen;","import React from 'react';\nimport './GridNoMenu.css';\nimport { Route, Switch } from 'react-router-dom';\nimport { Container, Box } from '@material-ui/core';\nimport TopBar from '../../components/TopBar/TopBar';\nimport WelcomeScreen from '../WelcomeScreen/WelcomeScreen';\n\nfunction GridNoMenu() {\n  return (\n    <Box className='GNM_grid'>\n      <TopBar />\n      <Container className='flex-col-ctr'>\n        <Switch>\n          <Route exact path='/welcome' render={() =>\n            <WelcomeScreen />\n          } />\n        </Switch>\n      </Container>\n    </Box>\n  );\n}\n\nexport default GridNoMenu;","import React, { useEffect, useReducer } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport StoreProvider from './contexts/StoreProvider';\nimport storeReducer, { initialState } from './reducers/store-reducer';\nimport realtimeService from './services/realtimeService';\nimport tourneyService from './services/tourneyService';\nimport settingsService from './services/settingsService';\nimport GridWithBottomMenu from './screens/GridWithBottomMenu/GridWithBottomMenu';\nimport GridNoMenu from './screens/GridNoMenu/GridNoMenu';\n\nexport default function App() {\n  const history = useHistory();\n  const [state, dispatch] = useReducer(storeReducer, initialState);\n  \n  useEffect(function () {\n    // Fetch the current tourney from the server every hour\n    const timerId = tourneyService.setCurTourney(dispatch,  1000 * 60 * 60);\n    // Enable realtimeService to call dispatch\n    realtimeService.setDispatch(dispatch);\n    realtimeService.syncMatchesWithServer();\n    // init will return true if this is the first visit for the device\n    if (settingsService.initialize(dispatch)) history.replace('/welcome');\n    // Cleanup function\n    return () => { clearInterval(timerId); };\n  }, []);\n\n  return (\n    <StoreProvider.Provider value={{state, dispatch}}>\n      <Switch>\n        <Route path='/welcome' render={() =>\n          <GridNoMenu />\n        } />\n        {/* Routes without bottom menu go above */}\n        <Route path='/' render={() =>\n          <GridWithBottomMenu />\n        } />\n      </Switch>\n    </StoreProvider.Provider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport {createMuiTheme, ThemeProvider} from '@material-ui/core/styles';\n\n/*--- hack to fix 100vh on mobile issue ---*/\n// First we get the viewport height and we multiple it by 1% to get a value for a vh unit\nlet vh = window.innerHeight * 0.01;\n// Then we set the value in the --vh custom property to the root of the document\ndocument.documentElement.style.setProperty('--vh', `${vh}px`);\n\n// We listen to the resize event\nwindow.addEventListener('resize', () => {\n  // We execute the same script as before\n  let vh = window.innerHeight * 0.01;\n  document.documentElement.style.setProperty('--vh', `${vh}px`);\n});\n\nconst themeMint = {\n  palette: {\n    primary: { main: '#d5dcd6', contrastText: '#051907' },\n    secondary: { main: '#d8dae8', contrastText: '#051907' }\n  },\n  overrides: {\n    MuiBottomNavigationAction: {\n      \"root\": {\n        \"color\": 'white',\n        \"&$selected\": {\n          \"color\": \"#051907\"\n        }\n      }\n    },\n    MuiBottomNavigation: {\n      \"root\": {\n        backgroundColor: '#d5dcd6'\n      }\n    }\n  }\n};\n\nconst theme = createMuiTheme(themeMint, 'Minty Green');\n\nReactDOM.render(\n  <Router>\n    <Route path='/' render={() =>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    } />\n  </Router>\n  , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}