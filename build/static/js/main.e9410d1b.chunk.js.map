{"version":3,"sources":["contexts/StoreProvider.js","services/settingsService.js","services/matchService.js","reducers/store-reducer.js","services/realtimeService.js","services/socketMessages.js","services/tourneyService.js","components/TabPanel/TabPanel.jsx","components/CenteredSpinner/CenteredSpinner.jsx","components/TourneyCard/TourneyCard.jsx","components/PlayerChip/PlayerChip.jsx","components/MatchItem/MatchItem.jsx","components/MatchList/MatchList.jsx","screens/CurTourneyScreen/CurTourneyScreen.jsx","screens/PrevTourneyScreen/PrevTourneyScreen.jsx","screens/MatchesScreen/MatchesScreen.jsx","components/RoundPicker/RoundPicker.jsx","components/SelectPlayers/SelectPlayers.jsx","screens/NewMatchScreen/NewMatchScreen.jsx","components/MatchGrid/MatchGrid.jsx","components/MatchSummary/MatchSummary.jsx","components/MatchCard/MatchCard.jsx","screens/ViewMatchScreen/ViewMatchScreen.jsx","screens/SettingsScreen/SettingsScreen.jsx","components/ConfirmDialog/ConfirmDialog.jsx","components/ButtonSave/ButtonSave.jsx","components/ButtonCancel/ButtonCancel.jsx","components/ButtonShare/ButtonShare.jsx","components/ButtonDelete/ButtonDelete.jsx","components/TopBarControls/TopBarControls.jsx","components/TopBar/TopBar.jsx","components/BottomNav/BottomNav.jsx","screens/GridWithBottomMenu/GridWithBottomMenu.jsx","screens/WelcomeScreen/WelcomeScreen.jsx","screens/GridNoMenu/GridNoMenu.jsx","App.js","serviceWorker.js","index.js"],"names":["createContext","state","dispatch","initialize","settings","JSON","parse","window","localStorage","getItem","deviceId","Date","now","Math","floor","random","setItem","stringify","type","actions","UPDATE_SETTINGS","payload","username","moneyPerSkin","carrySkins","getSettings","updateUsername","UPDATE_USERNAME","getSavedMatches","setSavedMatches","matches","sort","matchSort","updateSavedMatch","matchDoc","savedMatches","matchIdx","findIndex","m","_id","unshift","saveNewMatch","deleteMatch","matchId","filter","a","b","createdAt","Array","isArray","initialState","settingsService","curTourney","matchService","newMatchData","viewingMatch","ui","matchesTab","saveBtnDisabled","UPDATE_CUR_TOURNEY","UPDATE_NEW_MATCH_DATA","UPDATE_VIEWING_MATCH","CREATE_MATCH","DELETE_MATCH","SET_ALL_MATCHES","STOP_VIEWING_MATCH","UPDATE_UI_MATCHES_TAB","UPDATE_UI_SAVE_BTN","storeReducer","savedDispatch","action","updatedSavedMatches","console","log","socket","io","setDispatch","syncMatchesWithServer","async","localMatchIds","map","emit","messages","matchesOnServer","createMatch","matchData","cb","viewMatch","matchExists","stopViewingMatch","isMatchOwner","on","match","setCurTourney","fetch","then","res","json","tourney","TabPanel","props","value","index","children","Typography","component","role","hidden","CenteredSpinner","className","CircularProgress","TourneyCard","isStarted","isCurTourney","isFinished","startDate","curRound","roundState","CardHeader","title","subheader","formatMoney","money","absMoney","abs","PlayerChip","player","Chip","label","name","icon","Person","variant","MatchItem","statusMsg","tourneyRound","completed","roundNum","createdMsg","toLocaleString","split","splice","length","join","Card","style","fontSize","players","p","key","playerId","MatchList","to","CurTourneyScreen","useContext","StoreProvider","tourneyId","marginTop","PrevTourneyScreen","MatchesScreen","Tabs","onChange","e","newValue","Tab","HorizontalRadioGroup","styled","RadioGroup","flexDirection","RoundPicker","round","FormControl","FormLabel","FormControlLabel","control","Radio","color","SelectPlayers","leaderboard","options","useRef","p1","p2","Autocomplete","multiple","autoComplete","autoHighlight","filterSelectedOptions","width","marginBottom","current","getOptionLabel","renderInput","params","TextField","margin","NewMatchScreen","matchDataInvalid","selectedPlayerIds","parseInt","isNaN","getMatchDataInvalid","useEffect","tourneyTitle","toString","undefined","CardContent","min","step","target","Switch","checked","selectedPlayers","empty18Holes","fill","_","gridSpacer","idx","getInitials","lastInitial","lastIndexOf","toUpperCase","MatchGrid","pars","frontPars","backPars","playerWithHoles","find","holes","h","holeNum","par","skins","initials","borderColor","skin","carry","backgroundColor","strokes","id","Fragment","gridColumn","MatchSummary","numSkins","reduce","hole","TableContainer","Table","size","TableHead","TableRow","TableCell","colSpan","align","TableBody","MatchCard","subHeader","ViewMatchScreen","useParams","realtimeService","SettingsScreen","ConfirmDialog","isConfirmOpen","handleClose","dialogContent","confirmBtnText","Dialog","open","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","onClick","ButtonSave","handleClick","disabled","startIcon","SaveOutlined","ButtonCancel","handleCancel","CancelOutlined","ButtonShare","handleShare","ShareOutlined","ButtonDelete","handleDelete","DeleteOutlined","TopBarControls","useState","showCopyMsg","setShowCopyMsg","isConfirmDeleteOpen","setIsConfirmDeleteOpen","pathname","useLocation","history","useHistory","inputEl","push","Add","clear","goBack","err","startsWith","select","document","execCommand","ref","onFocus","blur","defaultValue","location","href","position","Snackbar","anchorOrigin","vertical","horizontal","onClose","autoHideDuration","message","confirmed","replace","TopBar","AppBar","Toolbar","BottomNav","BottomNavigation","newRoute","showLabels","BottomNavigationAction","GolfCourse","Settings","GridWithBottomMenu","Box","path","render","WelcomeScreen","setUsername","placeholder","fullWidth","GridNoMenu","Container","exact","App","useReducer","timerId","tourneyService","clearInterval","Provider","Boolean","hostname","vh","innerHeight","documentElement","setProperty","addEventListener","theme","createMuiTheme","palette","primary","main","contrastText","secondary","overrides","MuiBottomNavigationAction","MuiBottomNavigation","ReactDOM","ThemeProvider","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wTAEeA,0BAAc,CAACC,MAAO,KAAMC,SAAU,O,QCAtC,GACbC,WAuBF,SAAoBD,GAClB,IAAIE,EAAWC,KAAKC,MAAMC,OAAOC,aAAaC,QAnB3B,aAqBnB,GAAIL,EACF,OAAO,EAGPA,EAAW,GACX,IAAMM,EAAWC,KAAKC,MAAQC,KAAKC,MAAsB,IAAhBD,KAAKE,UAC9CX,EAAQ,SAAkBM,EAE1BN,EAAQ,SADS,GAGjBA,EAAQ,aADa,EAOrB,OAJAA,EAAQ,YADW,EAEnBG,OAAOC,aAAaQ,QAlCH,WAkCyBX,KAAKY,UAAUb,IACzDF,EAAS,CAACgB,KAAMC,EAAQC,gBAAiBC,QAAS,CAACX,WAAUY,SAP5C,GAOsDC,aALlD,EAKgEC,YAHlE,MAKZ,GAzCTC,YAUF,WACE,OAAOpB,KAAKC,MAAMC,OAAOC,aAAaC,QAPnB,cAHnBiB,eAaF,SAAwBJ,EAAUpB,GAChC,IAAIE,EAAWC,KAAKC,MAAMC,OAAOC,aAAaC,QAX3B,aAYnBL,EAAQ,SAAoBkB,EAC5Bf,OAAOC,aAAaQ,QAbD,WAauBX,KAAKY,UAAUb,IACzDF,EAAS,CAACgB,KAAMC,EAAQQ,gBAAiBN,QAASC,MCtBrC,OACbM,kBACAC,gBAgBF,SAAyBC,GACvBA,EAAQC,KAAKC,GACbzB,OAAOC,aAAaQ,QAVF,UAUuBX,KAAKY,UAAUa,KAfxDG,iBAgCF,SAA0BC,GACxB,IAAKA,EAAU,OACf,IAAMC,EAAeP,IACfQ,EAAWD,EAAaE,WAAU,SAAAC,GAAC,OAAIA,EAAEC,MAAQL,EAASK,QAC9C,IAAdH,GACFD,EAAaK,QAAQN,GACrBC,EAAaJ,KAAKC,IAElBG,EAAaC,GAAYF,EAE3B3B,OAAOC,aAAaQ,QArCF,UAqCuBX,KAAKY,UAAUkB,KAzCxDM,aAwBF,SAAsBP,GACpB,IAAMC,EAAeP,IACrBO,EAAaK,QAAQN,GACrBC,EAAaJ,KAAKC,GAClBzB,OAAOC,aAAaQ,QAxBF,UAwBuBX,KAAKY,UAAUkB,KA3BxDO,YAgBF,SAAqBC,GACnB,IAAIR,EAAeP,IAGnB,OAFAO,EAAeA,EAAaS,QAAO,SAAAN,GAAC,OAAIA,EAAEC,MAAQI,KAClDpC,OAAOC,aAAaQ,QAhBF,UAgBuBX,KAAKY,UAAUkB,IACjDA,IAdT,SAASH,EAAUa,EAAGC,GACpB,OAAQD,EAAEE,UAAYD,EAAEC,WAAc,EAAI,EAyC5C,SAASnB,IACP,IAAIO,EAAe9B,KAAKC,MAAMC,OAAOC,aAAaC,QA9ChC,YAoDlB,OALKuC,MAAMC,QAAQd,KAEjB5B,OAAOC,aAAaQ,QAjDJ,UAiDyB,MACzCmB,EAAe,IAEVA,EC3DT,IAGae,EAAe,CAC1B9C,SAJe+C,EAAgB1B,eAIT,CACpBf,SAAU,GACVY,SAAU,GACVC,aAAc,EACdC,YAAY,GAEd4B,WAAY,KACZjB,aAVmBkB,EAAazB,kBAWhC0B,aAAc,GACdC,aAAc,KACdC,GAAI,CACFC,WAAY,UACZC,iBAAiB,IAIRvC,EAAU,CACrBC,gBAAiB,kBACjBO,gBAAiB,kBACjBgC,mBAAoB,qBACpBC,sBAAuB,wBACvBC,qBAAsB,uBACtBC,aAAc,eACdC,aAAc,eACdC,gBAAiB,kBACjBC,mBAAoB,qBACpBC,sBAAuB,wBACvBC,mBAAoB,sBAsCPC,ICjEXC,EDiEWD,EAnCf,SAAsBnE,EAAOqE,GAC3B,OAAOA,EAAOpD,MACZ,KAAKC,EAAQC,gBACX,OAAO,eAAInB,EAAX,CAAkBG,SAAS,eAAKH,EAAMG,SAAZ,GAAyBkE,EAAOjD,WAC5D,KAAKF,EAAQQ,gBACX,OAAO,eAAI1B,EAAX,CAAkBG,SAAS,eAAKH,EAAMG,SAAZ,CAAsBkB,SAAUgD,EAAOjD,YACnE,KAAKF,EAAQwC,mBACX,OAAO,eAAI1D,EAAX,CAAkBmD,WAAYkB,EAAOjD,UACvC,KAAKF,EAAQyC,sBACX,OAAO,eAAI3D,EAAX,CAAkBqD,aAAa,eAAKrD,EAAMqD,aAAZ,GAA6BgB,EAAOjD,WACpE,KAAKF,EAAQ0C,qBAEX,OADAR,EAAapB,iBAAiBqC,EAAOjD,SAC9B,eAAIpB,EAAX,CAAkBsD,aAAce,EAAOjD,UACzC,KAAKF,EAAQ6C,gBAEX,OADAX,EAAaxB,gBAAgByC,EAAOjD,SAC7B,eAAIpB,EAAX,CAAkBkC,aAAcmC,EAAOjD,UACzC,KAAKF,EAAQ8C,mBACX,OAAO,eAAIhE,EAAX,CAAkBsD,aAAc,OAClC,KAAKpC,EAAQ2C,aACXT,EAAaZ,aAAa6B,EAAOjD,SACjC,IAAMc,EAAekB,EAAazB,kBAClC,OAAO,eAAI3B,EAAX,CAAkBsD,aAAce,EAAOjD,QAASc,eAAcmB,aAAc,KAC9E,KAAKnC,EAAQ4C,aACX,IAAMQ,EAAsBlB,EAAaX,YAAY4B,EAAOjD,SAC5D,OAAO,eAAIpB,EAAX,CAAkBkC,aAAcoC,EAAqBhB,aAAc,OACrE,KAAKpC,EAAQ+C,sBACX,OAAO,eAAIjE,EAAX,CAAkBuD,GAAG,eAAKvD,EAAMuD,GAAZ,CAAgBC,WAAYa,EAAOjD,YACzD,KAAKF,EAAQgD,mBACX,OAAO,eAAIlE,EAAX,CAAkBuD,GAAG,eAAKvD,EAAMuD,GAAZ,CAAgBE,gBAAiBY,EAAOjD,YAC9D,QAEE,OADAmD,QAAQC,IAAI,8BAA+BH,EAAOpD,MAC3CjB,I,iBEpEE,EACC,eADD,EAEQ,sBAFR,EAGS,uBAHT,EAIO,qBAJP,EAKC,eALD,EAMC,eDFVyE,EAASnE,OAAOoE,KAKP,GACbC,YAcF,SAAqB1E,GAEnBmE,EAAgBnE,GAfhB2E,sBAkBF,0BAAAhC,EAAAiC,OAAA,gDACUC,EAAgB1B,EAAazB,kBAAkBoD,KAAI,SAAA1C,GAAC,OAAIA,EAAEC,OAGhEmC,EAAOO,KAAKC,EAAuBH,GAAe,SAASI,GACzDd,EAAc,CAACnD,KAAMC,EAAQ6C,gBAAiB3C,QAAS8D,OAL7D,sCAjBEC,YAsCF,SAAqBC,EAAWC,GAC9BZ,EAAOO,KAAKC,EAAuBG,EAAWC,IAtC9CC,UAyBF,SAAmB5C,EAASzC,GAC1BmE,EAAgBnE,EAChBwE,EAAOO,KAAKC,EAA8BvC,GAAS,SAAS6C,GACrDA,GAAanB,EAAc,CAACnD,KAAMC,EAAQ8C,yBA3BjDwB,iBA+BF,SAA0B9C,GACxB+B,EAAOO,KAAKC,EAA6BvC,GACzC0B,EAAc,CAACnD,KAAMC,EAAQ8C,sBAhC7BvB,YAIF,SAAqBC,EAAS+C,GAC5BrB,EAAc,CAACnD,KAAMC,EAAQ4C,aAAc1C,QAASsB,IAChD+C,GAAchB,EAAOO,KAAKC,EAAuBvC,KAkCvD+B,EAAOiB,GAAGT,GAA+B,SAASU,GAC5CA,GAAOvB,EAAc,CAACnD,KAAMC,EAAQ0C,qBAAsBxC,QAASuE,OEtDzE,IAEe,GACbC,cAGF,SAA6B3F,GAA7B,eAAA2C,EAAAiC,OAAA,kEAAAjC,EAAA,MAMSiD,MAZoB,yBAYQC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WANrD,OACQC,EADR,OAEEhG,EAAS,CAACgB,KAAMC,EAAQwC,mBAAoBtC,QAAS6E,IAFvD,uC,6CCLe,SAASC,EAASC,GAAQ,IAChCC,EAA0BD,EAA1BC,MAAOC,EAAmBF,EAAnBE,MAAOC,EAAYH,EAAZG,SACrB,OACE,kBAACC,EAAA,EAAD,CAAYC,UAAU,MAAMC,KAAK,WAC/BC,OAAQN,IAAUC,GAEjBD,IAAUC,GAASC,G,aCNX,SAASK,IACtB,OACE,6BAASC,UAAU,iCACjB,kBAACC,EAAA,EAAD,O,aCHS,SAASC,EAAT,GAA+C,IAAzBb,EAAwB,EAAxBA,QAC3Bc,GADmD,EAAfC,aACuBf,EAA3Dc,WAAWE,EAAgDhB,EAAhDgB,WAAYC,EAAoCjB,EAApCiB,UAAWC,EAAyBlB,EAAzBkB,SAAUC,EAAenB,EAAfmB,WAYpD,OACE,kBAACC,EAAA,EAAD,CAAYC,MAAOrB,EAAQqB,MAAOC,UAV9BN,EACK,oBACEF,EACH,SAAN,OAAgBI,EAAhB,YAA4BC,GAEtB,aAAN,OAAoBF,GAKoCN,UAAU,uB,uDCTxE,SAASY,EAAYC,GACnB,IAAMC,EAAW9G,KAAK+G,IAAIF,GAC1B,OAAIA,EAAQ,EACJ,IAAN,OALS,SAKT,YAAmBC,GACVD,EAAQ,EACX,IAAN,OARO,SAQP,YAAiBC,GAEX,KAAN,OAAYA,GAID,SAASE,EAAT,GAAiC,IAAXC,EAAU,EAAVA,OAEnC,OACE,kBAACC,EAAA,EAAD,CACElB,UAAU,aACVmB,MAAK,UAAKF,EAAOG,KAAZ,aAAqBR,EAAYK,EAAOJ,QAC7CQ,KAAM,kBAACC,EAAA,EAAD,MACNC,QAAQ,aCrBC,SAASC,EAAT,GAA2C,IACpDC,EAD6B1C,EAAsB,EAAtBA,MAAO2C,EAAe,EAAfA,aAGtCD,EADE1C,EAAM4C,UACI,YACH5C,EAAM6C,WAAaF,EAChB,cAEA,UAEd,IAAIG,EAAa,IAAI/H,KAAKiF,EAAM7C,WAAW4F,iBAAiBC,MAAM,IAGlE,OAFAF,EAAWG,OAAOH,EAAWI,OAAS,EAAG,GAAGC,KAAK,IAG/C,kBAACC,EAAA,EAAD,CAAMZ,QAAQ,WAAWvB,UAAU,kBACjC,iCACE,kBAACL,EAAA,EAAD,CAAY4B,QAAQ,KAAKa,MAAO,CAACC,SAAU,YAA3C,SAA8DtD,EAAM6C,UACpE,iCACE,kBAACjC,EAAA,EAAD,CAAY4B,QAAQ,YAApB,IACIxC,EAAMrE,aADV,UAC+B+G,EAD/B,OAKJ,iCACG1C,EAAMuD,QAAQnE,KAAI,SAAAoE,GAAC,OAAI,kBAAC,EAAD,CAAYtB,OAAQsB,EAAGC,IAAKD,EAAEE,eAExD,iCACE,kBAAC9C,EAAA,EAAD,CAAY4B,QAAQ,WAApB,cAA0CxC,EAAMtE,SAAhD,OAA8DoH,KC3BvD,SAASa,EAAT,GAA6C,IAAzBzH,EAAwB,EAAxBA,QAASyG,EAAe,EAAfA,aAE1C,OACE,oCACGzG,EAAQkD,KAAI,SAAA1C,GAAC,OAAI,kBAAC,IAAD,CAAMkH,GAAE,mBAAclH,EAAEC,KAAO8G,IAAK/G,EAAEC,KAAK,kBAAC,EAAD,CAAWqD,MAAOtD,EAAGiG,aAAcA,SCDvF,SAASkB,IAAoB,IAClCxJ,EAAUyJ,qBAAWC,GAArB1J,MACFmD,EAAsCnD,EAAtCmD,WAA0BtB,EAAY7B,EAA1BkC,aAGlB,OAFIiB,IAAYtB,EAAUA,EAAQc,QAAO,SAAAN,GAAC,OAAIA,EAAEsH,YAAcxG,EAAWb,QAGvEa,EACE,oCACE,kBAAC2D,EAAD,CAAab,QAAS9C,EAAY6D,cAAc,IAE9CnF,EAAQgH,OACN,kBAACS,EAAD,CAAWzH,QAASA,EAASyG,aAAcnF,EAAWqF,WAEtD,kBAACjC,EAAA,EAAD,CAAY4B,QAAQ,QAAQa,MAAO,CAAEY,UAAW,SAAhD,wBAIN,kBAACjD,EAAD,MCpBS,SAASkD,EAAT,GAAgD,EAAnB7J,MAAmB,EAAZC,SACjD,OACE,mECEW,SAAS6J,IAAiB,IAAD,EACZL,qBAAWC,GAA9B1J,EAD+B,EAC/BA,MAAOC,EADwB,EACxBA,SACd,OACE,oCACE,kBAAC8J,EAAA,EAAD,CAAM5B,QAAQ,YAAY/B,MAAOpG,EAAMuD,GAAGC,WAAYoD,UAAU,qBAC9DoD,SAAU,SAACC,EAAGC,GAAJ,OAAiBjK,EAAS,CAACgB,KAAMC,EAAQ+C,sBAAuB7C,QAAS8I,MAEnF,kBAACC,EAAA,EAAD,CAAK/D,MAAM,UAAU2B,MAAM,oBAC3B,kBAACoC,EAAA,EAAD,CAAK/D,MAAM,WAAW2B,MAAM,uBAE9B,kBAAC7B,EAAD,CAAUE,MAAOpG,EAAMuD,GAAGC,WAAY6C,MAAM,WAC1C,kBAACmD,EAAD,OAEF,kBAACtD,EAAD,CAAUE,MAAOpG,EAAMuD,GAAGC,WAAY6C,MAAM,YAC1C,kBAACwD,EAAD,Q,yFClBFO,GAAuBC,aAAOC,KAAPD,CAAmB,CAC9CE,cAAe,QAGF,SAASC,GAAT,GAAyC,IAAnBC,EAAkB,EAAlBA,MAAOT,EAAW,EAAXA,SAC1C,OAAKS,GAAUT,GAEbS,EACE,kBAACC,GAAA,EAAD,CAAalE,UAAU,YACrB,kBAACmE,GAAA,EAAD,CAAWnE,UAAU,UAArB,SACA,kBAAC4D,GAAD,CAAsBhE,MAAO,GAAKqE,EAAOT,SAAUA,GACjD,kBAACY,EAAA,EAAD,CAAkBxE,MAAM,IAAIyE,QAAS,kBAACC,GAAA,EAAD,CAAOC,MAAM,YAAahD,MAAM,MACrE,kBAAC6C,EAAA,EAAD,CAAkBxE,MAAM,IAAIyE,QAAS,kBAACC,GAAA,EAAD,CAAOC,MAAM,YAAahD,MAAM,MACrE,kBAAC6C,EAAA,EAAD,CAAkBxE,MAAM,IAAIyE,QAAS,kBAACC,GAAA,EAAD,CAAOC,MAAM,YAAahD,MAAM,MACrE,kBAAC6C,EAAA,EAAD,CAAkBxE,MAAM,IAAIyE,QAAS,kBAACC,GAAA,EAAD,CAAOC,MAAM,YAAahD,MAAM,QAT7C,K,cCLnB,SAASiD,GAAT,GAAmD,IAA1BC,EAAyB,EAAzBA,YAAajB,EAAY,EAAZA,SAE7CkB,EAAUC,iBAAOF,EACpBlG,KAAI,SAAAoE,GAAC,MAAK,CAACnB,KAAMmB,EAAEnB,KAAMqB,SAAUF,EAAEE,aACrCvH,MAAK,SAACsJ,EAAIC,GAAL,OAAYD,EAAGpD,KAAOqD,EAAGrD,MAAQ,EAAI,MAE7C,OACE,kBAACsD,GAAA,EAAD,CAAcC,UAAQ,EAACC,cAAY,EAACC,eAAa,EAACC,uBAAqB,EACrE1C,MAAO,CAAC2C,MAAO,OAAQC,aAAc,QACrCV,QAASA,EAAQW,QACjBC,eAAgB,SAAAjE,GAAM,OAAIA,EAAOG,MACjCgC,SAAUA,EACV+B,YAAa,SAAAC,GAAM,OACjB,kBAACC,EAAA,EAAD,iBACMD,EADN,CAEE7D,QAAQ,WACRJ,MAAM,iBACNmE,OAAO,eCPF,SAASC,KAAkB,IAAD,EACX1C,qBAAWC,GAA/B1J,EAD+B,EAC/BA,MAAOC,EADwB,EACxBA,SACPkD,EAAkDnD,EAAlDmD,WAAYhD,EAAsCH,EAAtCG,SAAwBiF,EAAcpF,EAA5BqD,aAExB+I,EAqBN,WAAgC,IACzB9K,EAAmC8D,EAAnC9D,aAAc+K,EAAqBjH,EAArBiH,kBACnB,OAAKA,IACL/K,EAAegL,SAAShL,GAChB+K,EAAkBxD,OAAS,GAAM0D,MAAMjL,IAAkBA,EAAe,GAzBzDkL,GA4CzB,OAzCAC,qBAAU,WACR,GAAKtJ,EAAL,CADmB,IAbE8C,EAedxF,EAAgDN,EAAhDM,SAAUY,EAAsClB,EAAtCkB,SAAUE,EAA4BpB,EAA5BoB,WAAYD,EAAgBnB,EAAhBmB,aAC3BqI,EAAkCxG,EAAvCb,IAAuBoK,EAAgBvJ,EAAvBmE,MACvBrH,EAAS,CACPgB,KAAMC,EAAQyC,sBACdvC,QAAS,CACPX,WAAUY,WAAUE,aAAYD,eAChCqI,YAAW+C,eACXlE,UAtBiBvC,EAsBS9C,EArB3B8C,EAAQc,UACTd,EAAQgB,WAAmB,IACxBhB,EAAQkB,SAASwF,WAFO,WAwB5B,CAACxJ,EAAYlD,EAAUE,IAE1BsM,qBAAU,WACRxM,EAAS,CAACgB,KAAMC,EAAQgD,mBAAoB9C,QAASgL,MACpD,CAACA,EAAkBnM,IA0BpBkD,QAAuCyJ,IAAzBxH,EAAU7D,WACtB,oCACE,kBAAC8F,EAAA,EAAD,CAAYC,MAAM,YAAYC,UAAWpE,EAAWmE,QACpD,kBAACuF,EAAA,EAAD,CAAajG,UAAU,gBACrB,kBAAC4D,GAAD,CAAaC,MAAOrF,EAAUoD,SAAUwB,SArBhD,SAA2BC,EAAGzB,GAC5BvI,EAAS,CAACgB,KAAMC,EAAQyC,sBAAuBvC,QAAS,CAACoH,eAoBkBuC,MAAM,YAC3E,kBAACkB,EAAA,EAAD,CAAWlE,MAAM,iBAAiB9G,KAAK,SAASkH,QAAQ,WAAW2E,IAAI,IAAIC,KAAK,IAAIb,OAAO,SACzF9F,MAAOhB,EAAU9D,aAAc0I,SAnBzC,SAA2BC,GACzBhK,EAAS,CAACgB,KAAMC,EAAQyC,sBAAuBvC,QAAS,CAACE,aAAc2I,EAAE+C,OAAO5G,MAAQkG,SAASrC,EAAE+C,OAAO5G,OAAS,OAkB/C2E,MAAM,YAEpE,kBAACH,EAAA,EAAD,CAAkBsB,OAAO,SAASnE,MAAM,oBAAoBnB,UAAU,oBACpEiE,QAAS,kBAACoC,EAAA,EAAD,CAAQ7G,MAAM,aAAa8G,QAAS9H,EAAU7D,WAAYyI,SAlB7E,SAA2BC,GACrBA,EAAE+C,QAAQ/M,EAAS,CAACgB,KAAMC,EAAQyC,sBAAuBvC,QAAS,CAACG,WAAY0I,EAAE+C,OAAOE,YAiBYnC,MAAM,cAExG,kBAACC,GAAD,CAAeC,YAAa9H,EAAW8H,YAAajB,SAhB5D,SAA6BC,EAAGkD,GAC9BlN,EAAS,CAACgB,KAAMC,EAAQyC,sBAAuBvC,QAAS,CAACiL,kBAAmBc,EAAgBpI,KAAI,SAAAoE,GAAC,OAAIA,EAAEE,oBAmBrG,kBAAC1C,EAAD,M,WC1EAyG,GAAe,IAAIrK,MAAM,IAAIsK,KAAK,MAAMtI,KAAI,SAAAuI,GAAC,OAAI,iCACjDC,GAAa,IAAIxK,MAAM,IAAIsK,KAAK,MAAMtI,KAAI,SAACuI,EAAGE,GAAJ,OAAY,yBAAK5G,UAAU,mBAAmBwC,IAAKoE,OAEnG,SAASC,GAAYzF,GACnB,IAAM0F,EAAc1F,EAAKA,EAAK2F,YAAY,KAAO,GACjD,MAAO,UAAG3F,EAAK,IAAR,OAAa0F,GAAcE,cAGrB,SAASC,GAAT,GAA6B,IAEtCC,EAAMC,EAAWC,EAFYrI,EAAQ,EAARA,MAC3BsI,EAAkBtI,EAAMuD,QAAQgF,MAAK,SAAA/E,GAAC,OAAIA,EAAEsB,OAAStB,EAAEsB,MAAM0D,OAAShF,EAAEsB,MAAM0D,MAAMtF,UAEtFoF,IAEFF,GADAD,EAAOG,EAAgBxD,MAAM0D,MAAMpJ,KAAI,SAACqJ,EAAGZ,GAAJ,MAAa,CAACa,QAASb,EAAM,EAAGc,IAAKF,EAAEE,SAC7D3L,QAAO,SAAAwG,GAAC,OAAIA,EAAEkF,QAAU,MACzCL,EAAWF,EAAKnL,QAAO,SAAAwG,GAAC,OAAIA,EAAEkF,QAAU,MAE1C,IAAME,EAAQ5I,EAAMuD,QAAQnE,KAAI,SAAAoE,GAAC,MAAK,CACpCnB,KAAMmB,EAAEnB,KACRwG,SAAUf,GAAYtE,EAAEnB,MACxBmG,MAAQhF,EAAEsB,MAAM0D,OAAShF,EAAEsB,MAAM0D,MAAMtF,OAAUM,EAAEsB,MAAM0D,MAAMpJ,KAAI,SAACqJ,EAAGZ,GAAJ,OACjE,yBAAK5G,UAAU,qCAAqCwC,IAAKoE,GACvD,0BAAM5G,UAAU,2BAA2BoC,MAAO,CAChD+B,MAAO,yBACP0D,aAAcL,EAAEM,MAAQN,EAAEO,QAAW,qBACrCC,gBAAiBR,EAAEM,MAAQ,yBAE1BN,EAAES,aAKPzB,OAGJ,OACE,0BAAM0B,GAAG,cACNhB,EACC,oCACE,+BACCC,EAAUhJ,KAAI,SAAAuJ,GAAG,OAAI,kBAAC/H,EAAA,EAAD,CAAY4B,QAAQ,UAAUiB,IAAKkF,EAAID,QAASzH,UAAU,QAAQ0H,EAAID,QAAQ,6BAAK,0BAAMzH,UAAU,OAAO0H,EAAIA,SACnIC,EAAMxJ,KAAI,SAACoE,GAAD,OACT,kBAAC,IAAM4F,SAAP,CAAgB3F,IAAKD,EAAEnB,MACrB,yBAAKpB,UAAU,kCAAkCwC,IAAKD,EAAEnB,MAAOmB,EAAEqF,UAChErF,EAAEgF,MAAMxL,QAAO,SAAC2K,EAAGE,GAAJ,OAAYA,EAAM,SAGrCD,GACD,+BACCS,EAASjJ,KAAI,SAAAuJ,GAAG,OAAI,kBAAC/H,EAAA,EAAD,CAAY4B,QAAQ,UAAUiB,IAAKkF,EAAID,QAASzH,UAAU,QAAQ0H,EAAID,QAAQ,6BAAK,0BAAMzH,UAAU,OAAO0H,EAAIA,SAClIC,EAAMxJ,KAAI,SAACoE,GAAD,OACT,kBAAC,IAAM4F,SAAP,CAAgB3F,IAAKD,EAAEnB,MACrB,yBAAKpB,UAAU,kCAAkCwC,IAAKD,EAAEnB,MAAOmB,EAAEqF,UAChErF,EAAEgF,MAAMxL,QAAO,SAAC2K,EAAGE,GAAJ,OAAYA,EAAM,UAKxC,kBAACjH,EAAA,EAAD,CAAY4B,QAAQ,QAAQa,MAAO,CAAEkD,OAAQ,YAAc8C,WAAY,YAAvE,0C,uECzDR,SAASvB,GAAYzF,GACnB,IAAM0F,EAAc1F,EAAKA,EAAK2F,YAAY,KAAO,GACjD,MAAO,UAAG3F,EAAK,IAAR,OAAa0F,GAAcE,cA2BrB,SAASqB,GAAT,GAAkC,IACzC/F,EADwC,EAATvD,MACfuD,QAAQnE,KAAI,SAAAoE,GAAC,MAAK,CACtCnB,KAAMmB,EAAEnB,KACRwG,SAAUf,GAAYtE,EAAEnB,MACxBP,MAAO0B,EAAE1B,MACTyH,SAAU/F,EAAEsB,MAAM0D,MAAMgB,QAAO,SAACZ,EAAOa,GAAR,OAAiBA,EAAKV,MAAQU,EAAKT,MAAQJ,EAAQ,EAAIA,IAAO,OAG/F,OACE,kBAACc,GAAA,EAAD,CAAgBzI,UAAU,gBACxB,kBAAC0I,GAAA,EAAD,CAAOR,GAAG,sBAAsBS,KAAK,SACnC,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWC,QAAS,GAApB,UACA,kBAACD,GAAA,EAAD,CAAWE,MAAM,UAAjB,SACA,kBAACF,GAAA,EAAD,CAAWE,MAAM,UAAjB,WAGJ,kBAACC,GAAA,EAAD,KACG3G,EAAQnE,KAAI,SAAAoE,GAAC,OACZ,kBAACsG,GAAA,EAAD,CAAUrG,IAAKD,EAAEnB,MACf,kBAAC0H,GAAA,EAAD,CAAWE,MAAM,UAAUzG,EAAEqF,UAC7B,kBAACkB,GAAA,EAAD,KAAYvG,EAAEnB,MACd,kBAAC0H,GAAA,EAAD,CAAWE,MAAM,UAAUzG,EAAE+F,UAC7B,kBAACQ,GAAA,EAAD,CAAWE,MAAM,SAAS5G,OAlCtBvB,EAkCsC0B,EAAE1B,MAjCpDA,EAAQ,EACH,CAACsD,MAAO,mBACNtD,EAAQ,EACV,CAACsD,MAAO,gBAER,CAACA,MAAO,4BAjBnB,SAAqBtD,GACnB,IAAMC,EAAW9G,KAAK+G,IAAIF,GAC1B,OAAIA,EAAQ,EACJ,IAAN,OALS,SAKT,YAAmBC,GACVD,EAAQ,EACX,IAAN,OARO,SAQP,YAAiBC,GAEX,KAAN,OAAYA,GAsCmDF,CAAY2B,EAAE1B,SAlCjF,IAAkBA,Q,OCjBH,SAASqI,GAAT,GAA2C,IAEpDzH,EAF6B1C,EAAsB,EAAtBA,MAAO2C,EAAe,EAAfA,aAItCD,EADE1C,EAAM4C,UACI,YACH5C,EAAM6C,WAAaF,EAChB,cAEA,UAEd,IAAIG,EAAa,IAAI/H,KAAKiF,EAAM7C,WAAW4F,iBAAiBC,MAAM,IAClEF,EAAWG,OAAOH,EAAWI,OAAS,EAAG,GAAGC,KAAK,IACjD,IAAIiH,EAAY,oCACd,8CAAgBpK,EAAM6C,WAAkB,6BACxC,4CAAW7C,EAAMrE,aAAjB,kBAAuC+G,EAAvC,OAGF,OACE,0BAAMyG,GAAG,cACP,kBAACzH,EAAA,EAAD,CAAYC,MAAO3B,EAAM+G,aAAcnF,UAAWwI,IAClD,kBAAC,GAAD,CAAWpK,MAAOA,IAClB,kBAAC,GAAD,CAAcA,MAAOA,IACrB,kBAACY,EAAA,EAAD,CAAY4B,QAAQ,UAAU2G,GAAG,wBAAjC,cAAoEnJ,EAAMtE,SAA1E,OAAwFoH,ICrB/E,SAASuH,KAAmB,IACjClB,EAAOmB,cAAPnB,GADgC,EAEZrF,qBAAWC,GAA/B1J,EAFgC,EAEhCA,MAAOC,EAFyB,EAEzBA,SACPqD,EAA6BtD,EAA7BsD,aAAcH,EAAenD,EAAfmD,WAYtB,OAVAsJ,qBAAU,WAKR,OAFAyD,EAAgB5K,UAAUwJ,EAAI7O,GAEvB,WACLiQ,EAAgB1K,iBAAiBsJ,MAElC,CAACA,EAAI7O,IAGNqD,GAAgBH,EACd,kBAAC,GAAD,CAAWwC,MAAOrC,EAAcgF,aAAcnF,EAAWgE,WAEzD,kBAACZ,EAAA,EAAD,CAAY4B,QAAQ,QAAQa,MAAO,CAAEY,UAAW,SAAhD,QAA+D,6BAA/D,0BCtBS,SAASuG,KAAkB,IAAD,EACvB1G,qBAAWC,GAApB1J,MACAG,SAFgC,EAErBM,SAFqB,EAEXY,SAFW,EAEDC,aAFC,EAEaC,WAEpD,OACE,kBAACgF,EAAA,EAAD,CAAY4B,QAAQ,MAApB,mB,wGCNW,SAASiI,GAAT,GAA4F,IAApEC,EAAmE,EAAnEA,cAAeC,EAAoD,EAApDA,YAAahJ,EAAuC,EAAvCA,MAAOiJ,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,eACvF,OACE,kBAACC,GAAA,EAAD,CAAQC,KAAML,EAAe/I,MAAOA,GAClC,kBAACqJ,GAAA,EAAD,KAAcrJ,GACd,kBAACsJ,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KAAoBN,IAEtB,kBAACO,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAQC,QAAS,kBAAMV,GAAY,KAAnC,UACA,kBAACS,GAAA,EAAD,CAAQC,QAAS,kBAAMV,GAAY,KAAQE,GAAkB,S,cCRtD,SAASS,GAAT,GAA8C,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,SAC/C,OACE,kBAACJ,GAAA,EAAD,CAAQK,UAAW,kBAACC,GAAA,EAAD,MAAkBlJ,QAAQ,WAAWoH,KAAK,QAC3DyB,QAASE,EAAaC,SAAUA,GADlC,Q,cCFW,SAASG,GAAT,GAAuC,IAAhBC,EAAe,EAAfA,aACpC,OACE,kBAACR,GAAA,EAAD,CAAQC,QAASO,EAAcH,UAAW,kBAACI,GAAA,EAAD,MAAoBrJ,QAAQ,WAAWoH,KAAK,SAAtF,U,cCFW,SAASkC,GAAT,GAAqC,IAAfC,EAAc,EAAdA,YACnC,OACE,kBAACX,GAAA,EAAD,CAAQC,QAASU,EAAaN,UAAW,kBAACO,GAAA,EAAD,MAAmBxJ,QAAQ,WAAWoH,KAAK,SAApF,S,cCFW,SAASqC,GAAT,GAAuC,IAAhBC,EAAe,EAAfA,aACpC,OACE,kBAACd,GAAA,EAAD,CAAQC,QAASa,EAAcT,UAAW,kBAACU,GAAA,EAAD,MAAoB3J,QAAQ,WAAWoH,KAAK,SAAtF,UCQW,SAASwC,KAAkB,IAAD,EACCC,oBAAS,GADV,mBAC/BC,EAD+B,KAClBC,EADkB,OAEiBF,oBAAS,GAF1B,mBAE/BG,EAF+B,KAEVC,EAFU,OAGX3I,qBAAWC,GAA/B1J,EAH+B,EAG/BA,MAAOC,EAHwB,EAGxBA,SACPsD,EAAOvD,EAAPuD,GACA8O,EAAaC,cAAbD,SACFE,EAAUC,cACVC,EAAUtH,iBAAO,MA2BvB,GAAiB,MAAbkH,EACF,MAAyB,YAAlB9O,EAAGC,WACR,kBAACuN,GAAA,EAAD,CAAQC,QAAS,kBAAMuB,EAAQG,KAAK,iBAAiBtB,UAAW,kBAACuB,GAAA,EAAD,MAASxK,QAAQ,WAAWoH,KAAK,SAAjG,SAEA,kBAACwB,GAAA,EAAD,CAAQC,QAAS,kBAAM1Q,OAAOC,aAAaqS,SAASzK,QAAQ,WAAWoH,KAAK,SAA5E,2BAEG,GAAiB,iBAAb8C,EACT,OAAO,8BACL,kBAACf,GAAD,CAAcC,aA1BlB,WACEgB,EAAQM,YAwBD,OAEL,kBAAC5B,GAAD,CAAYC,YAlChB,WACEhB,EAAgB/K,YAAYnF,EAAMqD,cAAc,SAAUyP,EAAKnN,GAC7D1F,EAAS,CAAEgB,KAAMC,EAAQ2C,aAAczC,QAASuE,IAChD4M,EAAQG,KAAR,mBAAyB/M,EAAMrD,UA+Ba6O,SAAU5N,EAAGE,mBAEtD,GAAI4O,EAASU,WAAW,aAAc,CAC3C,IAAK/S,EAAMsD,aAAc,OAAO,KAChC,IACMmC,EADWvC,EAAgB1B,cAAcf,WACbT,EAAMsD,aAAa7C,SACrD,OAAO,8BACL,kBAACmR,GAAD,CAAcC,aAAc,kBAAMO,GAAuB,MADpD,OAEC,kBAACX,GAAD,CAAaC,YA/BvB,SAAqBzH,GACnBwI,EAAQ5G,QAAQmH,SAChBC,SAASC,YAAY,QACrBhB,GAAe,MA6Bb,2BAAOiB,IAAKV,EAASW,QAAS,SAACnJ,GAAD,OAAOA,EAAE+C,OAAOqG,QAAQC,aAAchT,OAAOiT,SAASC,KAAMxK,MAAO,CAACyK,SAAU,WAAY7J,WAAY,OACpI,kBAAC8J,GAAA,EAAD,CACEC,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdnD,KAAMuB,EACN6B,QAAS,kBAAM5B,GAAe,IAC9B6B,iBAAkB,IAClBC,QAAQ,uCAEV,kBAAC5D,GAAD,CACEC,cAAe8B,EACf7B,YAAa,SAAC2D,GAAD,OAvCnB,SAAsBA,EAAWvR,EAAS+C,GACxC2M,GAAuB,GACnB6B,IACF/D,EAAgBzN,YAAYC,EAAS+C,GACrC8M,EAAQ2B,QAAQ,MAmCcrC,CAAaoC,EAAWjU,EAAMsD,aAAahB,IAAKmD,IAC5E6B,MAAM,iBACNiJ,cAAe9K,EACb,kDAEA,mCAEF+K,eAAe,kBAGd,OACE,KCtFI,SAAS2D,KACtB,OACE,kBAACC,GAAA,EAAD,CAAQX,SAAS,UACf,kBAACY,GAAA,EAAD,CAASzN,UAAU,2BACjB,kBAACL,EAAA,EAAD,CAAY4B,QAAQ,MAApB,aAGA,kBAAC4J,GAAD,Q,4CCNO,SAASuC,KACtB,IAAM/B,EAAUC,cACTH,EAAYC,cAAZD,SACP,OACE,kBAACkC,GAAA,EAAD,CAAkBnO,MAAOiM,EAAUrI,SAAU,SAACC,EAAGuK,GAAJ,OAAiBjC,EAAQG,KAAK8B,IAAWC,YAAU,GAC9F,kBAACC,GAAA,EAAD,CAAwBtO,MAAM,IAAI2B,MAAM,UAAUE,KAAM,kBAAC0M,GAAA,EAAD,QACxD,kBAACD,GAAA,EAAD,CAAwBtO,MAAM,YAAY2B,MAAM,WAAWE,KAAM,kBAAC2M,GAAA,EAAD,SCyBxDC,OAzBf,WACE,OACE,kBAACC,EAAA,EAAD,CAAKlO,UAAU,aACb,kBAACuN,GAAD,MACA,kBAACW,EAAA,EAAD,CAAKlO,UAAU,gBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmO,KAAK,eAAeC,OAAQ,kBACjC,kBAAC7I,GAAD,SAEF,kBAAC,IAAD,CAAO4I,KAAK,eAAeC,OAAQ,kBACjC,kBAAChF,GAAD,SAEF,kBAAC,IAAD,CAAO+E,KAAK,YAAYC,OAAQ,kBAC9B,kBAAC7E,GAAD,SAEF,kBAAC,IAAD,CAAO4E,KAAK,IAAIC,OAAQ,kBACtB,kBAAClL,EAAD,WAIN,kBAACwK,GAAD,Q,mBCHSW,OAtBf,SAAuB9O,GACrB,IAAMoM,EAAUC,cACTvS,EAAYwJ,qBAAWC,GAAvBzJ,SAFqB,EAGI+R,mBAAS,IAHb,mBAGrB3Q,EAHqB,KAGX6T,EAHW,KAU5B,OACE,oCACE,kBAAC3O,EAAA,EAAD,CAAY4B,QAAQ,KAAKvB,UAAU,cAAcoC,MAAO,CAAC4C,aAAc,SAAvE,aAA0F,6BAA1F,cACA,kBAACrF,EAAA,EAAD,CAAY4B,QAAQ,QAAQvB,UAAU,eAAtC,+FAAgJ,6BAAK,8BACrJ,kBAACqF,EAAA,EAAD,CAAWT,aAAa,MAAMrD,QAAQ,WAAWgN,YAAY,YAAYC,WAAS,EAChFhP,MAAO/E,EAAU2I,SAAU,SAACC,GAAD,OAAOiL,EAAYjL,EAAE+C,OAAO5G,UAEzD,kBAAC2K,GAAA,EAAD,CAAQC,QAZZ,WACE9N,EAAgBzB,eAAeJ,EAAUpB,GACzCsS,EAAQG,KAAK,MAUsBvB,SAAU9P,EAASwH,OAAS,GAAKxH,EAASwH,OAAS,GAAIG,MAAO,CAACY,UAAW,QAASzB,QAAQ,aAA5H,YCDSkN,OAff,WACE,OACE,kBAACP,EAAA,EAAD,CAAKlO,UAAU,YACb,kBAACuN,GAAD,MACA,kBAACmB,GAAA,EAAD,CAAW1O,UAAU,gBACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO2O,OAAK,EAACR,KAAK,WAAWC,OAAQ,kBACnC,kBAAC,GAAD,aCJG,SAASQ,KACtB,IAAMjD,EAAUC,cADY,EAEFiD,qBAAWtR,EAAclB,GAFvB,mBAErBjD,EAFqB,KAEdC,EAFc,KAgB5B,OAZAwM,qBAAU,WAER,IAAMiJ,EAAUC,EAAe/P,cAAc3F,EAAW,MAOxD,OALAiQ,EAAgBvL,YAAY1E,GAC5BiQ,EAAgBtL,wBAEZ1B,EAAgBhD,WAAWD,IAAWsS,EAAQ2B,QAAQ,YAEnD,WAAQ0B,cAAcF,MAC5B,IAGD,kBAAChM,EAAcmM,SAAf,CAAwBzP,MAAO,CAACpG,QAAOC,aACrC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO8U,KAAK,WAAWC,OAAQ,kBAC7B,kBAAC,GAAD,SAGF,kBAAC,IAAD,CAAOD,KAAK,IAAIC,OAAQ,kBACtB,kBAAC,GAAD,W,OCtBUc,QACW,cAA7BxV,OAAOiT,SAASwC,UAEe,UAA7BzV,OAAOiT,SAASwC,UAEhBzV,OAAOiT,SAASwC,SAASpQ,MACvB,2D,uBCRFqQ,GAA0B,IAArB1V,OAAO2V,YAEhBhD,SAASiD,gBAAgBlN,MAAMmN,YAAY,OAA3C,UAAsDH,GAAtD,OAGA1V,OAAO8V,iBAAiB,UAAU,WAEhC,IAAIJ,EAA0B,IAArB1V,OAAO2V,YAChBhD,SAASiD,gBAAgBlN,MAAMmN,YAAY,OAA3C,UAAsDH,EAAtD,UAGF,IAsBMK,GAAQC,aAtBI,CAChBC,QAAS,CACPC,QAAS,CAAEC,KAAM,UAAWC,aAAc,WAC1CC,UAAW,CAAEF,KAAM,UAAWC,aAAc,YAE9CE,UAAW,CACTC,0BAA2B,CACzB,KAAQ,CACN,MAAS,QACT,aAAc,CACZ,MAAS,aAIfC,oBAAqB,CACnB,KAAQ,CACNlI,gBAAiB,cAMe,eAExCmI,IAAS/B,OACP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOD,KAAK,IAAIC,OAAQ,kBACtB,kBAACgC,GAAA,EAAD,CAAeX,MAAOA,IACpB,kBAACb,GAAD,WAIJvC,SAASgE,eAAe,SD8EtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtR,MAAK,SAAAuR,GACjCA,EAAaC,iB","file":"static/js/main.e9410d1b.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport default createContext({state: null, dispatch: null});","import { actions } from '../reducers/store-reducer';\n\nexport default {\n  initialize,\n  getSettings,\n  updateUsername\n};\n\nconst SETTINGS_KEY = 'settings';\nconst USERNAME_SUBKEY = 'username';\nconst DEVICE_SUBKEY = 'deviceId';\nconst MONEY_PER_SKIN_SUBKEY = 'moneyPerSkin';\nconst CARRY_SKINS_SUBKEY = 'carrySkins';\n\nfunction getSettings() {\n  return JSON.parse(window.localStorage.getItem(SETTINGS_KEY));\n}\n\nfunction updateUsername(username, dispatch) {\n  let settings = JSON.parse(window.localStorage.getItem(SETTINGS_KEY));\n  settings[USERNAME_SUBKEY] = username;\n  window.localStorage.setItem(SETTINGS_KEY, JSON.stringify(settings));\n  dispatch({type: actions.UPDATE_USERNAME, payload: username});\n}\n\n// return true if had to initialize (first visit for this user on the device)\nfunction initialize(dispatch) {\n  let settings = JSON.parse(window.localStorage.getItem(SETTINGS_KEY));\n  // FYI, store-reducer would have already set the initialState from the current settings\n  if (settings) {\n    return false;\n  } else { \n    // First visit on this device!\n    settings = {};\n    const deviceId = Date.now() + Math.floor(Math.random() * 1000);\n    settings[DEVICE_SUBKEY] = deviceId;\n    const username = '';\n    settings[USERNAME_SUBKEY] = username;\n    const moneyPerSkin = 5;\n    settings[MONEY_PER_SKIN_SUBKEY] = moneyPerSkin;\n    const carrySkins = true;\n    settings[CARRY_SKINS_SUBKEY] = carrySkins;\n    window.localStorage.setItem(SETTINGS_KEY, JSON.stringify(settings));\n    dispatch({type: actions.UPDATE_SETTINGS, payload: {deviceId, username, moneyPerSkin, carrySkins}});\n    // return true so that app will go to welcome screen & get username\n    return true;\n  }\n}","export default {\n  getSavedMatches,\n  setSavedMatches,\n  // getMatchesByTourneyId,\n  // getCurAndPrevSavedMatches,\n  updateSavedMatch,\n  saveNewMatch,\n  deleteMatch\n};\n\nconst MATCHES_KEY = 'matches';\n\n// Callback used to sort matches\nfunction matchSort(a, b) {\n  return (a.createdAt > b.createdAt) ? -1 : 1;\n}\n\n// Used to sync with matches that exist on server (may have been deleted)\nfunction setSavedMatches(matches) {\n  matches.sort(matchSort);\n  window.localStorage.setItem(MATCHES_KEY, JSON.stringify(matches));\n}\n\nfunction deleteMatch(matchId) {\n  let savedMatches = getSavedMatches();\n  savedMatches = savedMatches.filter(m => m._id !== matchId);\n  window.localStorage.setItem(MATCHES_KEY, JSON.stringify(savedMatches));\n  return savedMatches;\n}\n\nfunction saveNewMatch(matchDoc) {\n  const savedMatches = getSavedMatches();\n  savedMatches.unshift(matchDoc);\n  savedMatches.sort(matchSort);\n  window.localStorage.setItem(MATCHES_KEY, JSON.stringify(savedMatches));\n}\n\nfunction updateSavedMatch(matchDoc) {\n  if (!matchDoc) return;\n  const savedMatches = getSavedMatches();\n  const matchIdx = savedMatches.findIndex(m => m._id === matchDoc._id);\n  if (matchIdx === -1) {\n    savedMatches.unshift(matchDoc);\n    savedMatches.sort(matchSort);\n  } else {\n    savedMatches[matchIdx] = matchDoc;\n  }\n  window.localStorage.setItem(MATCHES_KEY, JSON.stringify(savedMatches));\n}\n\n// function getMatchesByTourneyId(tourneyId) {\n//   const matches = getSavedMatches();\n//   return matches.filter(m => m.tourneyId === tourneyId);\n// }\n\nfunction getSavedMatches() {\n  let savedMatches = JSON.parse(window.localStorage.getItem(MATCHES_KEY));\n  if (!Array.isArray(savedMatches)) {\n    // Initialize curMatches to empty array\n    window.localStorage.setItem(MATCHES_KEY, '[]');\n    savedMatches = [];\n  }\n  return savedMatches;\n}","import settingsService from '../services/settingsService';\nimport matchService from '../services/matchService';\n\nconst settings = settingsService.getSettings();\nconst savedMatches = matchService.getSavedMatches();\n\nexport const initialState = {\n  settings: settings || {\n    deviceId: '',\n    username: '',\n    moneyPerSkin: 0,\n    carrySkins: true\n  },\n  curTourney: null,\n  savedMatches,\n  newMatchData: {},\n  viewingMatch: null,\n  ui: {\n    matchesTab: 'current',\n    saveBtnDisabled: false\n  }\n};\n\nexport const actions = {\n  UPDATE_SETTINGS: 'UPDATE_SETTINGS',\n  UPDATE_USERNAME: 'UPDATE_USERNAME',\n  UPDATE_CUR_TOURNEY: 'UPDATE_CUR_TOURNEY',\n  UPDATE_NEW_MATCH_DATA: 'UPDATE_NEW_MATCH_DATA',\n  UPDATE_VIEWING_MATCH: 'UPDATE_VIEWING_MATCH',\n  CREATE_MATCH: 'CREATE_MATCH',\n  DELETE_MATCH: 'DELETE_MATCH',\n  SET_ALL_MATCHES: 'SET_ALL_MATCHES',\n  STOP_VIEWING_MATCH: 'STOP_VIEWING_MATCH',\n  UPDATE_UI_MATCHES_TAB: 'UPDATE_UI_MATCHES_TAB',\n  UPDATE_UI_SAVE_BTN: 'UPDATE_UI_SAVE_BTN'\n};\n\nfunction storeReducer(state, action) {\n  switch(action.type) {\n    case actions.UPDATE_SETTINGS:\n      return {...state, settings: {...state.settings, ...action.payload}};\n    case actions.UPDATE_USERNAME:\n      return {...state, settings: {...state.settings, username: action.payload}};\n    case actions.UPDATE_CUR_TOURNEY:\n      return {...state, curTourney: action.payload};\n    case actions.UPDATE_NEW_MATCH_DATA:\n      return {...state, newMatchData: {...state.newMatchData, ...action.payload}};\n    case actions.UPDATE_VIEWING_MATCH:\n      matchService.updateSavedMatch(action.payload);\n      return {...state, viewingMatch: action.payload};\n    case actions.SET_ALL_MATCHES:\n      matchService.setSavedMatches(action.payload);\n      return {...state, savedMatches: action.payload};\n    case actions.STOP_VIEWING_MATCH:\n      return {...state, viewingMatch: null};\n    case actions.CREATE_MATCH:\n      matchService.saveNewMatch(action.payload);\n      const savedMatches = matchService.getSavedMatches();\n      return {...state, viewingMatch: action.payload, savedMatches, newMatchData: {}};\n    case actions.DELETE_MATCH:\n      const updatedSavedMatches = matchService.deleteMatch(action.payload);\n      return {...state, savedMatches: updatedSavedMatches, viewingMatch: null};\n    case actions.UPDATE_UI_MATCHES_TAB:\n      return {...state, ui: {...state.ui, matchesTab: action.payload}};\n    case actions.UPDATE_UI_SAVE_BTN:\n      return {...state, ui: {...state.ui, saveBtnDisabled: action.payload}};\n    default:\n      console.log('Received unknow action.type', action.type);\n      return state;\n  }\n}\n\nexport default storeReducer;\n","import messages from './socketMessages';\nimport { actions } from '../reducers/store-reducer';\nimport matchService from './matchService';\n\nconst socket = window.io();\n\n// Need access to reducer's dispatch\nlet savedDispatch;\n\nexport default {\n  setDispatch,\n  syncMatchesWithServer,\n  createMatch,\n  viewMatch,\n  stopViewingMatch,\n  deleteMatch\n};\n\n/*--- Emitters ---*/\nfunction deleteMatch(matchId, isMatchOwner) {\n  savedDispatch({type: actions.DELETE_MATCH, payload: matchId});\n  if (isMatchOwner) socket.emit(messages.DELETE_MATCH, matchId);\n}\n\nfunction setDispatch(dispatch) {\n  // cache the store's dispatch function\n  savedDispatch = dispatch;\n}\n\nasync function syncMatchesWithServer() {\n    const localMatchIds = matchService.getSavedMatches().map(m => m._id);\n    // Server will return the matches still existing in the db\n    // Client will then cleanup/sync its matches locally in the callback\n    socket.emit(messages.SYNC_MATCHES, localMatchIds, function(matchesOnServer) {\n      savedDispatch({type: actions.SET_ALL_MATCHES, payload: matchesOnServer});\n    });\n}\n\nfunction viewMatch(matchId, dispatch) {\n  savedDispatch = dispatch;\n  socket.emit(messages.START_VIEWING_MATCH, matchId, function(matchExists) {\n    if (!matchExists) savedDispatch({type: actions.STOP_VIEWING_MATCH});\n  });\n}\n\nfunction stopViewingMatch(matchId) {\n  socket.emit(messages.STOP_VIEWING_MATCH, matchId);\n  savedDispatch({type: actions.STOP_VIEWING_MATCH});\n}\n\nfunction createMatch(matchData, cb) {\n  socket.emit(messages.CREATE_MATCH, matchData, cb);\n}\n\n/*--- Listeners ---*/\nsocket.on(messages.UPDATE_VIEWING_MATCH, function(match) {\n  if (match) savedDispatch({type: actions.UPDATE_VIEWING_MATCH, payload: match});\n});\n","export default {\n  CREATE_MATCH: 'CREATE_MATCH',\n  START_VIEWING_MATCH: 'START_VIEWING_MATCH',\n  UPDATE_VIEWING_MATCH: 'UPDATE_VIEWING_MATCH',\n  STOP_VIEWING_MATCH: 'STOP_VIEWING_MATCH',\n  DELETE_MATCH: 'DELETE_MATCH',\n  SYNC_MATCHES: 'SYNC_MATCHES',\n};","import { actions } from '../reducers/store-reducer';\n\nconst CUR_TOURNEY_ENDPOINT = '/api/tourneys/current';\n\nexport default {\n  setCurTourney\n};\n\nasync function setCurTourney(dispatch) {\n  const tourney = await getCurTourney();\n  dispatch({type: actions.UPDATE_CUR_TOURNEY, payload: tourney});\n}\n\nfunction getCurTourney() {\n  return fetch(CUR_TOURNEY_ENDPOINT).then(res => res.json());\n}\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\nexport default function TabPanel(props) {\n  const {value, index, children} = props;\n  return (\n    <Typography component='div' role='tabpanel'\n      hidden={value !== index}\n    >\n      {value === index && children}\n    </Typography>\n  );\n}","import React from 'react';\nimport { CircularProgress } from '@material-ui/core';\n\nexport default function CenteredSpinner() {\n  return (\n    <section className='flex-col-ctr height-width-100'>\n      <CircularProgress />\n    </section>\n  );\n}\n","import React from 'react';\nimport { CardHeader } from '@material-ui/core';\n\nexport default function TourneyCard({tourney, isCurTourney}) {\n  const { isStarted, isFinished, startDate, curRound, roundState } = tourney;\n\n  function getStatus() {\n    if (isFinished) {\n      return 'Tourney Completed';\n    } else if (isStarted) {\n      return `Round ${curRound} ${roundState}`;\n    } else {\n      return `Starts on ${startDate}`;\n    }\n  }\n\n  return (\n    <CardHeader title={tourney.title} subheader={getStatus()} className='margin-bottom-1rem'/>\n  );\n}","import React from 'react';\nimport { Chip } from '@material-ui/core';\nimport { Person } from '@material-ui/icons';\nimport './PlayerChip.css';\n\nconst up = '▲';\nconst down = '▼';\n\nfunction formatMoney(money) {\n  const absMoney = Math.abs(money);\n  if (money < 0) {\n    return ` ${down}$${absMoney}`;\n  } else if (money > 0) {\n    return ` ${up}$${absMoney}`;\n  } else {\n    return ` $${absMoney}`;\n  }\n}\n\nexport default function PlayerChip({ player }) {\n\n  return (\n    <Chip\n      className='PlayerChip'\n      label={`${player.name}\\n${formatMoney(player.money)}`}\n      icon={<Person />}\n      variant='outlined'\n    />\n  );\n\n}","import React from 'react';\nimport { Typography, Card } from '@material-ui/core';\nimport './MatchItem.css';\nimport PlayerChip from '../PlayerChip/PlayerChip';\n\nexport default function MatchItem({match, tourneyRound}) {\n  let statusMsg;\n  if (match.completed) {\n    statusMsg = 'completed'\n  } else if (match.roundNum === tourneyRound) {\n    statusMsg = 'in progress'\n  } else {\n    statusMsg = 'pending'\n  }\n  let createdMsg = new Date(match.createdAt).toLocaleString().split('');\n  createdMsg.splice(createdMsg.length - 6, 3).join('');\n  \n  return (\n    <Card variant='outlined' className='MatchItem-card'>\n      <section>\n        <Typography variant='h5' style={{fontSize: '1.25rem'}}>Round {match.roundNum}</Typography>\n        <article>\n          <Typography variant='overline'>\n            ${match.moneyPerSkin}/skin ({statusMsg})\n          </Typography>\n        </article>\n      </section>\n      <section>\n        {match.players.map(p => <PlayerChip player={p} key={p.playerId} />)}\n      </section>\n      <section>\n        <Typography variant='caption'>Created by {match.username} on {createdMsg}</Typography>\n      </section>\n    </Card>\n  );\n\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MatchItem from '../MatchItem/MatchItem';\n\nexport default function MatchList({matches, tourneyRound}) {\n  \n  return (\n    <>\n      {matches.map(m => <Link to={`/matches/${m._id}`} key={m._id}><MatchItem match={m} tourneyRound={tourneyRound} /></Link>)}\n    </>\n  );\n\n}","import React, { useContext } from 'react';\nimport StoreProvider from '../../contexts/StoreProvider';\nimport { Typography } from '@material-ui/core';\nimport CenteredSpinner from '../../components/CenteredSpinner/CenteredSpinner';\nimport TourneyCard from '../../components/TourneyCard/TourneyCard';\nimport MatchList from '../../components/MatchList/MatchList';\n\nexport default function CurTourneyScreen() {\n  const { state } = useContext(StoreProvider);\n  let { curTourney, savedMatches: matches } = state;\n  if (curTourney) matches = matches.filter(m => m.tourneyId === curTourney._id);\n\n  return (\n    curTourney ?\n      <>\n        <TourneyCard tourney={curTourney} isCurTourney={true} />\n        {\n          matches.length ?\n            <MatchList matches={matches} tourneyRound={curTourney.roundNum}/>\n            :\n            <Typography variant='body1' style={{ marginTop: '2rem' }}>You Have No Matches</Typography>\n        }\n      </>\n      :\n      <CenteredSpinner />\n  );\n}","import React from 'react';\nimport CenteredSpinner from '../../components/CenteredSpinner/CenteredSpinner';\nimport TourneyCard from '../../components/TourneyCard/TourneyCard';\n\nexport default function PrevTourneyScreen({ state, dispatch }) {\n  return (\n    <h1>TODO: This is the PrevTourneyScreen</h1>\n  );\n}","import React, { useContext } from 'react';\nimport StoreProvider from '../../contexts/StoreProvider';\nimport { actions } from '../../reducers/store-reducer';\nimport { Tabs, Tab } from '@material-ui/core';\nimport TabPanel from '../../components/TabPanel/TabPanel';\nimport CurTourneyScreen from '../CurTourneyScreen/CurTourneyScreen';\nimport PrevTourneyScreen from '../PrevTourneyScreen/PrevTourneyScreen';\n\nexport default function MatchesScreen() {\n  const {state, dispatch} = useContext(StoreProvider);\n  return (\n    <>\n      <Tabs variant='fullWidth' value={state.ui.matchesTab} className='margin-bottom-1rem'\n        onChange={(e, newValue) => dispatch({type: actions.UPDATE_UI_MATCHES_TAB, payload: newValue})}\n      >\n        <Tab value='current' label='Current Tourney' />\n        <Tab value='previous' label='Previous Tourneys' />\n      </Tabs>\n      <TabPanel value={state.ui.matchesTab} index='current'>\n        <CurTourneyScreen />\n      </TabPanel>\n      <TabPanel value={state.ui.matchesTab} index='previous'>\n        <PrevTourneyScreen />\n      </TabPanel>\n    </>\n  );\n}","import React from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport { FormControl, FormControlLabel, FormLabel, RadioGroup, Radio } from '@material-ui/core';\n\nconst HorizontalRadioGroup = styled(RadioGroup)({\n  flexDirection: 'row'\n});\n\nexport default function RoundPicker({round, onChange}) {\n  if (!round || !onChange) return null;\n  return (\n    round ?\n      <FormControl component='fieldset'>\n        <FormLabel component='legend'>Round</FormLabel>\n        <HorizontalRadioGroup value={'' + round} onChange={onChange}>\n          <FormControlLabel value='1' control={<Radio color='primary'/>} label='1' />\n          <FormControlLabel value='2' control={<Radio color='primary'/>} label='2' />\n          <FormControlLabel value='3' control={<Radio color='primary'/>} label='3' />\n          <FormControlLabel value='4' control={<Radio color='primary'/>} label='4' />\n        </HorizontalRadioGroup>\n      </FormControl>\n    :\n      null\n  );\n}","import React, { useRef } from 'react';\nimport { TextField } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\n\nexport default function SelectPlayers({ leaderboard, onChange }) {\n\n  const options = useRef(leaderboard\n    .map(p => ({name: p.name, playerId: p.playerId}))\n    .sort((p1, p2) => p1.name < p2.name ? -1 : 1));\n\n  return (\n    <Autocomplete multiple autoComplete autoHighlight filterSelectedOptions\n      style={{width: '100%', marginBottom: '8rem'}}\n      options={options.current}\n      getOptionLabel={player => player.name}\n      onChange={onChange}\n      renderInput={params => (\n        <TextField\n          {...params}\n          variant='outlined'\n          label='Select Players'\n          margin='normal'\n        />\n      )}\n    />\n  );\n\n}","import React, { useEffect, useContext } from 'react';\nimport StoreProvider from '../../contexts/StoreProvider';\nimport { actions } from '../../reducers/store-reducer';\nimport { CardHeader, CardContent, TextField, FormControlLabel, Switch } from '@material-ui/core';\nimport CenteredSpinner from '../../components/CenteredSpinner/CenteredSpinner';\nimport RoundPicker from '../../components/RoundPicker/RoundPicker';\nimport SelectPlayers from '../../components/SelectPlayers/SelectPlayers';\n\nfunction getDefaultRound(tourney) {\n  if (!tourney.isStarted) return '1';\n  if (tourney.isFinished) return '4';\n  return tourney.curRound.toString();\n}\n\nexport default function NewMatchScreen() {\n  const { state, dispatch } = useContext(StoreProvider);\n  const { curTourney, settings, newMatchData: matchData } = state;\n\n  const matchDataInvalid = getMatchDataInvalid();\n  \n  // Initialize newMatchData in store\n  useEffect(function() {\n    if (!curTourney) return;\n    const {deviceId, username, carrySkins, moneyPerSkin} = settings;\n    const {_id: tourneyId, title: tourneyTitle} = curTourney;\n    dispatch({\n      type: actions.UPDATE_NEW_MATCH_DATA,\n      payload: {\n        deviceId, username, carrySkins, moneyPerSkin,\n        tourneyId, tourneyTitle,\n        roundNum: getDefaultRound(curTourney)\n      }\n    });\n  }, [curTourney, dispatch, settings]);\n\n  useEffect(function() {\n    dispatch({type: actions.UPDATE_UI_SAVE_BTN, payload: matchDataInvalid});\n  }, [matchDataInvalid, dispatch]);\n\n  function getMatchDataInvalid() {\n    let {moneyPerSkin, selectedPlayerIds} = matchData;\n    if (!selectedPlayerIds) return true;\n    moneyPerSkin = parseInt(moneyPerSkin);\n    return (selectedPlayerIds.length < 2) || isNaN(moneyPerSkin) || (moneyPerSkin < 0);\n  }\n\n  function handleChangeRound(e, roundNum) {\n    dispatch({type: actions.UPDATE_NEW_MATCH_DATA, payload: {roundNum}});\n  }\n  \n  function handleChangeMoney(e) {\n    dispatch({type: actions.UPDATE_NEW_MATCH_DATA, payload: {moneyPerSkin: e.target.value ? parseInt(e.target.value) : ''}});\n  }\n  \n  function handleChangeCarry(e) {\n    if (e.target) dispatch({type: actions.UPDATE_NEW_MATCH_DATA, payload: {carrySkins: e.target.checked}});\n  }\n  \n  function handleChangePlayers(e, selectedPlayers) {\n    dispatch({type: actions.UPDATE_NEW_MATCH_DATA, payload: {selectedPlayerIds: selectedPlayers.map(p => p.playerId)}});\n  }\n\n  return (\n    curTourney && matchData.carrySkins !== undefined ?\n      <>\n        <CardHeader title='New Match' subheader={curTourney.title} />\n        <CardContent className='flex-col-ctr'>\n          <RoundPicker round={matchData.roundNum} onChange={handleChangeRound} color='primary' />\n          <TextField label='Money Per Skin' type='number' variant='outlined' min='1' step='1' margin='normal'\n            value={matchData.moneyPerSkin} onChange={handleChangeMoney} color='primary'\n          />\n          <FormControlLabel margin='normal' label='Carry Over Skins?' className='MuiFormLabel-root'\n            control={<Switch value='carrySkins' checked={matchData.carrySkins} onChange={handleChangeCarry} color='primary' />}\n          />\n          <SelectPlayers leaderboard={curTourney.leaderboard} onChange={handleChangePlayers} />\n        </CardContent>\n      </>\n      :\n      <CenteredSpinner />\n  );\n}","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport './MatchGrid.css';\n\nconst empty18Holes = new Array(18).fill(null).map(_ => <div></div>);\nconst gridSpacer = new Array(10).fill(null).map((_, idx) => <div className='MatchGrid-spacer' key={idx}></div>);\n\nfunction getInitials(name) {\n  const lastInitial = name[name.lastIndexOf(' ') + 1];\n  return `${name[0]}${lastInitial}`.toUpperCase();\n}\n\nexport default function MatchGrid({match}) {\n  const playerWithHoles = match.players.find(p => p.round && p.round.holes && p.round.holes.length);\n  let pars, frontPars, backPars;\n  if (playerWithHoles) {\n    pars = playerWithHoles.round.holes.map((h, idx) => ({holeNum: idx + 1, par: h.par}));\n    frontPars = pars.filter(p => p.holeNum < 10);\n    backPars = pars.filter(p => p.holeNum > 9);\n  }\n  const skins = match.players.map(p => ({\n    name: p.name,\n    initials: getInitials(p.name),\n    holes: (p.round.holes && p.round.holes.length) ? p.round.holes.map((h, idx) =>\n      <div className='player-hole-container flex-col-ctr' key={idx}>\n        <span className='player-hole flex-col-ctr' style={{\n          color: 'var(--dark-green-text)',\n          borderColor: (h.skin || h.carry) &&  'var(--light-green)',\n          backgroundColor: h.skin && 'var(--pale-green-bg)'\n        }}>\n          {h.strokes}\n        </span>\n      </div>\n      )\n      :\n      empty18Holes\n    })\n  );\n  return (\n    <main id='match-grid'>\n      {pars ?\n        <>\n          <span></span>\n          {frontPars.map(par => <Typography variant='caption' key={par.holeNum} className='hole'>{par.holeNum}<br/><span className='par'>{par.par}</span></Typography>)}\n          {skins.map((p) => (\n            <React.Fragment key={p.name}>\n              <div className='MatchGrid-initials flex-col-ctr' key={p.name}>{p.initials}</div>\n              {p.holes.filter((_, idx) => idx < 9)}\n            </React.Fragment>\n          ))}\n          {gridSpacer}\n          <span></span>\n          {backPars.map(par => <Typography variant='caption' key={par.holeNum} className='hole'>{par.holeNum}<br/><span className='par'>{par.par}</span></Typography>)}\n          {skins.map((p) => (\n            <React.Fragment key={p.name}>\n              <div className='MatchGrid-initials flex-col-ctr' key={p.name}>{p.initials}</div>\n              {p.holes.filter((_, idx) => idx > 8)}\n            </React.Fragment>\n          ))}\n        </>\n      :\n        <Typography variant='body1' style={{ margin: '2rem auto',  gridColumn: 'span 10'}}>No Player Has Started Their Round Yet</Typography>\n      }\n    </main>\n  );\n}","import React from 'react';\nimport { TableContainer, Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core';\nimport './MatchSummary.css';\n\nfunction getInitials(name) {\n  const lastInitial = name[name.lastIndexOf(' ') + 1];\n  return `${name[0]}${lastInitial}`.toUpperCase();\n}\n\nconst up = '▲';\nconst down = '▼';\n\nfunction formatMoney(money) {\n  const absMoney = Math.abs(money);\n  if (money < 0) {\n    return ` ${down}$${absMoney}`;\n  } else if (money > 0) {\n    return ` ${up}$${absMoney}`;\n  } else {\n    return ` $${absMoney}`;\n  }\n}\n\nfunction getColor(money) {\n  if (money < 0) {\n    return {color: 'var(--dark-red)'};\n  } else if (money > 0) {\n    return {color: 'var(--green)'};\n  } else {\n    return {color: 'var(--dark-green-text)'};\n  }\n}\n\nexport default function MatchSummary({ match }) {\n  const players = match.players.map(p => ({\n    name: p.name,\n    initials: getInitials(p.name),\n    money: p.money,\n    numSkins: p.round.holes.reduce((skins, hole) => hole.skin || hole.carry ? skins + 1 : skins, 0)\n  }));\n\n  return (\n    <TableContainer className='MatchSummary'>\n      <Table id='match-summary-table' size='small'>\n        <TableHead>\n          <TableRow>\n            <TableCell colSpan={2}>Player</TableCell>\n            <TableCell align='center'>Skins</TableCell>\n            <TableCell align='center'>Money</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {players.map(p =>\n            <TableRow key={p.name}>\n              <TableCell align='center'>{p.initials}</TableCell>\n              <TableCell>{p.name}</TableCell>\n              <TableCell align='center'>{p.numSkins}</TableCell>\n              <TableCell align='center' style={getColor(p.money)}>{formatMoney(p.money)}</TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n\n}","import React from 'react';\nimport { CardHeader, Typography } from '@material-ui/core';\nimport MatchGrid from '../../components/MatchGrid/MatchGrid';\nimport MatchSummary from '../../components/MatchSummary/MatchSummary';\nimport './MatchCard.css';\n\nexport default function MatchCard({match, tourneyRound}) {\n\n  let statusMsg;\n  if (match.completed) {\n    statusMsg = 'completed'\n  } else if (match.roundNum === tourneyRound) {\n    statusMsg = 'in progress'\n  } else {\n    statusMsg = 'pending'\n  }\n  let createdMsg = new Date(match.createdAt).toLocaleString().split('');\n  createdMsg.splice(createdMsg.length - 6, 3).join('');\n  let subHeader = <>\n    <span>{`Round ${match.roundNum}`}</span><br/>\n    <span>${`${match.moneyPerSkin}/skin (${statusMsg})`}</span>\n  </>;\n\n  return (\n    <main id='match-card'>\n      <CardHeader title={match.tourneyTitle} subheader={subHeader} />\n      <MatchGrid match={match} />\n      <MatchSummary match={match} />\n      <Typography variant='caption' id='MatchCard-created-by'>Created by {match.username} on {createdMsg}</Typography>\n    </main>\n  );\n\n}","import React, { useContext, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport StoreProvider from '../../contexts/StoreProvider';\nimport realtimeService from '../../services/realtimeService';\nimport MatchCard from '../../components/MatchCard/MatchCard';\nimport { Typography } from '@material-ui/core';\n\nexport default function ViewMatchScreen() {\n  const { id } = useParams();\n  const { state, dispatch } = useContext(StoreProvider);\n  const { viewingMatch, curTourney } = state;\n\n  useEffect(function () {\n    // Sends a 'VIEW_MATCH' message to server.\n    // viewingMatch state will be updated each time server sends UPDATE_VIEWING_MATCH message\n    realtimeService.viewMatch(id, dispatch);\n    // Return a cleanup function to let the server know we're no longer viewing the match\n    return function () {\n      realtimeService.stopViewingMatch(id);\n    }\n  }, [id, dispatch]);\n\n  return (\n    viewingMatch && curTourney ?\n      <MatchCard match={viewingMatch} tourneyRound={curTourney.curRound} />\n      :\n      <Typography variant='body1' style={{ marginTop: '2rem' }}>Sorry<br/>Match No Longer Exists</Typography>\n  );\n}","import React, { useContext } from 'react';\nimport StoreProvider from '../../contexts/StoreProvider';\nimport { List, ListItem, Typography } from '@material-ui/core';\n\nexport default function SettingsScreen() {\n  const {state} = useContext(StoreProvider);\n  const {settings: {deviceId, username, moneyPerSkin, carrySkins}} = state;\n\n  return (\n    <Typography variant='h2'>Settings Screen</Typography>\n  );\n}","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button } from '@material-ui/core';\n\nexport default function ConfirmDialog({isConfirmOpen, handleClose, title, dialogContent, confirmBtnText}) {\n  return (\n    <Dialog open={isConfirmOpen} title={title}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>{dialogContent}</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => handleClose(false)}>Cancel</Button>\n        <Button onClick={() => handleClose(true)}>{confirmBtnText || 'Yes'}</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { SaveOutlined } from '@material-ui/icons';\n\nexport default function ButtonSave({handleClick, disabled}) {\n  return (\n    <Button startIcon={<SaveOutlined />} variant='outlined' size='small' \n      onClick={handleClick} disabled={disabled}\n    >\n      SAVE\n    </Button>\n  );\n}","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { CancelOutlined } from '@material-ui/icons';\n\nexport default function ButtonCancel({handleCancel}) {\n  return (\n    <Button onClick={handleCancel} startIcon={<CancelOutlined />} variant='outlined' size='small'>CANCEL</Button>\n  );\n}","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { ShareOutlined } from '@material-ui/icons';\n\nexport default function ButtonShare({handleShare}) {\n  return (\n    <Button onClick={handleShare} startIcon={<ShareOutlined />} variant='outlined' size='small'>SHARE</Button>\n  );\n}","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { DeleteOutlined } from '@material-ui/icons';\n\nexport default function ButtonDelete({handleDelete}) {\n  return (\n    <Button onClick={handleDelete} startIcon={<DeleteOutlined />} variant='outlined' size='small'>DELETE</Button>\n  );\n}","import React, { useState, useContext, useRef } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Button, Snackbar } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport { actions } from '../../reducers/store-reducer';\nimport ConfirmDialog from '../ConfirmDialog/ConfirmDialog';\nimport ButtonSave from '../ButtonSave/ButtonSave';\nimport ButtonCancel from '../ButtonCancel/ButtonCancel';\nimport ButtonShare from '../ButtonShare/ButtonShare';\nimport ButtonDelete from '../ButtonDelete/ButtonDelete';\nimport StoreProvider from '../../contexts/StoreProvider';\nimport realtimeService from '../../services/realtimeService';\nimport settingsService from '../../services/settingsService';\n\nexport default function TopBarControls() {\n  const [ showCopyMsg, setShowCopyMsg ] = useState(false);\n  const [ isConfirmDeleteOpen, setIsConfirmDeleteOpen ] = useState(false);\n  const { state, dispatch } = useContext(StoreProvider);\n  const { ui } = state;\n  const { pathname } = useLocation();\n  const history = useHistory();\n  const inputEl = useRef(null);\n\n  function handleCreateMatch() {\n    realtimeService.createMatch(state.newMatchData, function (err, match) {\n      dispatch({ type: actions.CREATE_MATCH, payload: match });\n      history.push(`/matches/${match._id}`);\n    });\n  }\n\n  function handleCancelNewMatch() {\n    history.goBack();\n  }\n\n  function handleShare(e) {\n    inputEl.current.select();\n    document.execCommand('copy');\n    setShowCopyMsg(true);\n  }\n\n  function handleDelete(confirmed, matchId, isMatchOwner) {\n    setIsConfirmDeleteOpen(false);\n    if (confirmed) {\n      realtimeService.deleteMatch(matchId, isMatchOwner);\n      history.replace('/');\n    }\n  }\n\n  if (pathname === '/') {\n    return ui.matchesTab === 'current' ?\n      <Button onClick={() => history.push('/matches/new')} startIcon={<Add />} variant='outlined' size='small'>MATCH</Button>\n      :\n      <Button onClick={() => window.localStorage.clear()} variant='outlined' size='small'>TEMP CLEAR LOCALSTORAGE</Button>\n      ;\n  } else if (pathname === '/matches/new') {\n    return <span>\n      <ButtonCancel handleCancel={handleCancelNewMatch} />&nbsp;\n      <ButtonSave handleClick={handleCreateMatch} disabled={ui.saveBtnDisabled} />\n    </span>;\n  } else if (pathname.startsWith('/matches/')) {\n    if (!state.viewingMatch) return null;\n    const deviceId = settingsService.getSettings().deviceId;\n    const isMatchOwner = deviceId === state.viewingMatch.deviceId;\n    return <span>\n      <ButtonDelete handleDelete={() => setIsConfirmDeleteOpen(true)} />\n      &nbsp;<ButtonShare handleShare={handleShare} />\n      <input ref={inputEl} onFocus={(e) => e.target.blur()} defaultValue={window.location.href} style={{position: 'absolute', marginTop: -999}} />\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={showCopyMsg}\n        onClose={() => setShowCopyMsg(false)}\n        autoHideDuration={3000}\n        message='Copied Match Link to the Clipboard'\n      />\n      <ConfirmDialog\n        isConfirmOpen={isConfirmDeleteOpen}\n        handleClose={(confirmed) => handleDelete(confirmed, state.viewingMatch._id, isMatchOwner)}\n        title='Confirm Delete'\n        dialogContent={isMatchOwner ?\n          'Permanently delete this match that you created?'\n          :\n          'Remove the match from your list?'\n        }\n        confirmBtnText='Delete Match'\n      />\n    </span>;\n  } else if (pathname === '/settings') {\n    return null;\n  } else {\n    return null;\n  }\n\n}","import React from 'react';\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\nimport TopBarControls from '../TopBarControls/TopBarControls';\n\nexport default function TopBar() {\n  return (\n    <AppBar position='sticky'>\n      <Toolbar className='justify-content-between'>\n        <Typography variant=\"h6\">\n          PGA SKINS\n        </Typography>\n        <TopBarControls />\n      </Toolbar>\n    </AppBar>\n  );\n}","import React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { BottomNavigation, BottomNavigationAction } from '@material-ui/core';\nimport { Settings, GolfCourse } from '@material-ui/icons';\n\nexport default function BottomNav() {\n  const history = useHistory();\n  const {pathname} = useLocation();\n  return (\n    <BottomNavigation value={pathname} onChange={(e, newRoute) => history.push(newRoute)} showLabels>\n      <BottomNavigationAction value='/' label='Matches' icon={<GolfCourse />} />\n      <BottomNavigationAction value='/settings' label='Settings' icon={<Settings />} />\n    </BottomNavigation>\n  );\n} \n","import React from 'react';\nimport './GridWithBottomMenu.css';\nimport {Route, Switch} from 'react-router-dom';\nimport {Box} from '@material-ui/core';\nimport MatchesScreen from '../MatchesScreen/MatchesScreen';\nimport NewMatchScreen from '../NewMatchScreen/NewMatchScreen';\nimport ViewMatchScreen from '../ViewMatchScreen/ViewMatchScreen';\nimport SettingsScreen from '../SettingsScreen/SettingsScreen';\nimport TopBar from '../../components/TopBar/TopBar';\nimport BottomNav from '../../components/BottomNav/BottomNav';\n\nfunction GridWithBottomMenu() {\n  return (\n    <Box className='GWBM_grid'>\n      <TopBar />\n      <Box className='GWBM_content'>\n        <Switch>\n          <Route path='/matches/new' render={() =>\n            <NewMatchScreen />\n          } />\n          <Route path='/matches/:id' render={() =>\n            <ViewMatchScreen />\n          } />\n          <Route path='/settings' render={() =>\n            <SettingsScreen />\n          } />\n          <Route path='/' render={() =>\n            <MatchesScreen />\n          } />\n        </Switch>\n      </Box>\n      <BottomNav />\n    </Box>\n  );\n}\n\nexport default GridWithBottomMenu;","import React, {useState, useContext} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport StoreProvider from '../../contexts/StoreProvider';\nimport {Button, TextField, Typography} from '@material-ui/core';\nimport settingsService from '../../services/settingsService';\n\nfunction WelcomeScreen(props) {\n  const history = useHistory();\n  const {dispatch} = useContext(StoreProvider);\n  const [username, setUsername] = useState('');\n\n  function updateUsername() {\n    settingsService.updateUsername(username, dispatch);\n    history.push('/');\n  }\n\n  return (\n    <>\n      <Typography variant='h4' className='text-center' style={{marginBottom: '2rem'}}>Welcome to<br/>PGA SKINS!</Typography>\n      <Typography variant='body2' className='text-center'>Please enter the user name you want others to see when viewing a skins match created by you:<br/><br/></Typography>\n      <TextField autoComplete='off' variant='outlined' placeholder='User Name' fullWidth\n        value={username} onChange={(e) => setUsername(e.target.value)}\n      />\n      <Button onClick={updateUsername} disabled={username.length < 3 || username.length > 20} style={{marginTop: '1rem'}} variant='contained'>SUBMIT</Button>\n    </>\n  );\n}\n\nexport default WelcomeScreen;","import React from 'react';\nimport './GridNoMenu.css';\nimport { Route, Switch } from 'react-router-dom';\nimport { Container, Box } from '@material-ui/core';\nimport TopBar from '../../components/TopBar/TopBar';\nimport WelcomeScreen from '../WelcomeScreen/WelcomeScreen';\n\nfunction GridNoMenu() {\n  return (\n    <Box className='GNM_grid'>\n      <TopBar />\n      <Container className='flex-col-ctr'>\n        <Switch>\n          <Route exact path='/welcome' render={() =>\n            <WelcomeScreen />\n          } />\n        </Switch>\n      </Container>\n    </Box>\n  );\n}\n\nexport default GridNoMenu;","import React, { useEffect, useReducer } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport StoreProvider from './contexts/StoreProvider';\nimport storeReducer, { initialState } from './reducers/store-reducer';\nimport realtimeService from './services/realtimeService';\nimport tourneyService from './services/tourneyService';\nimport settingsService from './services/settingsService';\nimport GridWithBottomMenu from './screens/GridWithBottomMenu/GridWithBottomMenu';\nimport GridNoMenu from './screens/GridNoMenu/GridNoMenu';\n\nexport default function App() {\n  const history = useHistory();\n  const [state, dispatch] = useReducer(storeReducer, initialState);\n  \n  useEffect(function () {\n    // Fetch the current tourney from the server every hour\n    const timerId = tourneyService.setCurTourney(dispatch,  1000 * 60 * 60);\n    // Enable realtimeService to call dispatch\n    realtimeService.setDispatch(dispatch);\n    realtimeService.syncMatchesWithServer();\n    // init will return true if this is the first visit for the device\n    if (settingsService.initialize(dispatch)) history.replace('/welcome');\n    // Cleanup function\n    return () => { clearInterval(timerId); };\n  }, []);\n\n  return (\n    <StoreProvider.Provider value={{state, dispatch}}>\n      <Switch>\n        <Route path='/welcome' render={() =>\n          <GridNoMenu />\n        } />\n        {/* Routes without bottom menu go above */}\n        <Route path='/' render={() =>\n          <GridWithBottomMenu />\n        } />\n      </Switch>\n    </StoreProvider.Provider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport {createMuiTheme, ThemeProvider} from '@material-ui/core/styles';\n\n/*--- hack to fix 100vh on mobile issue ---*/\n// First we get the viewport height and we multiple it by 1% to get a value for a vh unit\nlet vh = window.innerHeight * 0.01;\n// Then we set the value in the --vh custom property to the root of the document\ndocument.documentElement.style.setProperty('--vh', `${vh}px`);\n\n// We listen to the resize event\nwindow.addEventListener('resize', () => {\n  // We execute the same script as before\n  let vh = window.innerHeight * 0.01;\n  document.documentElement.style.setProperty('--vh', `${vh}px`);\n});\n\nconst themeMint = {\n  palette: {\n    primary: { main: '#d5dcd6', contrastText: '#051907' },\n    secondary: { main: '#d8dae8', contrastText: '#051907' }\n  },\n  overrides: {\n    MuiBottomNavigationAction: {\n      \"root\": {\n        \"color\": 'white',\n        \"&$selected\": {\n          \"color\": \"#051907\"\n        }\n      }\n    },\n    MuiBottomNavigation: {\n      \"root\": {\n        backgroundColor: '#d5dcd6'\n      }\n    }\n  }\n};\n\nconst theme = createMuiTheme(themeMint, 'Minty Green');\n\nReactDOM.render(\n  <Router>\n    <Route path='/' render={() =>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    } />\n  </Router>\n  , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}