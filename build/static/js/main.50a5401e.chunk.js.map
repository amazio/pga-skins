{"version":3,"sources":["contexts/StoreProvider.js","services/settingsService.js","services/matchService.js","reducers/store-reducer.js","services/realtimeService.js","services/socketMessages.js","services/tourneyService.js","components/TabPanel/TabPanel.jsx","components/CenteredSpinner/CenteredSpinner.jsx","components/TourneyCard/TourneyCard.jsx","components/PlayerChip/PlayerChip.jsx","components/MatchItem/MatchItem.jsx","components/MatchList/MatchList.jsx","screens/CurTourneyScreen/CurTourneyScreen.jsx","screens/PrevTourneyScreen/PrevTourneyScreen.jsx","screens/MatchesScreen/MatchesScreen.jsx","components/RoundPicker/RoundPicker.jsx","components/SelectPlayers/SelectPlayers.jsx","screens/NewMatchScreen/NewMatchScreen.jsx","components/MatchGrid/MatchGrid.jsx","components/MatchSummary/MatchSummary.jsx","components/MatchCard/MatchCard.jsx","screens/ViewMatchScreen/ViewMatchScreen.jsx","screens/SettingsScreen/SettingsScreen.jsx","components/ButtonSave/ButtonSave.jsx","components/ButtonCancel/ButtonCancel.jsx","components/TopBarControls/TopBarControls.jsx","components/TopBar/TopBar.jsx","components/BottomNav/BottomNav.jsx","screens/GridWithBottomMenu/GridWithBottomMenu.jsx","screens/WelcomeScreen/WelcomeScreen.jsx","screens/GridNoMenu/GridNoMenu.jsx","App.js","serviceWorker.js","index.js"],"names":["createContext","state","dispatch","initialize","settings","JSON","parse","window","localStorage","getItem","deviceId","Date","now","Math","floor","random","setItem","stringify","type","actions","UPDATE_SETTINGS","payload","username","moneyPerSkin","carrySkins","getSettings","updateUsername","UPDATE_USERNAME","getSavedMatches","setSavedMatches","matches","getMatchesByTourneyId","tourneyId","filter","m","getCurAndPrevSavedMatches","curTourneyId","allSavedMatches","curSavedMatches","prevSavedMatches","updateSavedMatch","matchDoc","savedMatches","matchIdx","findIndex","_id","unshift","saveNewMatch","Array","isArray","settingsService","matchService","initialState","curTourney","newMatchData","viewingMatch","ui","matchesTab","saveBtnDisabled","UPDATE_CUR_TOURNEY","UPDATE_NEW_MATCH_DATA","UPDATE_VIEWING_MATCH","SET_ALL_MATCHES","STOP_VIEWING_MATCH","UPDATE_UI_MATCHES_TAB","UPDATE_UI_SAVE_BTN","storeReducer","savedDispatch","action","console","log","socket","io","setDispatch","syncMatchesWithServer","a","async","localMatchIds","map","emit","messages","matchesOnServer","createMatch","matchData","cb","viewMatch","matchId","matchExists","stopViewingMatch","on","match","setCurTourney","fetch","then","res","json","tourney","TabPanel","props","value","index","children","Typography","component","role","hidden","CenteredSpinner","className","CircularProgress","TourneyCard","isStarted","isCurTourney","isFinished","startDate","curRound","roundState","CardHeader","title","subheader","formatMoney","money","absMoney","abs","PlayerChip","player","Chip","label","name","icon","Person","variant","MatchItem","statusMsg","tourneyRound","completed","roundNum","createdMsg","createdAt","toLocaleString","split","splice","length","join","Card","style","fontSize","players","p","key","playerId","MatchList","to","CurTourneyScreen","useContext","StoreProvider","marginTop","PrevTourneyScreen","MatchesScreen","Tabs","onChange","e","newValue","Tab","HorizontalRadioGroup","styled","RadioGroup","flexDirection","RoundPicker","round","FormControl","FormLabel","FormControlLabel","control","Radio","color","SelectPlayers","leaderboard","options","useRef","sort","p1","p2","Autocomplete","multiple","autoComplete","autoHighlight","filterSelectedOptions","width","marginBottom","current","getOptionLabel","renderInput","params","TextField","margin","NewMatchScreen","matchDataInvalid","selectedPlayerIds","parseInt","isNaN","getMatchDataInvalid","useEffect","tourneyTitle","toString","undefined","CardContent","min","step","target","Switch","checked","selectedPlayers","getInitials","lastInitial","lastIndexOf","toUpperCase","MatchGrid","pars","holes","h","idx","holeNum","par","frontPars","backPars","skins","initials","borderColor","skin","carry","backgroundColor","strokes","id","Fragment","_","fill","MatchSummary","numSkins","reduce","hole","TableContainer","Table","size","TableHead","TableRow","TableCell","colSpan","align","TableBody","MatchCard","subHeader","ViewMatchScreen","useParams","realtimeService","SettingsScreen","ButtonSave","handleClick","disabled","Button","startIcon","SaveOutlined","onClick","ButtonCancel","handleCancel","CancelOutlined","TopBarControls","pathname","useLocation","history","useHistory","push","Add","goBack","err","TopBar","AppBar","position","Toolbar","BottomNav","BottomNavigation","newRoute","showLabels","BottomNavigationAction","GolfCourse","Settings","GridWithBottomMenu","Box","path","render","WelcomeScreen","useState","setUsername","placeholder","fullWidth","GridNoMenu","Container","exact","App","useReducer","timerId","tourneyService","replace","clearInterval","Provider","Boolean","location","hostname","vh","innerHeight","document","documentElement","setProperty","addEventListener","theme","createMuiTheme","palette","primary","main","contrastText","secondary","overrides","MuiBottomNavigationAction","MuiBottomNavigation","ReactDOM","ThemeProvider","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.50a5401e.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport default createContext({state: null, dispatch: null});","import { actions } from '../reducers/store-reducer';\n\nexport default {\n  initialize,\n  getSettings,\n  updateUsername\n};\n\nconst SETTINGS_KEY = 'settings';\nconst USERNAME_SUBKEY = 'username';\nconst DEVICE_SUBKEY = 'deviceId';\nconst MONEY_PER_SKIN_SUBKEY = 'moneyPerSkin';\nconst CARRY_SKINS_SUBKEY = 'carrySkins';\n\nfunction getSettings() {\n  return JSON.parse(window.localStorage.getItem(SETTINGS_KEY));\n}\n\nfunction updateUsername(username, dispatch) {\n  let settings = JSON.parse(window.localStorage.getItem(SETTINGS_KEY));\n  settings[USERNAME_SUBKEY] = username;\n  window.localStorage.setItem(SETTINGS_KEY, JSON.stringify(settings));\n  dispatch({type: actions.UPDATE_USERNAME, payload: username});\n}\n\n// return true if had to initialize (first visit for this user on the device)\nfunction initialize(dispatch) {\n  let settings = JSON.parse(window.localStorage.getItem(SETTINGS_KEY));\n  // FYI, store-reducer would have already set the initialState from the current settings\n  if (settings) {\n    return false;\n  } else { \n    // First visit on this device!\n    settings = {};\n    const deviceId = Date.now() + Math.floor(Math.random() * 1000);\n    settings[DEVICE_SUBKEY] = deviceId;\n    const username = '';\n    settings[USERNAME_SUBKEY] = username;\n    const moneyPerSkin = 5;\n    settings[MONEY_PER_SKIN_SUBKEY] = moneyPerSkin;\n    const carrySkins = true;\n    settings[CARRY_SKINS_SUBKEY] = carrySkins;\n    window.localStorage.setItem(SETTINGS_KEY, JSON.stringify(settings));\n    dispatch({type: actions.UPDATE_SETTINGS, payload: {deviceId, username, moneyPerSkin, carrySkins}});\n    // return true so that app will go to welcome screen & get username\n    return true;\n  }\n}","export default {\n  getSavedMatches,\n  setSavedMatches,\n  getMatchesByTourneyId,\n  getCurAndPrevSavedMatches,\n  updateSavedMatch,\n  saveNewMatch\n};\n\nconst MATCHES_KEY = 'matches';\n\n// Used to sync with matches that exist on server (may have been deleted)\nfunction setSavedMatches(matches) {\n  window.localStorage.setItem(MATCHES_KEY, JSON.stringify(matches));\n}\n\nfunction saveNewMatch(matchDoc) {\n  const savedMatches = getSavedMatches();\n  savedMatches.unshift(matchDoc);\n  window.localStorage.setItem(MATCHES_KEY, JSON.stringify(savedMatches));\n}\n\nfunction updateSavedMatch(matchDoc) {\n  if (!matchDoc) return;\n  const savedMatches = getSavedMatches();\n  const matchIdx = savedMatches.findIndex(m => m._id === matchDoc._id);\n  if (matchIdx === -1) {\n    savedMatches.unshift(matchDoc);\n  } else {\n    savedMatches[matchIdx] = matchDoc;\n  }\n  window.localStorage.setItem(MATCHES_KEY, JSON.stringify(savedMatches));\n}\n\nfunction getCurAndPrevSavedMatches(curTourneyId) {\n  const allSavedMatches = getSavedMatches();\n  const curSavedMatches = allSavedMatches.filter(m => m.tourneyId === curTourneyId);\n  const prevSavedMatches = allSavedMatches.filter(m => m.tourneyId !== curTourneyId);\n  return [curSavedMatches, prevSavedMatches, allSavedMatches];\n}\n\nfunction getMatchesByTourneyId(tourneyId) {\n  const matches = getSavedMatches();\n  return matches.filter(m => m.tourneyId === tourneyId);\n}\n\nfunction getSavedMatches() {\n  let savedMatches = JSON.parse(window.localStorage.getItem(MATCHES_KEY));\n  if (!Array.isArray(savedMatches)) {\n    // Initialize curMatches to empty array\n    window.localStorage.setItem(MATCHES_KEY, '[]');\n    savedMatches = [];\n  }\n  return savedMatches;\n}","import settingsService from '../services/settingsService';\nimport matchService from '../services/matchService';\n\nconst settings = settingsService.getSettings();\nconst [curSavedMatches, prevSavedMatches] = matchService.getCurAndPrevSavedMatches();\n\nexport const initialState = {\n  settings: settings || {\n    deviceId: '',\n    username: '',\n    moneyPerSkin: 0,\n    carrySkins: true\n  },\n  curTourney: null,\n  curSavedMatches: curSavedMatches,\n  prevSavedMatches: prevSavedMatches,\n  newMatchData: {},\n  viewingMatch: null,\n  ui: {\n    matchesTab: 'current',\n    saveBtnDisabled: false\n  }\n};\n\nexport const actions = {\n  UPDATE_SETTINGS: 'UPDATE_SETTINGS',\n  UPDATE_USERNAME: 'UPDATE_USERNAME',\n  UPDATE_CUR_TOURNEY: 'UPDATE_CUR_TOURNEY',\n  UPDATE_NEW_MATCH_DATA: 'UPDATE_NEW_MATCH_DATA',\n  UPDATE_VIEWING_MATCH: 'UPDATE_VIEWING_MATCH',\n  SET_ALL_MATCHES: 'SET_ALL_MATCHES',\n  STOP_VIEWING_MATCH: 'STOP_VIEWING_MATCH',\n  UPDATE_UI_MATCHES_TAB: 'UPDATE_UI_MATCHES_TAB',\n  UPDATE_UI_SAVE_BTN: 'UPDATE_UI_SAVE_BTN'\n};\n\nfunction storeReducer(state, action) {\n  let curSavedMatches, prevSavedMatches;\n  switch(action.type) {\n    case actions.UPDATE_SETTINGS:\n      return {...state, settings: {...state.settings, ...action.payload}};\n    case actions.UPDATE_USERNAME:\n      return {...state, settings: {...state.settings, username: action.payload}};\n    case actions.UPDATE_CUR_TOURNEY:\n      [curSavedMatches, prevSavedMatches] = matchService.getCurAndPrevSavedMatches(action.payload._id);\n      return {...state, curTourney: action.payload, curSavedMatches, prevSavedMatches};\n    case actions.UPDATE_NEW_MATCH_DATA:\n      return {...state, newMatchData: {...state.newMatchData, ...action.payload}};\n    case actions.UPDATE_VIEWING_MATCH:\n      matchService.updateSavedMatch(action.payload);\n      return {...state, viewingMatch: action.payload};\n    case actions.SET_ALL_MATCHES:\n      matchService.setSavedMatches(action.payload);\n      if (state.curTourney) {\n        [curSavedMatches, prevSavedMatches] = matchService.getCurAndPrevSavedMatches(state.curTourney._id);\n        return {...state, curSavedMatches, prevSavedMatches};\n      } else {\n        return {...state};\n      }\n    case actions.STOP_VIEWING_MATCH:\n      return {...state, viewingMatch: null};\n    case actions.UPDATE_UI_MATCHES_TAB:\n      return {...state, ui: {...state.ui, matchesTab: action.payload}};\n    case actions.UPDATE_UI_SAVE_BTN:\n      return {...state, ui: {...state.ui, saveBtnDisabled: action.payload}};\n    default:\n      console.log('Received unknow action.type', action.type);\n      return state;\n  }\n}\n\nexport default storeReducer;\n","import messages from './socketMessages';\nimport { actions } from '../reducers/store-reducer';\nimport matchService from './matchService';\n\nconst socket = window.io();\n\n// Need access to reducer's dispatch\nlet savedDispatch;\n\nexport default {\n  setDispatch,\n  syncMatchesWithServer,\n  createMatch,\n  viewMatch,\n  stopViewingMatch\n};\n\n/*--- Emitters ---*/\nfunction setDispatch(dispatch) {\n  // cache the store's dispatch function\n  savedDispatch = dispatch;\n}\n\nasync function syncMatchesWithServer() {\n    const localMatchIds = matchService.getSavedMatches().map(m => m._id);\n    // Server will return the matches still existing in the db\n    // Client will then cleanup/sync its matches locally in the callback\n    socket.emit(messages.SYNC_MATCHES, localMatchIds, function(matchesOnServer) {\n      savedDispatch({type: actions.SET_ALL_MATCHES, payload: matchesOnServer});\n    });\n}\n\nfunction viewMatch(matchId, dispatch) {\n  savedDispatch = dispatch;\n  socket.emit(messages.START_VIEWING_MATCH, matchId, function(matchExists) {\n    if (!matchExists) savedDispatch({type: actions.STOP_VIEWING_MATCH});\n  });\n}\n\nfunction stopViewingMatch(matchId) {\n  socket.emit(messages.STOP_VIEWING_MATCH, matchId);\n  savedDispatch({type: actions.STOP_VIEWING_MATCH});\n}\n\nfunction createMatch(matchData, cb) {\n  socket.emit(messages.CREATE_MATCH, matchData, cb);\n}\n\n/*--- Listeners ---*/\nsocket.on(messages.UPDATE_VIEWING_MATCH, function(match) {\n  if (match) savedDispatch({type: actions.UPDATE_VIEWING_MATCH, payload: match});\n});\n","export default {\n  CREATE_MATCH: 'CREATE_MATCH',\n  START_VIEWING_MATCH: 'START_VIEWING_MATCH',\n  UPDATE_VIEWING_MATCH: 'UPDATE_VIEWING_MATCH',\n  STOP_VIEWING_MATCH: 'STOP_VIEWING_MATCH',\n  SYNC_MATCHES: 'SYNC_MATCHES',\n};","import { actions } from '../reducers/store-reducer';\n\nconst CUR_TOURNEY_ENDPOINT = '/api/tourneys/current';\n\nexport default {\n  setCurTourney\n};\n\nasync function setCurTourney(dispatch) {\n  const tourney = await getCurTourney();\n  dispatch({type: actions.UPDATE_CUR_TOURNEY, payload: tourney});\n}\n\nfunction getCurTourney() {\n  return fetch(CUR_TOURNEY_ENDPOINT).then(res => res.json());\n}\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\nexport default function TabPanel(props) {\n  const {value, index, children} = props;\n  return (\n    <Typography component='div' role='tabpanel'\n      hidden={value !== index}\n    >\n      {value === index && children}\n    </Typography>\n  );\n}","import React from 'react';\nimport { CircularProgress } from '@material-ui/core';\n\nexport default function CenteredSpinner() {\n  return (\n    <section className='flex-col-ctr height-width-100'>\n      <CircularProgress />\n    </section>\n  );\n}\n","import React from 'react';\nimport { CardHeader } from '@material-ui/core';\n\nexport default function TourneyCard({tourney, isCurTourney}) {\n  const { isStarted, isFinished, startDate, curRound, roundState } = tourney;\n\n  function getStatus() {\n    if (isFinished) {\n      return 'Tourney Completed';\n    } else if (isStarted) {\n      return `Round ${curRound} ${roundState}`;\n    } else {\n      return `Starts on ${startDate}`;\n    }\n  }\n\n  return (\n    <CardHeader title={tourney.title} subheader={getStatus()} className='margin-bottom-1rem'/>\n  );\n}","import React from 'react';\nimport { Chip } from '@material-ui/core';\nimport { Person } from '@material-ui/icons';\nimport './PlayerChip.css';\n\nconst up = '▲';\nconst down = '▼';\n\nfunction formatMoney(money) {\n  const absMoney = Math.abs(money);\n  if (money < 0) {\n    return ` ${down}$${absMoney}`;\n  } else if (money > 0) {\n    return ` ${up}$${absMoney}`;\n  } else {\n    return ` $${absMoney}`;\n  }\n}\n\nexport default function PlayerChip({ player }) {\n\n  return (\n    <Chip\n      className='PlayerChip'\n      label={`${player.name}\\n${formatMoney(player.money)}`}\n      icon={<Person />}\n      variant='outlined'\n    />\n  );\n\n}","import React from 'react';\nimport { Typography, Card } from '@material-ui/core';\nimport './MatchItem.css';\nimport PlayerChip from '../PlayerChip/PlayerChip';\n\nexport default function MatchItem({match, tourneyRound}) {\n  let statusMsg;\n  if (match.completed) {\n    statusMsg = 'completed'\n  } else if (match.roundNum === tourneyRound) {\n    statusMsg = 'in progress'\n  } else {\n    statusMsg = 'pending'\n  }\n  let createdMsg = new Date(match.createdAt).toLocaleString().split('');\n  createdMsg.splice(createdMsg.length - 6, 3).join('');\n  \n  return (\n    <Card variant='outlined' className='MatchItem-card'>\n      <section>\n        <Typography variant='h5' style={{fontSize: '1.25rem'}}>Round {match.roundNum}</Typography>\n        <article>\n          <Typography variant='overline'>\n            ${match.moneyPerSkin}/skin ({statusMsg})\n          </Typography>\n        </article>\n      </section>\n      <section>\n        {match.players.map(p => <PlayerChip player={p} key={p.playerId} />)}\n      </section>\n      <section>\n        <Typography variant='caption'>Created by {match.username} on {createdMsg}</Typography>\n      </section>\n    </Card>\n  );\n\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MatchItem from '../MatchItem/MatchItem';\n\nexport default function MatchList({matches, tourneyRound}) {\n  \n  return (\n    <>\n      {matches.map(m => <Link to={`/matches/${m._id}`}  key={m._id}><MatchItem match={m} tourneyRound={tourneyRound} /></Link>)}\n    </>\n  );\n\n}","import React, { useContext } from 'react';\nimport StoreProvider from '../../contexts/StoreProvider';\nimport { Typography } from '@material-ui/core';\nimport CenteredSpinner from '../../components/CenteredSpinner/CenteredSpinner';\nimport TourneyCard from '../../components/TourneyCard/TourneyCard';\nimport MatchList from '../../components/MatchList/MatchList';\n\nexport default function CurTourneyScreen() {\n  const { state } = useContext(StoreProvider);\n  const { curTourney, curSavedMatches: matches } = state;\n\n  return (\n    curTourney ?\n      <>\n        <TourneyCard tourney={curTourney} isCurTourney={true} />\n        {\n          matches.length ?\n            <MatchList matches={matches} tourneyRound={curTourney.roundNum}/>\n            :\n            <Typography variant='body1' style={{ marginTop: '2rem' }}>You Have No Matches</Typography>\n        }\n      </>\n      :\n      <CenteredSpinner />\n  );\n}","import React from 'react';\nimport CenteredSpinner from '../../components/CenteredSpinner/CenteredSpinner';\nimport TourneyCard from '../../components/TourneyCard/TourneyCard';\n\nexport default function PrevTourneyScreen({ state, dispatch }) {\n  return (\n    <h1>TODO: This is the PrevTourneyScreen</h1>\n  );\n}","import React, { useContext } from 'react';\nimport StoreProvider from '../../contexts/StoreProvider';\nimport { actions } from '../../reducers/store-reducer';\nimport { Tabs, Tab } from '@material-ui/core';\nimport TabPanel from '../../components/TabPanel/TabPanel';\nimport CurTourneyScreen from '../CurTourneyScreen/CurTourneyScreen';\nimport PrevTourneyScreen from '../PrevTourneyScreen/PrevTourneyScreen';\n\nexport default function MatchesScreen() {\n  const {state, dispatch} = useContext(StoreProvider);\n  return (\n    <>\n      <Tabs variant='fullWidth' value={state.ui.matchesTab} className='margin-bottom-1rem'\n        onChange={(e, newValue) => dispatch({type: actions.UPDATE_UI_MATCHES_TAB, payload: newValue})}\n      >\n        <Tab value='current' label='Current Tourney' />\n        <Tab value='previous' label='Previous Tourneys' />\n      </Tabs>\n      <TabPanel value={state.ui.matchesTab} index='current'>\n        <CurTourneyScreen />\n      </TabPanel>\n      <TabPanel value={state.ui.matchesTab} index='previous'>\n        <PrevTourneyScreen />\n      </TabPanel>\n    </>\n  );\n}","import React from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport { FormControl, FormControlLabel, FormLabel, RadioGroup, Radio } from '@material-ui/core';\n\nconst HorizontalRadioGroup = styled(RadioGroup)({\n  flexDirection: 'row'\n});\n\nexport default function RoundPicker({round, onChange}) {\n  if (!round || !onChange) return null;\n  return (\n    round ?\n      <FormControl component='fieldset'>\n        <FormLabel component='legend'>Round</FormLabel>\n        <HorizontalRadioGroup value={'' + round} onChange={onChange}>\n          <FormControlLabel value='1' control={<Radio color='primary'/>} label='1' />\n          <FormControlLabel value='2' control={<Radio color='primary'/>} label='2' />\n          <FormControlLabel value='3' control={<Radio color='primary'/>} label='3' />\n          <FormControlLabel value='4' control={<Radio color='primary'/>} label='4' />\n        </HorizontalRadioGroup>\n      </FormControl>\n    :\n      null\n  );\n}","import React, { useRef } from 'react';\nimport { TextField } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\n\nexport default function SelectPlayers({ leaderboard, onChange }) {\n\n  const options = useRef(leaderboard\n    .map(p => ({name: p.name, playerId: p.playerId}))\n    .sort((p1, p2) => p1.name < p2.name ? -1 : 1));\n\n  return (\n    <Autocomplete multiple autoComplete autoHighlight filterSelectedOptions\n      style={{width: '100%', marginBottom: '8rem'}}\n      options={options.current}\n      getOptionLabel={player => player.name}\n      onChange={onChange}\n      renderInput={params => (\n        <TextField\n          {...params}\n          variant='outlined'\n          label='Select Players'\n          margin='normal'\n        />\n      )}\n    />\n  );\n\n}","import React, { useEffect, useContext } from 'react';\nimport StoreProvider from '../../contexts/StoreProvider';\nimport { actions } from '../../reducers/store-reducer';\nimport { CardHeader, CardContent, TextField, FormControlLabel, Switch } from '@material-ui/core';\nimport CenteredSpinner from '../../components/CenteredSpinner/CenteredSpinner';\nimport RoundPicker from '../../components/RoundPicker/RoundPicker';\nimport SelectPlayers from '../../components/SelectPlayers/SelectPlayers';\n\nfunction getDefaultRound(tourney) {\n  if (!tourney.isStarted) return '1';\n  if (tourney.isFinished) return '4';\n  return tourney.curRound.toString();\n}\n\nexport default function NewMatchScreen() {\n  const { state, dispatch } = useContext(StoreProvider);\n  const { curTourney, settings, newMatchData: matchData } = state;\n\n  const matchDataInvalid = getMatchDataInvalid();\n  \n  // Initialize newMatchData in store\n  useEffect(function() {\n    if (!curTourney) return;\n    const {deviceId, username, carrySkins, moneyPerSkin} = settings;\n    const {_id: tourneyId, title: tourneyTitle} = curTourney;\n    dispatch({\n      type: actions.UPDATE_NEW_MATCH_DATA,\n      payload: {\n        deviceId, username, carrySkins, moneyPerSkin,\n        tourneyId, tourneyTitle,\n        roundNum: getDefaultRound(curTourney)\n      }\n    });\n  }, [curTourney, dispatch, settings]);\n\n  useEffect(function() {\n    dispatch({type: actions.UPDATE_UI_SAVE_BTN, payload: matchDataInvalid});\n  }, [matchDataInvalid, dispatch]);\n\n  function getMatchDataInvalid() {\n    let {moneyPerSkin, selectedPlayerIds} = matchData;\n    if (!selectedPlayerIds) return true;\n    moneyPerSkin = parseInt(moneyPerSkin);\n    return (selectedPlayerIds.length < 2) || isNaN(moneyPerSkin) || (moneyPerSkin < 0);\n  }\n\n  function handleChangeRound(e, roundNum) {\n    dispatch({type: actions.UPDATE_NEW_MATCH_DATA, payload: {roundNum}});\n  }\n  \n  function handleChangeMoney(e) {\n    dispatch({type: actions.UPDATE_NEW_MATCH_DATA, payload: {moneyPerSkin: e.target.value ? parseInt(e.target.value) : ''}});\n  }\n  \n  function handleChangeCarry(e) {\n    if (e.target) dispatch({type: actions.UPDATE_NEW_MATCH_DATA, payload: {carrySkins: e.target.checked}});\n  }\n  \n  function handleChangePlayers(e, selectedPlayers) {\n    dispatch({type: actions.UPDATE_NEW_MATCH_DATA, payload: {selectedPlayerIds: selectedPlayers.map(p => p.playerId)}});\n  }\n\n  return (\n    curTourney && matchData.carrySkins !== undefined ?\n      <>\n        <CardHeader title='New Match' subheader={curTourney.title} />\n        <CardContent className='flex-col-ctr'>\n          <RoundPicker round={matchData.roundNum} onChange={handleChangeRound} color='primary' />\n          <TextField label='Money Per Skin' type='number' variant='outlined' min='1' step='1' margin='normal'\n            value={matchData.moneyPerSkin} onChange={handleChangeMoney} color='primary'\n          />\n          <FormControlLabel margin='normal' label='Carry Over Skins?' className='MuiFormLabel-root'\n            control={<Switch value='carrySkins' checked={matchData.carrySkins} onChange={handleChangeCarry} color='primary' />}\n          />\n          <SelectPlayers leaderboard={curTourney.leaderboard} onChange={handleChangePlayers} />\n        </CardContent>\n      </>\n      :\n      <CenteredSpinner />\n  );\n}","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport './MatchGrid.css';\n\nfunction getInitials(name) {\n  const lastInitial = name[name.lastIndexOf(' ') + 1];\n  return `${name[0]}${lastInitial}`.toUpperCase();\n}\n\nexport default function MatchGrid({match}) {\n  const pars = match.players[0].round.holes.map((h, idx) => ({holeNum: idx + 1, par: h.par}));\n  const frontPars = pars.filter(p => p.holeNum < 10);\n  const backPars = pars.filter(p => p.holeNum > 9);\n  const skins = match.players.map(p => ({\n    name: p.name,\n    initials: getInitials(p.name),\n    holes: p.round.holes.map((h, idx) =>\n      <div className='player-hole-container flex-col-ctr' key={idx}>\n        <span className='player-hole flex-col-ctr' style={{\n          color: 'var(--dark-green-text)',\n          borderColor: (h.skin || h.carry) &&  'var(--light-green)',\n          backgroundColor: h.skin && 'var(--pale-green-bg)'\n        }}>\n          {h.strokes}\n        </span>\n      </div>\n    )}\n  ));\n  return (\n    <main id='match-grid'>\n      <span></span>\n      {frontPars.map(par => <Typography variant='caption' key={par.holeNum} className='hole'>{par.holeNum}<br/><span className='par'>{par.par}</span></Typography>)}\n      {skins.map((p) => (\n        <React.Fragment key={p.name}>\n          <div className='MatchGrid-initials flex-col-ctr' key={p.name}>{p.initials}</div>\n          {p.holes.filter((_, idx) => idx < 9)}\n        </React.Fragment>\n      ))}\n      {new Array(10).fill(null).map((_, idx) => <div className='MatchGrid-spacer' key={idx}></div>)}\n      <span></span>\n      {backPars.map(par => <Typography variant='caption' key={par.holeNum} className='hole'>{par.holeNum}<br/><span className='par'>{par.par}</span></Typography>)}\n      {skins.map((p) => (\n        <React.Fragment key={p.name}>\n          <div className='MatchGrid-initials flex-col-ctr' key={p.name}>{p.initials}</div>\n          {p.holes.filter((_, idx) => idx > 8)}\n        </React.Fragment>\n      ))}\n    </main>\n  );\n}","import React from 'react';\nimport { TableContainer, Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core';\nimport './MatchSummary.css';\n\nfunction getInitials(name) {\n  const lastInitial = name[name.lastIndexOf(' ') + 1];\n  return `${name[0]}${lastInitial}`.toUpperCase();\n}\n\nconst up = '▲';\nconst down = '▼';\n\nfunction formatMoney(money) {\n  const absMoney = Math.abs(money);\n  if (money < 0) {\n    return ` ${down}$${absMoney}`;\n  } else if (money > 0) {\n    return ` ${up}$${absMoney}`;\n  } else {\n    return ` $${absMoney}`;\n  }\n}\n\nexport default function MatchSummary({ match }) {\n  const players = match.players.map(p => ({\n    name: p.name,\n    initials: getInitials(p.name),\n    money: p.money,\n    numSkins: p.round.holes.reduce((skins, hole) => hole.skin || hole.carry ? skins + 1 : skins, 0)\n  }));\n\n  return (\n    <TableContainer className='MatchSummary'>\n      <Table id='match-summary-table' size='small'>\n        <TableHead>\n          <TableRow>\n            <TableCell colSpan={2}>Player</TableCell>\n            <TableCell align='center'>Skins</TableCell>\n            <TableCell align='center'>Money</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {players.map(p =>\n            <TableRow key={p.name}>\n              <TableCell align='center'>{p.initials}</TableCell>\n              <TableCell>{p.name}</TableCell>\n              <TableCell align='center'>{p.numSkins}</TableCell>\n              <TableCell align='center'>{formatMoney(p.money)}</TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n\n}","import React from 'react';\nimport { CardHeader, Typography } from '@material-ui/core';\nimport MatchGrid from '../../components/MatchGrid/MatchGrid';\nimport MatchSummary from '../../components/MatchSummary/MatchSummary';\nimport './MatchCard.css';\n\nexport default function MatchCard({match, tourneyRound}) {\n\n  let statusMsg;\n  if (match.completed) {\n    statusMsg = 'completed'\n  } else if (match.roundNum === tourneyRound) {\n    statusMsg = 'in progress'\n  } else {\n    statusMsg = 'pending'\n  }\n  let createdMsg = new Date(match.createdAt).toLocaleString().split('');\n  createdMsg.splice(createdMsg.length - 6, 3).join('');\n  let subHeader = <>\n    <span>{`Round ${match.roundNum}`}</span><br/>\n    <span>${`${match.moneyPerSkin}/skin (${statusMsg})`}</span>\n  </>;\n\n  return (\n    <>\n      <CardHeader title={match.tourneyTitle} subheader={subHeader} />\n      <MatchGrid match={match} />\n      <MatchSummary match={match} />\n      <Typography variant='caption' id='MatchCard-created-by'>Created by {match.username} on {createdMsg}</Typography>\n    </>\n  );\n\n}","import React, { useContext, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport StoreProvider from '../../contexts/StoreProvider';\nimport realtimeService from '../../services/realtimeService';\nimport MatchCard from '../../components/MatchCard/MatchCard';\nimport { Typography } from '@material-ui/core';\n\nexport default function ViewMatchScreen() {\n  const { id } = useParams();\n  const { state, dispatch } = useContext(StoreProvider);\n  const { viewingMatch, curTourney } = state;\n\n  useEffect(function () {\n    // Sends a 'VIEW_MATCH' message to server.\n    // viewingMatch state will be updated each time server sends UPDATE_VIEWING_MATCH message\n    realtimeService.viewMatch(id, dispatch);\n    // Return a cleanup function to let the server know we're no longer viewing the match\n    return function () {\n      realtimeService.stopViewingMatch(id);\n    }\n  }, [id, dispatch]);\n\n  return (\n    viewingMatch && curTourney ?\n      <MatchCard match={viewingMatch} tourneyRound={curTourney.curRound} />\n      :\n      <Typography variant='body1' style={{ marginTop: '2rem' }}>Sorry<br/>Match No Longer Exists</Typography>\n  );\n}","import React, { useContext } from 'react';\nimport StoreProvider from '../../contexts/StoreProvider';\nimport { List, ListItem, Typography } from '@material-ui/core';\n\nexport default function SettingsScreen() {\n  const {state} = useContext(StoreProvider);\n  const {settings: {deviceId, username, moneyPerSkin, carrySkins}} = state;\n\n  return (\n    <Typography variant='h2'>Settings Screen</Typography>\n  );\n}","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { SaveOutlined } from '@material-ui/icons';\n\nexport default function ButtonSave({handleClick, disabled}) {\n  return (\n    <Button startIcon={<SaveOutlined />} variant='outlined' size='small' \n      onClick={handleClick} disabled={disabled}\n    >\n      SAVE\n    </Button>\n  );\n}","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { CancelOutlined } from '@material-ui/icons';\n\nexport default function ButtonCancel({handleCancel}) {\n  return (\n    <Button onClick={handleCancel} startIcon={<CancelOutlined />} variant='outlined' size='small'>CANCEL</Button>\n  );\n}","import React, { useContext } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport { actions } from '../../reducers/store-reducer';\nimport ButtonSave from '../ButtonSave/ButtonSave';\nimport ButtonCancel from '../ButtonCancel/ButtonCancel';\nimport StoreProvider from '../../contexts/StoreProvider';\nimport realtimeService from '../../services/realtimeService';\nimport matchService from '../../services/matchService';\n\nexport default function TopBarControls() {\n  const {state, dispatch} = useContext(StoreProvider);\n  const {ui} = state;\n  const {pathname} = useLocation();\n  const history = useHistory();\n\n  function handleCreateMatch() {\n    realtimeService.createMatch(state.newMatchData, function(err, match) {\n      dispatch({type: actions.UPDATE_VIEWING_MATCH, payload: match});\n      history.push(`/matches/${match._id}`);\n    });\n  }\n\n  function handleCancelNewMatch() {\n    history.goBack();\n  } \n\n  switch (pathname) {\n    case '/':\n      return ui.matchesTab === 'current' ?\n        <Button onClick={() => history.push('/matches/new')} startIcon={<Add />} variant='outlined' size='small'>MATCH</Button>\n        :\n        null;\n    case '/matches/new':\n      return <span>\n        <ButtonCancel handleCancel={handleCancelNewMatch} />&nbsp;\n        <ButtonSave handleClick={handleCreateMatch} disabled={ui.saveBtnDisabled} />\n      </span>;\n    case '/settings':\n    default:\n      return null;\n  }\n\n}","import React from 'react';\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\nimport TopBarControls from '../TopBarControls/TopBarControls';\n\nexport default function TopBar() {\n  return (\n    <AppBar position='sticky'>\n      <Toolbar className='justify-content-between'>\n        <Typography variant=\"h6\">\n          PGA SKINS\n        </Typography>\n        <TopBarControls />\n      </Toolbar>\n    </AppBar>\n  );\n}","import React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { BottomNavigation, BottomNavigationAction } from '@material-ui/core';\nimport { Settings, GolfCourse } from '@material-ui/icons';\n\nexport default function BottomNav() {\n  const history = useHistory();\n  const {pathname} = useLocation();\n  return (\n    <BottomNavigation value={pathname} onChange={(e, newRoute) => history.push(newRoute)} showLabels>\n      <BottomNavigationAction value='/' label='Matches' icon={<GolfCourse />} />\n      <BottomNavigationAction value='/settings' label='Settings' icon={<Settings />} />\n    </BottomNavigation>\n  );\n} \n","import React from 'react';\nimport './GridWithBottomMenu.css';\nimport {Route, Switch} from 'react-router-dom';\nimport {Box} from '@material-ui/core';\nimport MatchesScreen from '../MatchesScreen/MatchesScreen';\nimport NewMatchScreen from '../NewMatchScreen/NewMatchScreen';\nimport ViewMatchScreen from '../ViewMatchScreen/ViewMatchScreen';\nimport SettingsScreen from '../SettingsScreen/SettingsScreen';\nimport TopBar from '../../components/TopBar/TopBar';\nimport BottomNav from '../../components/BottomNav/BottomNav';\n\nfunction GridWithBottomMenu() {\n  return (\n    <Box className='GWBM_grid'>\n      <TopBar />\n      <Box className='GWBM_content'>\n        <Switch>\n          <Route path='/matches/new' render={() =>\n            <NewMatchScreen />\n          } />\n          <Route path='/matches/:id' render={() =>\n            <ViewMatchScreen />\n          } />\n          <Route path='/settings' render={() =>\n            <SettingsScreen />\n          } />\n          <Route path='/' render={() =>\n            <MatchesScreen />\n          } />\n        </Switch>\n      </Box>\n      <BottomNav />\n    </Box>\n  );\n}\n\nexport default GridWithBottomMenu;","import React, {useState, useContext} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport StoreProvider from '../../contexts/StoreProvider';\nimport {Button, TextField, Typography} from '@material-ui/core';\nimport settingsService from '../../services/settingsService';\n\nfunction WelcomeScreen(props) {\n  const history = useHistory();\n  const {dispatch} = useContext(StoreProvider);\n  const [username, setUsername] = useState('');\n\n  function updateUsername() {\n    settingsService.updateUsername(username, dispatch);\n    history.push('/');\n  }\n\n  return (\n    <>\n      <Typography variant='h4' className='text-center' style={{marginBottom: '2rem'}}>Welcome to<br/>PGA SKINS!</Typography>\n      <Typography variant='body2' className='text-center'>Please enter the user name you want others to see when viewing a skins match created by you:<br/><br/></Typography>\n      <TextField autoComplete='off' variant='outlined' placeholder='User Name' fullWidth\n        value={username} onChange={(e) => setUsername(e.target.value)}\n      />\n      <Button onClick={updateUsername} disabled={username.length < 3 || username.length > 20} style={{marginTop: '1rem'}} variant='contained'>SUBMIT</Button>\n    </>\n  );\n}\n\nexport default WelcomeScreen;","import React from 'react';\nimport './GridNoMenu.css';\nimport { Route, Switch } from 'react-router-dom';\nimport { Container, Box } from '@material-ui/core';\nimport TopBar from '../../components/TopBar/TopBar';\nimport WelcomeScreen from '../WelcomeScreen/WelcomeScreen';\n\nfunction GridNoMenu() {\n  return (\n    <Box className='GNM_grid'>\n      <TopBar />\n      <Container className='flex-col-ctr'>\n        <Switch>\n          <Route exact path='/welcome' render={() =>\n            <WelcomeScreen />\n          } />\n        </Switch>\n      </Container>\n    </Box>\n  );\n}\n\nexport default GridNoMenu;","import React, { useEffect, useReducer } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport StoreProvider from './contexts/StoreProvider';\nimport storeReducer, { initialState } from './reducers/store-reducer';\nimport realtimeService from './services/realtimeService';\nimport tourneyService from './services/tourneyService';\nimport settingsService from './services/settingsService';\nimport GridWithBottomMenu from './screens/GridWithBottomMenu/GridWithBottomMenu';\nimport GridNoMenu from './screens/GridNoMenu/GridNoMenu';\n\nexport default function App() {\n  const history = useHistory();\n  const [state, dispatch] = useReducer(storeReducer, initialState);\n  \n  useEffect(function () {\n    // Fetch the current tourney from the server every hour\n    const timerId = tourneyService.setCurTourney(dispatch,  1000 * 60 * 60);\n    // Enable realtimeService to call dispatch\n    realtimeService.setDispatch(dispatch);\n    realtimeService.syncMatchesWithServer();\n    // init will return true if this is the first visit for the device\n    if (settingsService.initialize(dispatch)) history.replace('/welcome');\n    // Cleanup function\n    return () => { clearInterval(timerId); };\n  }, []);\n\n  return (\n    <StoreProvider.Provider value={{state, dispatch}}>\n      <Switch>\n        <Route path='/welcome' render={() =>\n          <GridNoMenu />\n        } />\n        {/* Routes without bottom menu go above */}\n        <Route path='/' render={() =>\n          <GridWithBottomMenu />\n        } />\n      </Switch>\n    </StoreProvider.Provider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport {createMuiTheme, ThemeProvider} from '@material-ui/core/styles';\n\n/*--- hack to fix 100vh on mobile issue ---*/\n// First we get the viewport height and we multiple it by 1% to get a value for a vh unit\nlet vh = window.innerHeight * 0.01;\n// Then we set the value in the --vh custom property to the root of the document\ndocument.documentElement.style.setProperty('--vh', `${vh}px`);\n\n// We listen to the resize event\nwindow.addEventListener('resize', () => {\n  // We execute the same script as before\n  let vh = window.innerHeight * 0.01;\n  document.documentElement.style.setProperty('--vh', `${vh}px`);\n});\n\nconst themeMint = {\n  palette: {\n    primary: { main: '#d5dcd6', contrastText: '#051907' },\n    secondary: { main: '#d8dae8', contrastText: '#051907' }\n  },\n  overrides: {\n    MuiBottomNavigationAction: {\n      \"root\": {\n        \"color\": 'white',\n        \"&$selected\": {\n          \"color\": \"#051907\"\n        }\n      }\n    },\n    MuiBottomNavigation: {\n      \"root\": {\n        backgroundColor: '#d5dcd6'\n      }\n    }\n  }\n};\n\nconst theme = createMuiTheme(themeMint, 'Minty Green');\n\nReactDOM.render(\n  <Router>\n    <Route path='/' render={() =>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    } />\n  </Router>\n  , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}